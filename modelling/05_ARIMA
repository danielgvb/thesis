{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyNapc0hj/QncOhCW5BlUAGd"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install pmdarima"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ygYOw3e5T2Dr","executionInfo":{"status":"ok","timestamp":1741355915383,"user_tz":-60,"elapsed":10570,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"20c08db3-04f5-45de-a466-45a0d710db55"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pmdarima\n","  Downloading pmdarima-2.0.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl.metadata (7.8 kB)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.4.2)\n","Requirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (3.0.12)\n","Requirement already satisfied: numpy>=1.21.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.26.4)\n","Requirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.2.2)\n","Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.6.1)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.13.1)\n","Requirement already satisfied: statsmodels>=0.13.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (0.14.4)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.3.0)\n","Requirement already satisfied: setuptools!=50.0.0,>=38.6.0 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (75.1.0)\n","Requirement already satisfied: packaging>=17.1 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (24.2)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.19->pmdarima) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.19->pmdarima) (2025.1)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.19->pmdarima) (2025.1)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=0.22->pmdarima) (3.5.0)\n","Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.11/dist-packages (from statsmodels>=0.13.2->pmdarima) (1.0.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas>=0.19->pmdarima) (1.17.0)\n","Downloading pmdarima-2.0.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (2.2 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.2/2.2 MB\u001b[0m \u001b[31m8.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: pmdarima\n","Successfully installed pmdarima-2.0.4\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"id":"6aL34nvCTw97","executionInfo":{"status":"ok","timestamp":1741355933235,"user_tz":-60,"elapsed":13565,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from statsmodels.tsa.stattools import adfuller\n","from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n","from pmdarima import auto_arima"]},{"cell_type":"markdown","source":["# Covid"],"metadata":{"id":"_uWSemkj_Ox8"}},{"cell_type":"code","source":["df_covid_d = pd.read_csv(\"https://raw.githubusercontent.com/danielgvb/pandemic_modelling/refs/heads/main/Data/silver/covid_data.csv\")\n","df_covid_w = pd.read_csv(\"https://raw.githubusercontent.com/danielgvb/pandemic_modelling/refs/heads/main/Data/silver/covid_data_weekly.csv\")\n","df_covid_m = pd.read_csv(\"https://raw.githubusercontent.com/danielgvb/pandemic_modelling/refs/heads/main/Data/silver/covid_data_monthly.csv\")"],"metadata":{"id":"XVZMANFuTxpA","executionInfo":{"status":"ok","timestamp":1741356345802,"user_tz":-60,"elapsed":637,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["df_covid_d['date'] = pd.to_datetime(df_covid_d['date'])\n","df_covid_w['date'] = pd.to_datetime(df_covid_w['date'])\n","df_covid_m['date'] = pd.to_datetime(df_covid_m['date'])"],"metadata":{"id":"utzP10j4UQeI","executionInfo":{"status":"ok","timestamp":1741356345855,"user_tz":-60,"elapsed":47,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# Set 'date' as the index\n","df_covid_d.set_index('date', inplace=True)\n","df_covid_w.set_index('date', inplace=True)\n","df_covid_m.set_index('date', inplace=True)"],"metadata":{"id":"sKBMoCzUUTLw","executionInfo":{"status":"ok","timestamp":1741356345868,"user_tz":-60,"elapsed":8,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# Function to plot ACF and PACF\n","def plot_acf_pacf(series, lags=20):\n","    fig, axes = plt.subplots(1, 2, figsize=(12, 4))\n","    plot_acf(series, lags=lags, ax=axes[0])\n","    plot_pacf(series, lags=lags, ax=axes[1])\n","    plt.show()"],"metadata":{"id":"22Wqp36BUU3V","executionInfo":{"status":"ok","timestamp":1741356346171,"user_tz":-60,"elapsed":69,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# Function to perform ADF test\n","def adf_test(series):\n","    result = adfuller(series)\n","    print(f'ADF Statistic: {result[0]}')\n","    print(f'p-value: {result[1]}')\n","    print('Critical Values:')\n","    for key, value in result[4].items():\n","        print(f'   {key}: {value}')"],"metadata":{"id":"mGE6AjRCUXja","executionInfo":{"status":"ok","timestamp":1741356346875,"user_tz":-60,"elapsed":19,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Function to fit ARIMA model\n","def fit_arima(series, seasonal=True):\n","    model = auto_arima(series, seasonal=seasonal, trace=True, error_action='ignore', suppress_warnings=True)\n","    model.summary()\n","    return model"],"metadata":{"id":"b6D47YpOUcOL","executionInfo":{"status":"ok","timestamp":1741356347143,"user_tz":-60,"elapsed":7,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["df_covid_d_col = df_covid_d[df_covid_d['country'] == 'Colombia']"],"metadata":{"id":"jJMVJqvIVvLX","executionInfo":{"status":"ok","timestamp":1741356347454,"user_tz":-60,"elapsed":49,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["## Sample"],"metadata":{"id":"kHM4hl0e_Sf9"}},{"cell_type":"code","source":["#  Daily\n","series_d = df_covid_d_col['cases']\n","\n","# Plot ACF and PACF of original series\n","plot_acf_pacf(series_d)\n","\n","# Perform ADF test\n","adf_test(series_d)\n","\n","# Difference the series if necessary\n","series_d_diff = series_d.diff().dropna()\n","\n","# Plot ACF and PACF of differenced series\n","plot_acf_pacf(series_d_diff)\n","\n","# Fit ARIMA model\n","model_d = fit_arima(series_d)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hjxm2dqbUdbR","executionInfo":{"status":"ok","timestamp":1741356381615,"user_tz":-60,"elapsed":32780,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"68a670b3-9e27-487c-c3d9-11887fd97798"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["ADF Statistic: -1.422509415369804\n","p-value: 0.571438523395075\n","Critical Values:\n","   1%: -3.436196866494929\n","   5%: -2.864121720649023\n","   10%: -2.568144581443706\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x400 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA+oAAAF2CAYAAAD5pWLDAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAXXJJREFUeJzt3Xl8VPW9//H3mSyTBRISyEIgEEAFEQFLJIIoKJGAqEWRxeJlKQVrQS8GK9CrIGLLRS3FhYq2gnrFsoi7/kAE0aoUBEWqIgUMsiasSchClpnz+yNkyJBJSOBMZpK8no/HPGbmnDPf+Z6Tgc985rsZpmmaAgAAAAAAfsHm6woAAAAAAICzSNQBAAAAAPAjJOoAAAAAAPgREnUAAAAAAPwIiToAAAAAAH6ERB0AAAAAAD9Cog4AAAAAgB8hUQcAAAAAwI+QqAMAAAAA4EdI1AH4hQ0bNsgwDG3YsMHScg3D0KOPPmppmQAASNKjjz4qwzAu6LX9+vVTv379rK0QPPLGtb6Yvz1QEyTqgBf89a9/lWEYSklJuahyPvzwQ5LMGuA6AUDj8/LLL8swDNctJCREl112mSZPnqysrCzL3qegoECPPvqo5T8k15bD4VBCQoIMw9D/+3//76LK8pdz8ndcJ/gSiTrgBUuXLlVSUpI2b96s3bt3X3A5H374oWbPnm1hzRqm6q5TYWGhHn744TquEQCgrjz22GP6v//7Pz333HPq3bu3nn/+efXq1UsFBQWWlF9QUKDZs2d7TNYefvhhFRYWWvI+57N+/XodPnxYSUlJWrp06UWVVd054Sx/+dujcSJRByyWkZGhL7/8UvPnz1dMTMxFB1N/V9UXodLSUhUXF9dxbSoLCQlRYGCgr6sBAPCSQYMG6e6779ZvfvMbvfzyy5oyZYoyMjL0zjvvXFS5TqdTp0+frvaYwMBAhYSEXNT71NRrr72mX/ziF3rggQf09ttvKz8/v07e11dOnz4tp9PpcZ8/nHtd/u3ROJGoAxZbunSpoqKiNHjwYN15552VEvWqxmLv3btXhmHo5ZdfliSNHTtWCxculCS3rn3l8vPzNXXqVCUmJsput6tjx4566qmnZJpmpTq99tpr6tmzp8LCwhQVFaXrr79eH330kdsxf/3rX3XFFVfIbrcrISFBkyZNUnZ2ttsx/fr1U5cuXbR161Zdf/31CgsL0x/+8AdX3Z966iktWLBAHTp0kN1u1w8//CBJ+vHHH3XnnXcqOjpaISEhSk5O1rvvvnvea/nPf/5Tw4YNU5s2bWS325WYmKgHHnjA7Rfs810nT2PUv/nmGw0aNEgRERFq0qSJ+vfvr3/9619ux5R3qfziiy+Unp6umJgYhYeH6/bbb9fRo0fPW3cAgG/ceOONksp+OJekp556Sr1791bz5s0VGhqqHj166I033qj0OsMwNHnyZC1dutQVDxctWqSYmBhJ0uzZs10xpjyueBqnvGTJEt14442KjY2V3W5X586d9fzzz1/UORUWFuqtt97SyJEjNXz4cBUWFnr8IaKqsdhjx45VUlKSpLLvG9Wdk1TWen/dddcpPDxczZo10y9/+Uvt2LGjUrkHDx7U+PHjlZCQILvdrnbt2unee+91+6H+p59+0rBhwxQdHa2wsDBdc801+uCDD9zKKf9utGzZMj388MNq1aqVwsLClJubq7Fjx6pJkybas2ePbr75ZjVt2lSjRo2SVPZjyoIFC3TFFVcoJCREcXFxuueee3Ty5Mlqr2dxcbFmzpypHj16KDIyUuHh4bruuuv0ySefuI4533Xy9LcvLS3VnDlzXN+DkpKS9Ic//EFFRUVuxyUlJemWW27R559/rp49eyokJETt27fXq6++Wm290bjQzARYbOnSpbrjjjsUHBysu+66S88//7y++uorXX311bUq55577tGhQ4e0du1a/d///Z/bPtM0ddttt+mTTz7R+PHj1b17d61Zs0a///3vdfDgQf3lL39xHTt79mw9+uij6t27tx577DEFBwdr06ZNWr9+vQYMGCCpLNjMnj1bqampuvfee7Vz505Xvb/44gsFBQW5yjt+/LgGDRqkkSNH6u6771ZcXJxr35IlS3T69GlNnDhRdrtd0dHR+v7773XttdeqVatWmj59usLDw7VixQoNGTJEq1at0u23317lNVi5cqUKCgp07733qnnz5tq8ebOeffZZHThwQCtXrjzvdfLk+++/13XXXaeIiAg99NBDCgoK0gsvvKB+/frp008/rTSvwH333aeoqCjNmjVLe/fu1YIFCzR58mQtX778vO8FAKh7e/bskSQ1b95ckvT000/rtttu06hRo1RcXKxly5Zp2LBhev/99zV48GC3165fv14rVqzQ5MmT1aJFC3Xr1k3PP/+87r33Xt1+++264447JEldu3at8v2ff/55XXHFFbrtttsUGBio9957T7/73e/kdDo1adKkCzqnd999V3l5eRo5cqTi4+PVr18/LV26VL/61a9qXVZMTEy15/Txxx9r0KBBat++vR599FEVFhbq2Wef1bXXXquvv/7alfAfOnRIPXv2VHZ2tiZOnKhOnTrp4MGDeuONN1RQUKDg4GBlZWWpd+/eKigo0P3336/mzZvrlVde0W233aY33nij0neAOXPmKDg4WA8++KCKiooUHBwsqSwBTktLU58+ffTUU08pLCxMUtl3gJdfflnjxo3T/fffr4yMDD333HP65ptvKn1/qSg3N1d///vfddddd2nChAk6deqUXnrpJaWlpWnz5s3q3r37ea+TJ7/5zW/0yiuv6M4779TUqVO1adMmzZ07Vzt27NBbb73lduzu3bt15513avz48RozZowWL16ssWPHqkePHrriiitq+VdFg2QCsMyWLVtMSebatWtN0zRNp9Nptm7d2vzv//5v1zGffPKJKcn85JNP3F6bkZFhSjKXLFni2jZp0iTT0z/Tt99+25RkPv74427b77zzTtMwDHP37t2maZrmrl27TJvNZt5+++2mw+FwO9bpdJqmaZpHjhwxg4ODzQEDBrgd89xzz5mSzMWLF7u29e3b15RkLlq0yGPdIyIizCNHjrjt69+/v3nllVeap0+fdnvv3r17m5deemm116WgoKDSuc+dO9c0DMP8+eefz3udTNM0JZmzZs1yPR8yZIgZHBxs7tmzx7Xt0KFDZtOmTc3rr7/etW3JkiWmJDM1NdV1rUzTNB944AEzICDAzM7O9vh+AIC6Uf7/9Mcff2wePXrU3L9/v7ls2TKzefPmZmhoqHngwAHTNCvHkuLiYrNLly7mjTfe6LZdkmmz2czvv//ebfvRo0crxZJys2bNqhR/PMWutLQ0s3379m7b+vbta/bt27dG53rLLbeY1157rev5iy++aAYGBlaKuVWVOWbMGLNt27au59WdU/fu3c3Y2Fjz+PHjrm3ffvutabPZzNGjR7u2jR492rTZbOZXX31VqYzyuDllyhRTkvnPf/7Tte/UqVNmu3btzKSkJNf3jvLvAO3bt690/caMGWNKMqdPn+62/Z///KcpyVy6dKnb9tWrV1fafu51KS0tNYuKitxed/LkSTMuLs789a9/XaPrdO7fftu2baYk8ze/+Y3bcQ8++KApyVy/fr1rW9u2bU1J5meffebaduTIEdNut5tTp06t9F5onOj6Dlho6dKliouL0w033CCprBvdiBEjtGzZMjkcDsve58MPP1RAQIDuv/9+t+1Tp06VaZqu2WDffvttOZ1OzZw5Uzab+z/38u5aH3/8sYqLizVlyhS3YyZMmKCIiIhK3dPsdrvGjRvnsV5Dhw51dROTpBMnTmj9+vUaPny4Tp06pWPHjunYsWM6fvy40tLStGvXLh08eLDK8wwNDXU9zs/P17Fjx9S7d2+ZpqlvvvmmukvkkcPh0EcffaQhQ4aoffv2ru0tW7bUr371K33++efKzc11e83EiRPdurZdd911cjgc+vnnn2v9/gAA66WmpiomJkaJiYkaOXKkmjRporfeekutWrWS5B5LTp48qZycHF133XX6+uuvK5XVt29fde7c+aLqU/H9cnJydOzYMfXt21c//fSTcnJyal3e8ePHtWbNGt11112ubUOHDpVhGFqxYsVF1fVchw8f1rZt2zR27FhFR0e7tnft2lU33XSTPvzwQ0llXc7ffvtt3XrrrUpOTq5UTnnc/PDDD9WzZ0/16dPHta9JkyaaOHGi9u7d6xoiV27MmDFu16+ie++91+35ypUrFRkZqZtuusn1/eLYsWPq0aOHmjRp4taN/VwBAQGu1nqn06kTJ06otLRUycnJHj8XNVF+bdLT0922T506VZIqfZ/q3LmzrrvuOtfzmJgYdezYUT/99NMFvT8aHrq+AxZxOBxatmyZbrjhBte4OElKSUnRn//8Z61bt87V1fxi/fzzz0pISFDTpk3dtl9++eWu/VJZ9z+bzVbtl47yYzt27Oi2PTg4WO3bt6+UkLZq1coV3M7Vrl07t+e7d++WaZp65JFH9Mgjj3h8zZEjR1xfps61b98+zZw5U++++26l8WYX8mXn6NGjKigoqHSuUtm1czqd2r9/v1uXszZt2rgdFxUVJUnnHf8GAKgbCxcu1GWXXabAwEDFxcWpY8eObj88v//++3r88ce1bds2t7HCntbAPjeOXYgvvvhCs2bN0saNGytNuJqTk6PIyMhalbd8+XKVlJToqquucltJJiUlRUuXLr3g7vSeVPWdQCqLk2vWrFF+fr7y8vKUm5urLl26nLc8T0vVVvy+UrGMqq5/YGCgWrdu7bZt165dysnJUWxsrMfXHDlypNq6vfLKK/rzn/+sH3/8USUlJeetw/n8/PPPstlsuuSSS9y2x8fHq1mzZpW+T537/UIq+47B9wuUI1EHLFK+bMqyZcu0bNmySvuXLl2qAQMGePxiIMnSFndvquqXbk/7ymdrffDBB5WWlubxNecGtHIOh0M33XSTTpw4oWnTpqlTp04KDw/XwYMHNXbs2CpngrVaQECAx+2mh0n7AAB1r2fPnh5bdaWySUlvu+02XX/99frrX/+qli1bKigoSEuWLNHrr79e6fjqYlxN7NmzR/3791enTp00f/58JSYmKjg4WB9++KH+8pe/XFDsKp+U9tprr/W4/6effnL1EjMMw2N8qu/fMex2e6WegU6nU7GxsVWurlOxh9+5XnvtNY0dO1ZDhgzR73//e8XGxiogIEBz5851zXFwoar6nncuvl/gfEjUAYssXbpUsbGxrhnIK3rzzTf11ltvadGiRa4W2XNnVPfUlbqq/+zbtm2rjz/+WKdOnXJrVf/xxx9d+yWpQ4cOcjqd+uGHH9S9e/cqy5KknTt3unUHLy4uVkZGhlJTU6s44/MrLy8oKKjW5fz73//Wf/7zH73yyisaPXq0a/vatWsrHVvToBgTE6OwsDDt3Lmz0r4ff/xRNptNiYmJtaonAMB/rVq1SiEhIVqzZo3sdrtr+5IlS2pcRk1jjCS99957Kioq0rvvvuvWYlpdN+zqlC/5OnnyZPXt29dtn9Pp1H/913/p9ddf18MPPyyprEXWU9fpc79jVPf9QlKVcbJFixYKDw9XaGioIiIi9N1331Vb/7Zt21ZZVsX3uxAdOnTQxx9/rGuvvbbWP7C88cYbat++vd588023azFr1iy342rzt2/btq2cTqd27drl6jEgSVlZWcrOzr6oc0XjxBh1wAKFhYV68803dcstt+jOO++sdJs8ebJOnTqld999V23btlVAQIA+++wztzL++te/Vio3PDxcUuWk/uabb5bD4dBzzz3ntv0vf/mLDMPQoEGDJElDhgyRzWbTY489VulX/PJfbFNTUxUcHKxnnnnG7Vfcl156STk5OZVmxK2N2NhY9evXTy+88IIOHz5caX91y5yV/9JcsU6maerpp5+udGxV18lTmQMGDNA777yjvXv3urZnZWXp9ddfV58+fRQREVFtGQCA+iMgIECGYbi1KO/du1dvv/12jcson2H8fDGm/P0k99iVk5NTqx8GKipvLX7ooYcqfbcYPny4+vbt69ai3KFDB/34449u8fXbb7/VF198UaNzatmypbp3765XXnnFbd93332njz76SDfffLMkyWazaciQIXrvvfe0ZcuWSvUuP/+bb75Zmzdv1saNG1378vPz9eKLLyopKemi5gMYPny4HA6H5syZU2lfaWlptX8vT3+nTZs2udVTqt3fvvzaLFiwwG37/PnzJemivk+hcaJFHbDAu+++q1OnTum2227zuP+aa65RTEyMli5dqhEjRmjYsGF69tlnZRiGOnTooPfff9/jWKoePXpIku6//36lpaUpICBAI0eO1K233qobbrhB//M//6O9e/eqW7du+uijj/TOO+9oypQp6tChg6SybuX/8z//ozlz5ui6667THXfcIbvdrq+++koJCQmaO3euYmJiNGPGDM2ePVsDBw7Ubbfdpp07d+qvf/2rrr76at19990XdW0WLlyoPn366Morr9SECRPUvn17ZWVlaePGjTpw4IC+/fZbj6/r1KmTOnTooAcffFAHDx5URESEVq1a5XHsVlXXyZPHH39ca9euVZ8+ffS73/1OgYGBeuGFF1RUVKQnnnjios4VAOBfBg8erPnz52vgwIH61a9+pSNHjmjhwoW65JJLtH379hqVERoaqs6dO2v58uW67LLLFB0drS5dungcnz1gwAAFBwfr1ltv1T333KO8vDz97W9/U2xsrMcfrM9n6dKl6t69e5W9vW677Tbdd999+vrrr/WLX/xCv/71rzV//nylpaVp/PjxOnLkiBYtWqQrrrjCbbLU6s7pySef1KBBg9SrVy+NHz/etTxbZGSk21rrf/rTn/TRRx+pb9++mjhxoi6//HIdPnxYK1eu1Oeff65mzZpp+vTp+sc//qFBgwbp/vvvV3R0tF555RVlZGRo1apVlbqz10bfvn11zz33aO7cudq2bZsGDBigoKAg7dq1SytXrtTTTz+tO++80+Nrb7nlFr355pu6/fbbNXjwYGVkZGjRokXq3Lmz8vLyanSdztWtWzeNGTNGL774orKzs9W3b19t3rxZr7zyioYMGeKaaBioMZ/MNQ80MLfeeqsZEhJi5ufnV3nM2LFjzaCgIPPYsWPm0aNHzaFDh5phYWFmVFSUec8995jfffddpeXZSktLzfvuu8+MiYkxDcNwWwbk1KlT5gMPPGAmJCSYQUFB5qWXXmo++eSTbkuJlVu8eLF51VVXmXa73YyKijL79u3rWkKu3HPPPWd26tTJDAoKMuPi4sx7773XPHnypNsxffv2Na+44opK5Zcvz/bkk096PPc9e/aYo0ePNuPj482goCCzVatW5i233GK+8cYbrmM8Lc/2ww8/mKmpqWaTJk3MFi1amBMmTDC//fbbWl0neVhW5euvvzbT0tLMJk2amGFhYeYNN9xgfvnll27HlC/7c+6yM1UtrwcAqFtV/T99rpdeesm89NJLTbvdbnbq1MlcsmSJx2XVJJmTJk3yWMaXX35p9ujRwwwODnaLK57Keffdd82uXbuaISEhZlJSkjlv3jxz8eLFpiQzIyPDddz5lmfbunWrKcl85JFHqjxm7969piTzgQcecG177bXXzPbt25vBwcFm9+7dzTVr1lRanq26czJN0/z444/Na6+91gwNDTUjIiLMW2+91fzhhx8qvf/PP/9sjh492oyJiTHtdrvZvn17c9KkSW5Ln+3Zs8e88847zWbNmpkhISFmz549zffff9+tnPLYunLlykrvMWbMGDM8PLzKa/Diiy+aPXr0MENDQ82mTZuaV155pfnQQw+Zhw4dch1z7rV2Op3mn/70J7Nt27am3W43r7rqKvP999+v1XXy9LcvKSkxZ8+ebbZr184MCgoyExMTzRkzZrgtUWuaZcuzDR48uNK51GbJPjR8hmkyYwEAAAAAAP6CMeoAAAAAAPgREnUAAAAAAPwIiToAAAAAAH7Eq4n6Z599pltvvVUJCQkyDKNGS2Fs2LBBv/jFL2S323XJJZfo5ZdfrnTMwoULlZSUpJCQEKWkpGjz5s3WVx4AAJwXsR4AAOt5NVHPz89Xt27dtHDhwhodn5GRocGDB+uGG27Qtm3bNGXKFP3mN7/RmjVrXMcsX75c6enpmjVrlr7++mt169ZNaWlpHpe2AgAA3kWsBwDAenU267thGHrrrbc0ZMiQKo+ZNm2aPvjgA3333XeubSNHjlR2drZWr14tSUpJSdHVV1+t5557TpLkdDqVmJio++67T9OnT/fqOQAAgKoR6wEAsEagrytQ0caNG5Wamuq2LS0tTVOmTJEkFRcXa+vWrZoxY4Zrv81mU2pqqjZu3FhluUVFRSoqKnI9dzqdOnHihJo3by7DMKw9CQAALoBpmjp16pQSEhJkszXcKWSI9QCAxqo2sd6vEvXMzEzFxcW5bYuLi1Nubq4KCwt18uRJORwOj8f8+OOPVZY7d+5czZ492yt1BgDASvv371fr1q19XQ2vIdYDABq7msR6v0rUvWXGjBlKT093Pc/JyVGbNm20f/9+RURE1Lq8v6z9j17+cq8czsqjBgJshsb2TtIDN112UXUGADQuubm5SkxMVNOmTX1dlXrJ6lgvEe8BANaqTaz3q0Q9Pj5eWVlZbtuysrIUERGh0NBQBQQEKCAgwOMx8fHxVZZrt9tlt9srbY+IiLig4D267+V6ZUuWbB5G9xuGNKbv5YqICK91uQAANPRu2vUl1kvEewCAd9Qk1vvVILhevXpp3bp1btvWrl2rXr16SZKCg4PVo0cPt2OcTqfWrVvnOqYutGsRrnlDu8pW4foGGIZshjRvaFcltSBoAwDgSX2J9RLxHgDgO15tUc/Ly9Pu3btdzzMyMrRt2zZFR0erTZs2mjFjhg4ePKhXX31VkvTb3/5Wzz33nB566CH9+te/1vr167VixQp98MEHrjLS09M1ZswYJScnq2fPnlqwYIHy8/M1btw4b55KJcOSE9WlVYQGPf25JGlcnyTdndKWoA0AaFQacqyXiPcAAN/waqK+ZcsW3XDDDa7n5WPHxowZo5dfflmHDx/Wvn37XPvbtWunDz74QA888ICefvpptW7dWn//+9+VlpbmOmbEiBE6evSoZs6cqczMTHXv3l2rV6+uNOlMXWjb/GyQTr/pMoUF+9VIAgAAvK6hx3qJeA8AqHt1to66P8nNzVVkZKRycnIueNyaJBUUl6rzzDWSpB8eSyNwN3IZx/K1Yst+HThZqNZRoRqenKh2tLgAqCGrYhPKWHk9ifcAACvUJjYRaQALrNiyX9NXbZdhGDJNU4Zh6IVP92je0K4alpzo6+oBAAAAqEdI1P0ErbH1V8axfE1ftV1OU1J5B5Uz99NWbdfVSdGMZQQAEOsBADVGou4HaI2t31Zs2V+2xIKHUSSGYWj5lv2aNrCTD2oGAPAXxHoAQG2QqPuYN1pj+cW+bh04WaiqpnowTVMHThbWcY0AAP6EnlcAgNryq3XUGyNXa6wH5a2xtS2v/5836MXPftIH2w/pxc9+Uv8/b9DKWpaDmmsdFVrt37B1VGgd1wgA4E+sjvUAgIaPRN3HrGyNrfiLvcNput1PW7Vde4/l17p+GcfyNW/1j7rvH99o3uoflXEBZTR0w5MTq/0bjqBLIwA0avS8AgDUFl3ffczVGlvF+ObatMZaPVbayvF0Dbk7frsW4Zo3tKumlXdrlBRgGDJlat7QrnRnBIBGzspYDwBoHEjUfWx4cqJe+HSPx321bY31Vuv8xY6ns3oCHSuTfqvKGpacqC6tIjTo6c8lSeP6JOnulLYk6QAAS2M9AKBxoOu7j5W3xtoqDF0LMAzZDNW6NdbKsdJWjaezuju+lWPwrR7P37b52b9V+k2XkaQDACRZG+sBAI0DibofGJacqA/u7+N6Pq5PktZP7Vfr1mYrx0pb1Tpv5QQ6Vib93hjPDwBAVayK9QCAxoFE3U9Y0Rrrj63zVnbHtzLp9+cZeJnADwAaJnpeAQBqijHqDYxVY6WtGk9n5QQ6Vib9/joDr9Xj+QEAAADUP7SoN0D+1DpvZXd8K8fg++Pa53THBwAAACCRqKMaVoyns7I7vpVJvz+ufe6N7vh0owcAAADqHxJ1VMuK1nmrJtCxMun3xxl4re6Ob/Ws9gAAAADqBmPUUSfOTfjDgi/so2fleuX+tva5leP5K3ajd5V35n7aqu26OimaSYwAAAAAP0WijnrHqqTf6rIullUT+EkVutFXkfQv37Jf0wZ2qlX9Mo7la8WW/TpwslCto0I1PDlR7Uj2PeJaAQAA4GKQqAN+orw7/rTylnCVdcc3Zda6O743utEzG33NcK0AAABwsUjUAT9iVXd8f+9G31BbnBlyAAAAACswmRzgZ6yYwM/KWe2tno2+IU9y542Z+wEAAND4kKgDDZCVs9pb2Y3e6rXi/W35OauHHAAAAKBxous70ED5Yzd6Kye588ex4FZeKwAAADRetKgDDZi/daO3qsXZ6pb58jIvtnXeymsFAACAxotEHUC1rOxG72px9qA2Lc7+Om7eymsFAACAxotEHcB5DUtO1Af393E9H9cnSeun9qt1F3OrWpz9edy8VdcKAAAAjReJOoAasaIbvVUtzla1zEvemandimsFAACAxotEHUCdsqLF2R/HzQMAAABWqZNEfeHChUpKSlJISIhSUlK0efPmKo/t16+fDMOodBs8eLDrmLFjx1baP3DgwLo4FQAWuNgWZ38cN+8t/rYEHVAVYj0AANbx+vJsy5cvV3p6uhYtWqSUlBQtWLBAaWlp2rlzp2JjYysd/+abb6q4uNj1/Pjx4+rWrZuGDRvmdtzAgQO1ZMkS13O73e69kwDgd6xafm54cqJe+HSPx32+nqndH5egAzwh1gMAYC2vt6jPnz9fEyZM0Lhx49S5c2ctWrRIYWFhWrx4scfjo6OjFR8f77qtXbtWYWFhlYK33W53Oy4qKsrbpwLAz/jTuHmreWMJOsBbiPUAAFjLq4l6cXGxtm7dqtTU1LNvaLMpNTVVGzdurFEZL730kkaOHKnwcPcvyxs2bFBsbKw6duyoe++9V8ePH7e07gAaD3+cqd0bk9wB3kCsBwDAel7t+n7s2DE5HA7FxcW5bY+Li9OPP/543tdv3rxZ3333nV566SW37QMHDtQdd9yhdu3aac+ePfrDH/6gQYMGaePGjQoICKhUTlFRkYqKilzPc3NzL/CMADRU57bOhwV7fWRQtaye5C7jWL5WbNmvAycL1ToqVMOTE9WO2ehhAWI9AADW8+030fN46aWXdOWVV6pnz55u20eOHOl6fOWVV6pr167q0KGDNmzYoP79+1cqZ+7cuZo9e7bX6wsAVnFNcuchWb+QJegY6w5/RawHAKAyr3Z9b9GihQICApSVleW2PSsrS/Hx8dW+Nj8/X8uWLdP48ePP+z7t27dXixYttHv3bo/7Z8yYoZycHNdt/366jALwb1YtQcdYd3gbsR4AAOt5NVEPDg5Wjx49tG7dOtc2p9OpdevWqVevXtW+duXKlSoqKtLdd9993vc5cOCAjh8/rpYtW3rcb7fbFRER4XYDAH9m1SR33hjrzpJxqIhYDwCA9bze9T09PV1jxoxRcnKyevbsqQULFig/P1/jxo2TJI0ePVqtWrXS3Llz3V730ksvaciQIWrevLnb9ry8PM2ePVtDhw5VfHy89uzZo4ceekiXXHKJ0tLSvH06AFBnrFiCzuqx7nSjhyfEegAArOX1RH3EiBE6evSoZs6cqczMTHXv3l2rV692TTqzb98+2WzuDfs7d+7U559/ro8++qhSeQEBAdq+fbteeeUVZWdnKyEhQQMGDNCcOXNYXxVAg3Oxk9xZOda9Yjd6V3ln7qet2q6rk6JrvZwdk9w1DMR6AACsVSeTyU2ePFmTJ0/2uG/Dhg2VtnXs2LHKFqDQ0FCtWbPGyuoBQIM1PDlRL3y6x+O+2ox1lyp0o68i6V++Zb+mDexUq/JonW84iPUAAFjHq2PUAQC+ZdVYd8nabvRMcgcAAFA1v16eDQBw8awY6y5Zv2Scla3zdKEHAAANCYk6ADQCFzvWXbK2G72VrfNWd6En6QcAAL5G13cAQI1Y2Y3e1TrvQW1a563uQr9iy371//MGvfjZT/pg+yG9+NlP6v/nDVp5AcvYAQAAXCgSdQBAjQ1LTtQH9/dxPR/XJ0nrp/ardcv18OTEalvUa9o6b+U68YybBwAA/oJEHQBQK+d2o6/tWHfJutZ5q7vQW5X0AwAAXAzGqAMAfMKKSe6snODOyqQfAADgYtCiDgDwmYttnbeqC71k3bh5AACAi0WiDgCot6yc4M7KpB8AAOBikKgDAOo1qya4szLpBwAAuBiMUQcA1HtWrBMvWTNuHgAA4GKRqAMAUIFVST8AAMCFous7AAAAAAB+hEQdAAAAAAA/QqIOAAAAAIAfIVEHAAAAAMCPkKgDAAAAAOBHSNQBAAAAAPAjJOoAAAAAAPgREnUAAAAAAPwIiToAAAAAAH4k0NcVAAAAAOqDjGP5WrFlvw6cLFTrqFANT05Uuxbhvq4WgAaIRB0AAAA4jxVb9mv6qu0yDEOmacowDL3w6R7NG9pVw5ITfV09AA0MXd8BAACAamQcy9f0VdvlNCWH03S7n7Zqu/Yey/d1FQE0MCTqAAAAQDVWbNkvwzA87jMMQ8u37K/jGgFo6EjUAQAAgGocOFko0zQ97jNNUwdOFtZxjQA0dCTqAAAAQDVaR4VW26LeOiq0jmsEoKEjUQcAAACqMTw5sdoW9RFMJgfAYnWSqC9cuFBJSUkKCQlRSkqKNm/eXOWxL7/8sgzDcLuFhIS4HWOapmbOnKmWLVsqNDRUqamp2rVrl7dPAwAAVIFYj4asXYtwzRvaVbYKjeoBhiGbIc0b2lVJLNEGwGJeT9SXL1+u9PR0zZo1S19//bW6deumtLQ0HTlypMrXRERE6PDhw67bzz//7Lb/iSee0DPPPKNFixZp06ZNCg8PV1pamk6fPu3t0wEAAOcg1qMxGJacqA/u7+N6Pq5PktZP7cfSbAC8wuuJ+vz58zVhwgSNGzdOnTt31qJFixQWFqbFixdX+RrDMBQfH++6xcXFufaZpqkFCxbo4Ycf1i9/+Ut17dpVr776qg4dOqS3337b26cDAADOQaxHY9G2+dmW8/SbLqMlHYDXeDVRLy4u1tatW5Wamnr2DW02paamauPGjVW+Li8vT23btlViYqJ++ctf6vvvv3fty8jIUGZmpluZkZGRSklJqbLMoqIi5ebmut0AAMDFI9YDAGA9rybqx44dk8PhcPuVXJLi4uKUmZnp8TUdO3bU4sWL9c477+i1116T0+lU7969deDAAUlyva42Zc6dO1eRkZGuW2IiXZQAALACsR4AAOv53azvvXr10ujRo9W9e3f17dtXb775pmJiYvTCCy9ccJkzZsxQTk6O67Z//34LawwAAGqDWA8AQPW8mqi3aNFCAQEBysrKctuelZWl+Pj4GpURFBSkq666Srt375Yk1+tqU6bdbldERITbDQAAXDxiPQAA1vNqoh4cHKwePXpo3bp1rm1Op1Pr1q1Tr169alSGw+HQv//9b7Vs2VKS1K5dO8XHx7uVmZubq02bNtW4TAAAYA1iPQAA1gv09hukp6drzJgxSk5OVs+ePbVgwQLl5+dr3LhxkqTRo0erVatWmjt3riTpscce0zXXXKNLLrlE2dnZevLJJ/Xzzz/rN7/5jaSyWWKnTJmixx9/XJdeeqnatWunRx55RAkJCRoyZIi3TwcAAJyDWA8AgLW8nqiPGDFCR48e1cyZM5WZmanu3btr9erVrgli9u3bJ5vtbMP+yZMnNWHCBGVmZioqKko9evTQl19+qc6dO7uOeeihh5Sfn6+JEycqOztbffr00erVqxUSEuLt0wEAAOcg1gMAYC2vJ+qSNHnyZE2ePNnjvg0bNrg9/8tf/qK//OUv1ZZnGIYee+wxPfbYY1ZVEQAAXARiPQAA1vG7Wd8BAAAAAGjMSNQBAAAAAPAjJOoAAAAAAPgREnUAAAAAAPwIiToAAAAAAH6ERB0AAAAAAD9Cog4AAAAAgB+pk3XUAQAAYJ2MY/lasWW/DpwsVOuoUA1PTlS7FuG+rhYAwCIk6gAAAPXIii37NX3VdhmGIdM0ZRiGXvh0j+YN7aphyYm+rh4AwAJ0fQcAAKgnMo7la/qq7XKaksNput1PW7Vde4/l+7qKAAALkKgDAADUEyu27JdhGB73GYah5Vv213GNAADeQKIOAABQTxw4WSjTND3uM01TB04W1nGNAADeQKIOAABQT7SOCq22Rb11VGgd1wgA4A0k6gAAAPXE8OTEalvURzCZHAA0CCTqAAAA9US7FuGaN7SrbBUa1QMMQzZDmje0q5JYog0AGgSWZwMAAKhHhiUnqkurCA16+nNJ0rg+Sbo7pS1JOgA0ICTqAAAA9Uzb5meT8vSbLlNYMF/pAKAhoes7AAAAAAB+hEQdAAAAAAA/QqIOAAAAAIAfIVEHAAAAAMCPkKgDAAAAAOBHSNQBAAAAAPAjrOUBAMB5mKYppyk5TVNmhXubTbIHBvi6egAAoIEhUQcA1BtOpymHacrhNOU8kzw7nKbyT5e6jsnKKZI9qETmmePLE+vy46WzSbfTWXYvybW/oPhsWVv2nlRwoE1nDqkkNsKuDjFNvHfCAACgUSJRBwB4hcN5NqF2nEmwnU5TpU7TlXDnVUiw9xzNlz3QdjYJd8otKXecSbo9OV3icD3eezxfIUEX3spdVOJ0O4eq3hMAAMBbSNQBAJLcW6vLE2uHwz3BdjhN5RedTa7/k3VKQQG2Ckm1Uw7n2a7h51MxwT52quiiEmwAAICGok4mk1u4cKGSkpIUEhKilJQUbd68ucpj//a3v+m6665TVFSUoqKilJqaWun4sWPHyjAMt9vAgQO9fRoA4JecTlPFpU4VFjuUV1SqnIISncgv1pFTp3U4p1AHThZo3/EC1/E7M0/pu4M52n4gW1/vO6kte09o00/HtSnjhLbsPalv9mVr+4EcfX8wVz9mntKurDztOZqvn48X6MDJQh3OOe0q62R+iXILS5VXVKrCYoeKS6tv+UbDRawHAMA6Xm9RX758udLT07Vo0SKlpKRowYIFSktL086dOxUbG1vp+A0bNuiuu+5S7969FRISonnz5mnAgAH6/vvv1apVK9dxAwcO1JIlS1zP7Xa7t08FALzCNE2VOMoS3BKnUw7HmXunqVOFZ1uvd2XlKTDAONvifaaVu7Yt19kFJbRcw1LEegAArOX1RH3+/PmaMGGCxo0bJ0latGiRPvjgAy1evFjTp0+vdPzSpUvdnv/973/XqlWrtG7dOo0ePdq13W63Kz4+3ruVB4BaKEucnW6TkR3NLVJQYIlKHWX7Sp1mpccOZ9WZdsUE+0R+MQk2/BKxHgAAa3k1US8uLtbWrVs1Y8YM1zabzabU1FRt3LixRmUUFBSopKRE0dHRbts3bNig2NhYRUVF6cYbb9Tjjz+u5s2bW1p/AI1TUalDpinXmOxSp9OVUJdtc7pawMuflzrKZxR3T65/OnZxE5sB/o5YDwCA9byaqB87dkwOh0NxcXFu2+Pi4vTjjz/WqIxp06YpISFBqamprm0DBw7UHXfcoXbt2mnPnj36wx/+oEGDBmnjxo0KCKj8hbioqEhFRUWu57m5uRd4RgDqA9M8O/FZicN55t496S4953F+UYnr9dv25ZBcAzVErAcAwHp+Pev7//7v/2rZsmXasGGDQkJCXNtHjhzpenzllVeqa9eu6tChgzZs2KD+/ftXKmfu3LmaPXt2ndQZgLUqJtulZ8ZulzrKtlVc2uv7g7kKDDBcCXptJzMrLmX2M8AXiPUAAFTm1US9RYsWCggIUFZWltv2rKys8445e+qpp/S///u/+vjjj9W1a9dqj23fvr1atGih3bt3ewzeM2bMUHp6uut5bm6uEhMTa3EmAKxQnnSfOn229Toz57SCAmwqcZSN2a7YAl7qcKqa4dtuXczzikppBQd8gFgPAID1vJqoBwcHq0ePHlq3bp2GDBkiSXI6nVq3bp0mT55c5eueeOIJ/fGPf9SaNWuUnJx83vc5cOCAjh8/rpYtW3rcb7fbmSkW8IISh9PVyl1SejbRLp8srbi07P7cpLtigv3z8QISbKAeI9YDAGA9r3d9T09P15gxY5ScnKyePXtqwYIFys/Pd80MO3r0aLVq1Upz586VJM2bN08zZ87U66+/rqSkJGVmZkqSmjRpoiZNmigvL0+zZ8/W0KFDFR8frz179uihhx7SJZdcorS0NG+fDtCglbd4l93KkuviM48rtoJ//fNJBQbYWCsbgCRiPQAAVvN6oj5ixAgdPXpUM2fOVGZmprp3767Vq1e7Jp3Zt2+fbDab6/jnn39excXFuvPOO93KmTVrlh599FEFBARo+/bteuWVV5Sdna2EhAQNGDBAc+bM4Zd0oBo5hSUqLHaoxOGejFd8XNNlwkocpgJsVR4KoJEh1tdvGcfytWLLfh04WajWUaEanpyodi3CfV0tAGjU6mQyucmTJ1fZ/W3Dhg1uz/fu3VttWaGhoVqzZo1FNQPqr/IEu7j0bKt3yZnHxaXOM2PBz0629uPhU3QxB+A1xPr6acWW/Zq+arsMw5BpmjIMQy98ukfzhnbVsGTG+AOAr/j1rO9AY1TqcLoeH80tks1W7Nb6XXQmCa9Jt/PqWsgBAI1bxrF8TV+1vWz+kPKgcuZ+2qrtujopWkm0rAOAT5CoA3WsPNkuKnGoqLSs9buo1Kmi0rLnFZcc++lYPq3gAACvWLFlvwzDkKdffg3D0PIt+zVtYCcf1AwAQKIOeEHu6RIVFDvcEvLypJxWbgCAPzhwslBmFd2zTNPUgZOFdVwjAEA5EnWgFpxOs0Ir+NkEvKjUodzCs7Oi7zjEeHAAgH9rHRVabYt666hQH9QKACCRqANuKnZLL3Y4VVTidN0XlZbNmF6V0yXOKvcBAOBvhicn6oVP93jcZ5qmRjCZHAD4DIk6GpWKifjpUqeyC4pd+7bsPakg1hwDADQS7VqEa97QrppWPqGcpADDkClT84Z2ZSI5APAhEnU0KOVd00+7xoU7dLrkbDf10nNaxCuuDe5wmqK3OgCgMRmWnKgurSI06OnPJUnj+iTp7pS2F5yksyY7AFiDRB31TnHp2S7mB04UymaTKxkvLmWiNgAAaqNt87OJdPpNlyks+MK+HrImOxoTfpSCt5Gowy+VOMpaxQtLHCoqOfv4dIlT+UVnly87mF3IpG0AAPgYa7KjMeFHKdQFEnX4TKnDqdNnuqkXFjtc3dQLSxyVuqgDAAD/ZfWa7Fa2VtLyCSvxoxTqCok6vO50iUM5BWeXLvvhUK4MQ3RTBwCggbByTXYrWytp+YTVrP5RCqgKiTosU1zqVGGxQwUlpSooLmslL28drzhp26nTpXRXBwCgAbFqTXYrWytp+YQ3WPmjFFAd1qJCrZU4nMopLFFmzmn9dDRP3x3M0Za9J7T155P64XCu9h4r0JHcIp06XUoXdgAAGoHhyYnVJi81XZPd1VrpQXlrZU1ZWRZQzvWjlAe1+VEKOB8SdVTJNE23idt+PHxKW38+oS17T+qHQ7nKOJavrDMJeQkJOQAAjVb5muy2CvlLgGHIZqhWa7Jb2VpJyye8waofpYDzoes7XE6XOJRXVKr8olKdOl3Wfb1iop5TWEKXdQAA4JEVa7Jb1YXe6rKAcuU/Sk0rH1ahsh+lTJm1+lEKOB8S9Uaq1OFUXlGp65ZfVMrkbgAA4KJc7Jrsw5MT9cKnezzuq21rpZVlARVZ8aMUcD50fW8EnE5Tp06X6HBOoXYfOaVv9p3UV3tPasfhU9p/olAn80tI0gEAgM9Z1YXe6rKAc537oxSfJ1iNFvUGxjRNFRSf7a7+/cFcOUzTU68vAAAAv2NlayUtnwDqKxL1eq7iuPKye/dx5XlFLIUGAADql4vtQu+tsgCgrvA/VT1SVOpQfpFDeafPJOXFLH8GAAAAwH9lHMvXii37deBkoVpHhWp4cqLaXWCvFivL8nck6n6qxOF0S8iZ7A0AAABAfbJiy35NX7VdhmHINE0ZhqEXPt2jeUO7algtJ3S0sqz6gETdD5Q6nMopKHE937Y/W4aMal4BAAAAAP4r41i+ppcvY1c+YdaZ+2mrtuvqpOgazxdhZVn1BbO+1zGH01RuhRnYt+3P1ld7T+rHzFOuY4pKnD6sIQAAAABcnBVb9sswPDc+Goah5Vv2+6Ss+oIW9Tpy6nSJfjqar8ISBzOwAwDQQG3cc7zKfadLHK7Hm346cVGTvTb0svyxTlaXhfqNz8L5bdufLWcViY/TNLVtf3a1/2d6q6wL0atDc6+VXRVa1OtIicNUQTFJOgAAAICGL6aJvcrBvMaZ/b4oq74gUQcAAAAAWKpfxxhV1UZpSrqhY6xPyqovSNQBAAAAAJZqGRmqe65vr4pDy22GZBjSPde3V3xkiE/KKnc4p1D/2LxPz6zfpX9s3qfDOYW1LsObGKMOAAAAALBc38tildQ8XNPf/LckaWCXeN10efwFJdZWlrVh5xG9+M+fZKisRd6Q9N72Q7rn+vbqe5l/tM7XSYv6woULlZSUpJCQEKWkpGjz5s3VHr9y5Up16tRJISEhuvLKK/Xhhx+67TdNUzNnzlTLli0VGhqq1NRU7dq1y5unAAAAqkGsB4CGw8rW5riIs4n0sB6JF5RYW1nW4ZxCvfjPn2SaktOU2/0Ln/2kzJzTF1w/K3k9UV++fLnS09M1a9Ysff311+rWrZvS0tJ05MgRj8d/+eWXuuuuuzR+/Hh98803GjJkiIYMGaLvvvvOdcwTTzyhZ555RosWLdKmTZsUHh6utLQ0nT7tHxcVAIDGhFgPAA3Hhp1HNHXlt3p/+yH966fjen/7IU1d+a0+/Y/n/9Prmw07j1Y7Md0nO/3jPL3e9X3+/PmaMGGCxo0bJ0latGiRPvjgAy1evFjTp0+vdPzTTz+tgQMH6ve//70kac6cOVq7dq2ee+45LVq0SKZpasGCBXr44Yf1y1/+UpL06quvKi4uTm+//bZGjhxZ47oVFJcqsLj0gs+toMJrC85TTmGxw20Zh3MVVdhXVM1xNeGPZfljnfy1LH+sk7+W5Y918tey/LFOVpblqzoVljjO+/9/TVlVji805FhfXoanx5405lhvZVn+WCery0L91lA/C5m5p12tzeWTt5Xfv/DZT0pqHu7Wql0T/vZvMCv3dLUT02Xlnq70f7kvYr1hmt5bMKy4uFhhYWF64403NGTIENf2MWPGKDs7W++8806l17Rp00bp6emaMmWKa9usWbP09ttv69tvv9VPP/2kDh066JtvvlH37t1dx/Tt21fdu3fX008/XanMoqIiFRUVuZ7n5uYqMTFRiVNWyGYPs+RcAQC4GM6iAu1fMFw5OTmKiIjwdXVqjFgPAEDN1CbWe7Xr+7Fjx+RwOBQXF+e2PS4uTpmZmR5fk5mZWe3x5fe1KXPu3LmKjIx03RITEy/ofAAAgDtiPQAA1msUs77PmDFD6enpruflv7Jv/p/+ddZqcTK/RP/JOlUn7wUAqBsxEXa1bxFuSVm5ublqucCSoholf4j1krTppxN19l6o34pKHPrt0q8lSYtG/UL2oACfluPPZe07nq9Z7/0gSUrrHKd+nWIVX8vu1//cdVRLvtjr6vJsM8q6Of+6dzv1ubTFBdfNClZcq8zc0/rDW/+Wp77ShiHNvf3KGnVZX7l1v1Z/lymnh3JsRtlM68N61P8fQj/fdUyLv8xwm/W9us9DSvtoS963NrHeq4l6ixYtFBAQoKysLLftWVlZio+P9/ia+Pj4ao8vv8/KylLLli3djqnYPa4iu90uu91eaXtYcKDCguvmt4rTJU6FXMR/UAAA/xMaFGBZHCmto3hkNWK9O2I9LoQ9KMCSz45V5fhTWeXLaJVbuyNLH+3IqtUyWodzCrXky71u45LLE9HFX2aoS6vIi5qJ3EoXeq027jnuSjbPZUj6cs9x3dWzzXnLSb08Tv/vO889l0xJN10e3yD+n0vtHKcurSL1yc4jOppXpJgmdt3QMbbKz4EvYr1Xu74HBwerR48eWrdunWub0+nUunXr1KtXL4+v6dWrl9vxkrR27VrX8e3atVN8fLzbMbm5udq0aVOVZQIAAO8g1gPwlorLaJW7kGW06sss3xfjaF5RtROkHc0rqmKvu5aRobrn+vYyjLIW9Ir391zf3m9+0LBCfGSI7urZRvffeKnu6tnG787N6z8xp6ena8yYMUpOTlbPnj21YMEC5efnu2aGHT16tFq1aqW5c+dKkv77v/9bffv21Z///GcNHjxYy5Yt05YtW/Tiiy9KkgzD0JQpU/T444/r0ksvVbt27fTII48oISHBbRIbAABQN4j1QMOQmXs28V25db9SL49Ty8hQn9WnPMGuqpX4k51HatRKbFUS689imtirvVYxTSr3OKpK38ti1TEuosatzfAOryfqI0aM0NGjRzVz5kxlZmaqe/fuWr16tWuCmH379slmO9uw37t3b73++ut6+OGH9Yc//EGXXnqp3n77bXXp0sV1zEMPPaT8/HxNnDhR2dnZ6tOnj1avXq2QED48AADUNWI9UP+d28V89XeZ+n/fZdaqi7nVrEqwrUxi/VW/jjF6b/shj/tMSTd0rN3fsLy1Gb7j1eXZ/FVubq4iIyPrdAmcE/nF2pnJZHIA0JDERtjVIaaJJWX5IjY1ZL66nhv3HK+z90L9drrEoXEvfyVJWjL26gse92tFOYdzCjV15bdVTkQ2f1j3WremWlGvf2zep/e3H6pyYrNbuibUKJn0xvlZyarPwqf/OaIXPvup0gRpvvyxpaHo1aG5JeXUJjZ5dYw6AAAAAP/mjTHc53ajP5xTWOsy+nWMqbZFvaatxI1l3HXfy2I1f1h33dI1Qde0b65buiZo/rDuJOn1VP2cYhYAAACAJawew21VN/ryBLuqVuLaJNiNZdw1XdYbDhL1OtI0JFAdYsOVX+RQflGp8otKPXbjAQAA9ZdV3SPR8BUUl7oep7SPvuDln6wo57NdR7U544QcHvqG2wxD3ROb1fiznXEsX3/zMFO7JL342U8aeXUbJbUIr3HdenVorpFXt9HyLft14GShWkeFakRyYq3KqOj2X7S6oNd5k1WfBTQsfArqSFCATbFNQ6SmZc9N01R+cVnSnncmcS8odngcOwMAAAB4y/DkRL3w6R6P+0zT1IjkxBqXtWLLfhmGIU9fag3D0PIt+zVtYKda1S+pRXitXwPUdyTqPmIYhprYA9XEHqi4M9ucTlN5xaWuFve8IocKix0+rScAAAAatnYtwjVvaFdNW7VdhmHINE3X/byhXWvVen3gZKGqmqvaNE0dOFn7sepAY0Si7kdsNkMRIUGKCAlybSt1ON1a3vOKSlVU4vRhLQEAANDQDEtO1NVJ0Rfdxbx1VGi1Leqto3y3LjtQn5Co+7nAAJsiQ22KDD2bvJc4nBW6zDuUV1Sq4lKSdwAAAFw4K7qYW9mNHmjMSNTroaAAm5qFBatZWLBrW1GpwzVRXfmY9xIHA94BAABQd6zsRg80ZiTqDYQ9MED2wABFh59N3k+XlLW2550+m7wz0zwAAAC8yapu9EBjRqLegIUEBSgkKEAtmtgllXU3KiguS95PnS5L3AtLmGkeAAAA1mKmduDikKg3IoZhKNweqHB7oOIiyrY5nKZrkrr8Mwk8490BAAAAwHdI1Bu5AJuhyNAgt8nqyse7u7rMF5eqlPHuAAAAAFAnSNRRSVXj3QuLHSo4c19Y7FBhiUMOBr0DAAAAgKVI1FEj5ePdoypsM01TRaVOFRQ7VFBc6kreC4sdTFoHAAAAABeIRB0XzDAMVwJfsfXdNE2dLnGqoLhUBWeS94Jih04zcR0AAAAAnBeJOixnGIZCgwMUGhyg5hW2O52mTpc6dLrEqcKSssS9/FZcSgYPAAAAABKJOuqQzWYoLDhQYcGV9zmcZtk4eFfy7nQl8SVMZAcAAACgESFRh18IsJ1dOu5cpY7yFnhnhVZ4p06XOpiNHgAAAECDQ6IOvxcYYFPTAJuahlTeV+pw6nSpU0UlDhWVliXyRaXOslsJk9oBAAAAqH9I1FGvBQbY1CTApiYeWuKlsjXhy5L2ikl8WYt8icPJ5HYAAAAA/A6JOhq08jXh5aE13uk0VewoS+JdCX3p2Rb54lISeQAAAAB1j0QdjZbNZijEVra8nBRUab9pnknkzyTtZ+8dKipxqtjhZIw8AAAAAMuRqANVMAzjbIt8FUodzgqt8hUS+TP3LDsHAAAAoLZI1IGLEBhgU2CAzeOSc1JV3evPPqZ7PQAAQOO293i+6/H8tf/RqJS2atci3Ic1gj8gUQe8qCbd64vO7VZ/ZvK7YkfZNgdT1wMAADRIK7bs1/RV213Pl3y+V4s/z9C8oV01LDnRhzWDr5GoAz5kGIZCgsoTec8cTlMljrOJe4nDqZJS0/25w6kSxssDANDo0Bpbf2Ucy9f0VdvdlhN2nOlqOW3Vdl2dFK0k/paNFok64OcCbIYCbNUn89LZbvblSXt5Eu/aVmqqxOlUSamT9eUBAGgAaI2t31Zs2S/DMORpHKRhGFq+Zb+mDezkg5rBH9i8WfiJEyc0atQoRUREqFmzZho/frzy8vKqPf6+++5Tx44dFRoaqjZt2uj+++9XTk6O23GGYVS6LVu2zJunAvg9m62sdb5pSJCiw4MVHxmixOgwdYhpok7xEbqydaR+0SZKKe2b6+qkKHVPbKYrWkXosrgmatciXK2jQhUXYVd0eLCahgQqJMimAJvh69MC4OeI9YBvVNUa6zTLWmP3Hsuv+sXwCwdOFsqsYrIi0zR14GRhHdcI/sSrLeqjRo3S4cOHtXbtWpWUlGjcuHGaOHGiXn/9dY/HHzp0SIcOHdJTTz2lzp076+eff9Zvf/tbHTp0SG+88YbbsUuWLNHAgQNdz5s1a+bNUwEalLJJ8KRQVd9KL7m31Jc6yrrhlzhNlZ5puS91nm2tL3WYjKkHGhliPeAbtMbWf62jQqv9G7aOCvVBreAvvJao79ixQ6tXr9ZXX32l5ORkSdKzzz6rm2++WU899ZQSEhIqvaZLly5atWqV63mHDh30xz/+UXfffbdKS0sVGHi2us2aNVN8fLy3qg/gDPcJ8c7P6TzTxd7hnsyXOkzX2vMlDqdKzyT7pU6Tme+BeopYD/gOrbH13/DkRL3w6R6P+0zT1AiGLzRqXuv6vnHjRjVr1swVuCUpNTVVNptNmzZtqnE5OTk5ioiIcAvckjRp0iS1aNFCPXv21OLFi6v8jwpA3bLZytafb2IPVLOwYMU0tatlZKirG37H+Kbq0ipS3RObKTkpWintopWcFKWr2jRTl1YR6hTfVB1iw9W2eZirO37zJsGKCA1UWHCAggNtokc+4B+I9YDvuFpjPaA1tn5o1yJc84Z2lc0om5Oo4v28oV2ZSK6R81qLemZmpmJjY93fLDBQ0dHRyszMrFEZx44d05w5czRx4kS37Y899phuvPFGhYWF6aOPPtLvfvc75eXl6f777/dYTlFRkYqKilzPc3Nza3k2ALzFMAwFBRgKClCNW+2ls7PhO5xmWSu90+m2reRMN3zXMWda9emZD1iHWA/4Dq2xDcOw5ERdnRSt5Vv268DJQrWOCtWI5ESSdNQ+UZ8+fbrmzZtX7TE7duy44AqVy83N1eDBg9W5c2c9+uijbvseeeQR1+OrrrpK+fn5evLJJ6sM3nPnztXs2bMvuk4A/Ef5bPi1VTFpL+9+73CaKnGacpR30z+T/LuOdZY9pjEPjQWxHvB/5a2x01Ztl2EYMk3TdU9rbP2S1CKc+QRQSa0T9alTp2rs2LHVHtO+fXvFx8fryJEjbttLS0t14sSJ8443O3XqlAYOHKimTZvqrbfeUlBQULXHp6SkaM6cOSoqKpLdbq+0f8aMGUpPT3c9z83NVWIivzICjVF5gm+v5f9+plmeuJfdypP6c5P8iq35FZN+oD4h1gP1A62xQMNV60Q9JiZGMTEx5z2uV69eys7O1tatW9WjRw9J0vr16+V0OpWSklLl63Jzc5WWlia73a53331XISEh532vbdu2KSoqymPgliS73V7lPgCoCcMwFBhgKLD2jfgyTdPVKl9t1/wzST0T7cHXiPVA/UFrLNAweW2M+uWXX66BAwdqwoQJWrRokUpKSjR58mSNHDnSNQvswYMH1b9/f7366qvq2bOncnNzNWDAABUUFOi1115Tbm6ua4xZTEyMAgIC9N577ykrK0vXXHONQkJCtHbtWv3pT3/Sgw8+6K1TAYCLcqHj8CW5Evby1nyn82zS7zDPtuQ7K/wYcO6xJPvwFmI9AADe4dV11JcuXarJkyerf//+stlsGjp0qJ555hnX/pKSEu3cuVMFBQWSpK+//to1S+wll1ziVlZGRoaSkpIUFBSkhQsX6oEHHpBpmrrkkks0f/58TZgwwZunAgA+Ub7m/cVwuCXwTjmdksN0f+xwnEn8Kxx7bvLvYCY+eECsBwDAeobZCNc6yc3NVWRkpGs5GABAzZyb7DsqtNw7Tfck/+x9hR8LTPf99T0CxUbY1SGmiSVlEZusxfWEvysoLlXnmWskST88lqawYK+2nwHwA7WJTfyPAACosQudbb8qTg/Je8UfAUyzwv6KPw6c86OA09TZx06W4QMAAPUbiToAwGdsNkM2lY3ft5rTacqUziTyZa335Um9ec59+TEy5fbcNFXhdee8VqZCvVFxAADQ6JGoAwAaJJvNkCQFyPBxTQAAAGrH5usKAAAAAACAs0jUAQAAAADwIyTqAAAAAAD4ERJ1AAAAAAD8CIk6AAAAAAB+hEQdAAAAAAA/QqIOAAAAAIAfIVEHAAAAAMCPkKgDAAAAAOBHSNQBAAAAAPAjJOoAAAAAAPgREnUAAAAAAPwIiToAAAAAAH6ERB0AAAAAAD9Cog4AAAAAgB8hUQcAAAAAwI+QqAMAAAAA4EdI1AEAAAAA8CMk6gAAAAAA+BESdQAAAAAA/AiJOgAAAAAAfoREHQAAAAAAP0KiDgAAAACAHyFRBwAAAADAj5CoAwAAAADgR7yaqJ84cUKjRo1SRESEmjVrpvHjxysvL6/a1/Tr10+GYbjdfvvb37ods2/fPg0ePFhhYWGKjY3V73//e5WWlnrzVAAAgAfEegAArBfozcJHjRqlw4cPa+3atSopKdG4ceM0ceJEvf7669W+bsKECXrsscdcz8PCwlyPHQ6HBg8erPj4eH355Zc6fPiwRo8eraCgIP3pT3/y2rkAAIDKiPUAAFjPa4n6jh07tHr1an311VdKTk6WJD377LO6+eab9dRTTykhIaHK14aFhSk+Pt7jvo8++kg//PCDPv74Y8XFxal79+6aM2eOpk2bpkcffVTBwcFeOR8AAOCOWA8AgHd4rev7xo0b1axZM1fglqTU1FTZbDZt2rSp2tcuXbpULVq0UJcuXTRjxgwVFBS4lXvllVcqLi7OtS0tLU25ubn6/vvvPZZXVFSk3NxctxsAALg4xHoAALzDay3qmZmZio2NdX+zwEBFR0crMzOzytf96le/Utu2bZWQkKDt27dr2rRp2rlzp958801XuRUDtyTX86rKnTt3rmbPnn0xpwMAAM5BrAcAwDtqnahPnz5d8+bNq/aYHTt2XHCFJk6c6Hp85ZVXqmXLlurfv7/27NmjDh06XFCZM2bMUHp6uut5bm6uEhMTL7iOAAA0ZMR6AAB8q9aJ+tSpUzV27Nhqj2nfvr3i4+N15MgRt+2lpaU6ceJElWPSPElJSZEk7d69Wx06dFB8fLw2b97sdkxWVpYkVVmu3W6X3W6v8XsCANCYEesBAPCtWifqMTExiomJOe9xvXr1UnZ2trZu3aoePXpIktavXy+n0+kKyDWxbds2SVLLli1d5f7xj3/UkSNHXN3t1q5dq4iICHXu3LmWZwMAAM5FrAcAwLe8Npnc5ZdfroEDB2rChAnavHmzvvjiC02ePFkjR450zQJ78OBBderUyfWr+Z49ezRnzhxt3bpVe/fu1bvvvqvRo0fr+uuvV9euXSVJAwYMUOfOnfVf//Vf+vbbb7VmzRo9/PDDmjRpEr+kAwBQh4j1AAB4h9cSdalsRtdOnTqpf//+uvnmm9WnTx+9+OKLrv0lJSXauXOna6bX4OBgffzxxxowYIA6deqkqVOnaujQoXrvvfdcrwkICND777+vgIAA9erVS3fffbdGjx7tthYrAACoG8R6AACsZ5imafq6EnUtNzdXkZGRysnJUUREhK+rAwAAscliXE/4u4LiUnWeuUaS9MNjaQoL9tpiTAD8RG1ik1db1AEAAAAAQO2QqAMAAAAA4EdI1AEAAAAA8CMk6gAAAAAA+BESdQAAAAAA/AiJOgAAAAAAfoREHQAAAAAAP0KiDgAAANSxvcfzXY/nr/2PMo7lV3M0gMaGRB0AAACoQyu27Nctz3zuer7k873q/+cNWrllvw9rBcCfkKgDAAAAdSTjWL6mr9oup3l2m8M05TSlaau2ay8t6wBEog4AAADUmRVb9sswDI/7DMPQclrVAYhEHQAAAKgzB04WyjRNj/tM09SBk4V1XCMA/ohEHQAAAKgjraNCq21Rbx0VWsc1AuCPSNQBAACAOjI8ObHaFvURyYl1XCMA/ohEHQAAAKgj7VqEa97QrrIZUoDNcLufN7SrklqE+7qKAPxAoK8rAAAAADQmw5ITdXVStJZv2a8DJwvVOipUI5ITSdIBuJCoAwAAAHUsqUW4pg3s5OtqAPBTdH0HAAAAAMCPkKgDAAAAAOBHSNQBAAAAAPAjJOoAAAAAAPgREnUAAAAAAPwIiToAAAAAAH6ERB0AAAAAAD9Cog4AAAAAgB8hUQcAAAAAwI+QqAMAAAAA4Ee8mqifOHFCo0aNUkREhJo1a6bx48crLy+vyuP37t0rwzA83lauXOk6ztP+ZcuWefNUAACAB8R6AACsF+jNwkeNGqXDhw9r7dq1Kikp0bhx4zRx4kS9/vrrHo9PTEzU4cOH3ba9+OKLevLJJzVo0CC37UuWLNHAgQNdz5s1a2Z5/QEAQPWI9QAAWM9rifqOHTu0evVqffXVV0pOTpYkPfvss7r55pv11FNPKSEhodJrAgICFB8f77btrbfe0vDhw9WkSRO37c2aNat0LAAAqDvEegAAvMNrXd83btyoZs2auQK3JKWmpspms2nTpk01KmPr1q3atm2bxo8fX2nfpEmT1KJFC/Xs2VOLFy+WaZqW1R0AAJwfsR4AAO/wWot6ZmamYmNj3d8sMFDR0dHKzMysURkvvfSSLr/8cvXu3dtt+2OPPaYbb7xRYWFh+uijj/S73/1OeXl5uv/++z2WU1RUpKKiItfz3NzcWp4NAAA4F7EeAADvqHWL+vTp06ucBKb89uOPP150xQoLC/X66697/IX9kUce0bXXXqurrrpK06ZN00MPPaQnn3yyyrLmzp2ryMhI1y0xMfGi6wcAQENFrAcAwLdq3aI+depUjR07ttpj2rdvr/j4eB05csRte2lpqU6cOFGj8WZvvPGGCgoKNHr06PMem5KSojlz5qioqEh2u73S/hkzZig9Pd31PDc3lwAOAEAViPUAAPhWrRP1mJgYxcTEnPe4Xr16KTs7W1u3blWPHj0kSevXr5fT6VRKSsp5X//SSy/ptttuq9F7bdu2TVFRUR4DtyTZ7fYq9wEAAHfEegAAfMtrY9Qvv/xyDRw4UBMmTNCiRYtUUlKiyZMna+TIka5ZYA8ePKj+/fvr1VdfVc+ePV2v3b17tz777DN9+OGHlcp97733lJWVpWuuuUYhISFau3at/vSnP+nBBx/01qkAAAAPiPUAAHiHV9dRX7p0qSZPnqz+/fvLZrNp6NCheuaZZ1z7S0pKtHPnThUUFLi9bvHixWrdurUGDBhQqcygoCAtXLhQDzzwgEzT1CWXXKL58+drwoQJ3jwVAADgAbEeAADrGWYjXOskNzdXkZGRysnJUUREhK+rAwAAscliXE8AgL+pTWzy2jrqAAAAAACg9kjUAQAAAADwIyTqAAAAAAD4ERJ1AAAAAAD8CIk6AAAAAAB+hEQdAAAAAAA/QqIOAAAAAIAfIVEHAAAAAMCPkKgDAAAAAOBHSNQBAAAAAPAjJOoAAAAAAPgREnUAAAAAAPwIiToAAAAAAH6ERB0AAAAAAD9Cog4AAAAAgB8hUQcAAAAAwI+QqAMAAAAA4EdI1AEAAAAA8CMk6gAAAAAA+BESdQAAAAAA/AiJOgAAAAAAfoREHQAAAAAAP0KiDgAAAACAHyFRBwAAAADAj5CoAwAAAADgR0jUAQAAAADwIyTqAAAAAAD4ERJ1AAAAAAD8iNcS9T/+8Y/q3bu3wsLC1KxZsxq9xjRNzZw5Uy1btlRoaKhSU1O1a9cut2NOnDihUaNGKSIiQs2aNdP48eOVl5fnhTMAAADnQ7wHAMB6XkvUi4uLNWzYMN177701fs0TTzyhZ555RosWLdKmTZsUHh6utLQ0nT592nXMqFGj9P3332vt2rV6//339dlnn2nixIneOAUAAHAexHsAAKxnmKZpevMNXn75ZU2ZMkXZ2dnVHmeaphISEjR16lQ9+OCDkqScnBzFxcXp5Zdf1siRI7Vjxw517txZX331lZKTkyVJq1ev1s0336wDBw4oISGhRnXKzc1VZGSkcnJyFBERcVHnBwCAFep7bPK3eF/frycAoOGpTWwKrKM6nVdGRoYyMzOVmprq2hYZGamUlBRt3LhRI0eO1MaNG9WsWTNX0Jak1NRU2Ww2bdq0SbfffrvHsouKilRUVOR6npOTI6nsQgEA4A/KY5KXfz/3OW/Fe2I9AMDf1SbW+02inpmZKUmKi4tz2x4XF+fal5mZqdjYWLf9gYGBio6Odh3jydy5czV79uxK2xMTEy+22gAAWOrUqVOKjIz0dTW8xlvxnlgPAKgvahLra5WoT58+XfPmzav2mB07dqhTp061KdbrZsyYofT0dNdzp9OpEydOqHnz5jIM46LKzs3NVWJiovbv30/XujrEdfcNrrtvcN3rni+uuWmaOnXqVI2HcXlTfYz33oz1Ev8OfYFr7htcd9/guvtGXV/32sT6WiXqU6dO1dixY6s9pn379rUp0iU+Pl6SlJWVpZYtW7q2Z2VlqXv37q5jjhw54va60tJSnThxwvV6T+x2u+x2u9u2ms5MW1MRERH8o/IBrrtvcN19g+te9+r6mvtLS3p9jPd1Eesl/h36AtfcN7juvsF19426vO41jfW1StRjYmIUExNzQRU6n3bt2ik+Pl7r1q1zBerc3Fxt2rTJNZNsr169lJ2dra1bt6pHjx6SpPXr18vpdColJcUr9QIAoLEh3gMA4FteW55t37592rZtm/bt2yeHw6Ft27Zp27ZtbmugdurUSW+99ZYkyTAMTZkyRY8//rjeffdd/fvf/9bo0aOVkJCgIUOGSJIuv/xyDRw4UBMmTNDmzZv1xRdfaPLkyRo5cqRfdBUEAKCxId4DAGA9r00mN3PmTL3yyiuu51dddZUk6ZNPPlG/fv0kSTt37nTNyipJDz30kPLz8zVx4kRlZ2erT58+Wr16tUJCQlzHLF26VJMnT1b//v1ls9k0dOhQPfPMM946jfOy2+2aNWtWpe528C6uu29w3X2D6173uOY1R7yHt3DNfYPr7htcd9/w5+vu9XXUAQAAAABAzXmt6zsAAAAAAKg9EnUAAAAAAPwIiToAAAAAAH6ERB0AAAAAAD9Con6RFi5cqKSkJIWEhCglJUWbN2/2dZUatEcffVSGYbjdOnXq5OtqNTifffaZbr31ViUkJMgwDL399ttu+03T1MyZM9WyZUuFhoYqNTVVu3bt8k1lG4jzXfOxY8dW+uwPHDjQN5VtIObOnaurr75aTZs2VWxsrIYMGaKdO3e6HXP69GlNmjRJzZs3V5MmTTR06FBlZWX5qMbwFWJ93SLW1w1ivW8Q7+tefY33JOoXYfny5UpPT9esWbP09ddfq1u3bkpLS9ORI0d8XbUG7YorrtDhw4ddt88//9zXVWpw8vPz1a1bNy1cuNDj/ieeeELPPPOMFi1apE2bNik8PFxpaWk6ffp0Hde04TjfNZekgQMHun32//GPf9RhDRueTz/9VJMmTdK//vUvrV27ViUlJRowYIDy8/NdxzzwwAN67733tHLlSn366ac6dOiQ7rjjDh/WGnWNWO8bxHrvI9b7BvG+7tXbeG/igvXs2dOcNGmS67nD4TATEhLMuXPn+rBWDdusWbPMbt26+boajYok86233nI9dzqdZnx8vPnkk0+6tmVnZ5t2u938xz/+4YMaNjznXnPTNM0xY8aYv/zlL31Sn8biyJEjpiTz008/NU2z7HMdFBRkrly50nXMjh07TEnmxo0bfVVN1DFifd0j1tc9Yr1vEO99o77Ee1rUL1BxcbG2bt2q1NRU1zabzabU1FRt3LjRhzVr+Hbt2qWEhAS1b99eo0aN0r59+3xdpUYlIyNDmZmZbp/9yMhIpaSk8Nn3sg0bNig2NlYdO3bUvffeq+PHj/u6Sg1KTk6OJCk6OlqStHXrVpWUlLh91jt16qQ2bdrwWW8kiPW+Q6z3LWK9bxHvvau+xHsS9Qt07NgxORwOxcXFuW2Pi4tTZmamj2rV8KWkpOjll1/W6tWr9fzzzysjI0PXXXedTp065euqNRrln28++3Vr4MCBevXVV7Vu3TrNmzdPn376qQYNGiSHw+HrqjUITqdTU6ZM0bXXXqsuXbpIKvusBwcHq1mzZm7H8llvPIj1vkGs9z1ive8Q772rPsX7QJ+9M3ABBg0a5HrctWtXpaSkqG3btlqxYoXGjx/vw5oB3jVy5EjX4yuvvFJdu3ZVhw4dtGHDBvXv39+HNWsYJk2apO+++45xsIAfINajMSPee1d9ive0qF+gFi1aKCAgoNJsgFlZWYqPj/dRrRqfZs2a6bLLLtPu3bt9XZVGo/zzzWfft9q3b68WLVrw2bfA5MmT9f777+uTTz5R69atXdvj4+NVXFys7Oxst+P5rDcexHr/QKyve8R6/0G8t059i/ck6hcoODhYPXr00Lp161zbnE6n1q1bp169evmwZo1LXl6e9uzZo5YtW/q6Ko1Gu3btFB8f7/bZz83N1aZNm/js16EDBw7o+PHjfPYvgmmamjx5st566y2tX79e7dq1c9vfo0cPBQUFuX3Wd+7cqX379vFZbySI9f6BWF/3iPX+g3h/8eprvKfr+0VIT0/XmDFjlJycrJ49e2rBggXKz8/XuHHjfF21BuvBBx/UrbfeqrZt2+rQoUOaNWuWAgICdNddd/m6ag1KXl6e2y+3GRkZ2rZtm6Kjo9WmTRtNmTJFjz/+uC699FK1a9dOjzzyiBISEjRkyBDfVbqeq+6aR0dHa/bs2Ro6dKji4+O1Z88ePfTQQ7rkkkuUlpbmw1rXb5MmTdLrr7+ud955R02bNnWNQ4uMjFRoaKgiIyM1fvx4paenKzo6WhEREbrvvvvUq1cvXXPNNT6uPeoKsb7uEevrBrHeN4j3da/exnufzTffQDz77LNmmzZtzODgYLNnz57mv/71L19XqUEbMWKE2bJlSzM4ONhs1aqVOWLECHP37t2+rlaD88knn5iSKt3GjBljmmbZsi2PPPKIGRcXZ9rtdrN///7mzp07fVvpeq66a15QUGAOGDDAjImJMYOCgsy2bduaEyZMMDMzM31d7XrN0/WWZC5ZssR1TGFhofm73/3OjIqKMsPCwszbb7/dPHz4sO8qDZ8g1tctYn3dINb7BvG+7tXXeG+Ypml6/+cAAAAAAABQE4xRBwAAAADAj5CoAwAAAADgR0jUAQAAAADwIyTqAAAAAAD4ERJ1AAAAAAD8CIk6AAAAAAB+hEQdAAAAAAA/QqIOAAAAAIAfIVEHAAAAAMCPkKgDAAAAAOBHSNQBAAAAAPAjJOoAAAAAAPiR/w8hFECo6cbLMAAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=20982.130, Time=2.01 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=21435.133, Time=0.04 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=21223.969, Time=0.06 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=21104.501, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=21054.053, Time=1.28 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=21105.462, Time=0.22 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=20966.701, Time=5.94 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=21101.107, Time=0.30 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=20998.854, Time=1.88 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=20945.035, Time=2.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=20965.273, Time=2.35 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=20803.134, Time=4.32 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=20772.559, Time=3.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=20762.198, Time=2.71 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=21061.078, Time=0.42 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=21088.536, Time=0.37 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=20764.198, Time=4.63 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 31.806 seconds\n"]}]},{"cell_type":"code","source":["# Get the fitted values from the model\n","fitted_values = model_d.predict_in_sample()\n","\n","# Plot the fitted values against the observed series\n","plt.figure(figsize=(12, 6))\n","plt.plot(series_d, color = 'blue', label='Observed')\n","plt.plot(fitted_values, color = 'red', linestyle= '--', label='Fitted')\n","plt.legend()\n","plt.title('Observed vs. Fitted Values')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"gSGBJUZPVduX","executionInfo":{"status":"ok","timestamp":1741356382059,"user_tz":-60,"elapsed":439,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"2a86dda8-78e2-4440-e31d-51fc08704790"},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Daily"],"metadata":{"id":"AMa1Uxfo_Wyt"}},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","from math import sqrt\n","from sklearn.metrics import r2_score\n","\n","\n","results = {}\n","\n","fig, axes = plt.subplots(nrows=2, ncols=5, figsize=(20, 8))\n","axes = axes.flatten()\n","\n","for i, country in enumerate(df_covid_d['country'].unique()[:10]):\n","    try:\n","        df_country = df_covid_d[df_covid_d['country'] == country]\n","        series = df_country['cases']\n","\n","        model = fit_arima(series)\n","        fitted_values = model.predict_in_sample()\n","\n","        rmse = sqrt(mean_squared_error(series, fitted_values))\n","        r2 = r2_score(series, fitted_values)\n","\n","        results[country] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(fitted_values, label='Fitted', color='red', linestyle='--')\n","        axes[i].set_title(country)\n","        axes[i].legend()\n","    except Exception as e:\n","        print(f\"Error processing {country}: {e}\")\n","        axes[i].set_title(f\"Error: {country}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'country'\n","results_df = results_df.reset_index()\n","results_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"iupv-c1rYYk7","executionInfo":{"status":"ok","timestamp":1741356676251,"user_tz":-60,"elapsed":294197,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"caff980c-e575-47db-9468-9ae63cecf311"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=25619.048, Time=1.64 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=26126.033, Time=0.05 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=26077.362, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=25925.681, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=25819.354, Time=0.45 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=25797.550, Time=0.45 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=25569.810, Time=2.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=25763.560, Time=0.51 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=25464.904, Time=1.68 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=25709.090, Time=0.63 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=25340.690, Time=2.71 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=25501.702, Time=0.90 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=25348.565, Time=6.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=25446.614, Time=2.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=25342.691, Time=5.33 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 24.756 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=20369.981, Time=1.06 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=20815.854, Time=0.04 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=20730.218, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=20660.639, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=20612.309, Time=1.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=20602.597, Time=1.27 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=20245.707, Time=1.93 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=20550.286, Time=0.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=inf, Time=3.53 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=20204.294, Time=2.89 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=20395.984, Time=1.92 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=20213.716, Time=5.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,4)(0,0,0)[0]             : AIC=20115.767, Time=4.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0]             : AIC=20176.690, Time=2.46 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,4)(0,0,0)[0]             : AIC=20107.331, Time=6.25 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,4)(0,0,0)[0]             : AIC=20076.978, Time=4.40 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=20154.343, Time=3.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,5)(0,0,0)[0]             : AIC=20077.998, Time=7.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,5)(0,0,0)[0]             : AIC=20090.790, Time=4.66 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,4)(0,0,0)[0] intercept   : AIC=20078.958, Time=6.48 sec\n","\n","Best model:  ARIMA(5,2,4)(0,0,0)[0]          \n","Total fit time: 57.865 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=20982.130, Time=1.98 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=21435.133, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=21223.969, Time=0.06 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=21104.501, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=21054.053, Time=1.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=21105.462, Time=0.21 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=20966.701, Time=2.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=21101.107, Time=0.30 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=20998.854, Time=1.83 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=20945.035, Time=4.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=20965.273, Time=2.51 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=20803.134, Time=2.27 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=20772.559, Time=3.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=20762.198, Time=2.76 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=21061.078, Time=1.72 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=21088.536, Time=1.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=20764.198, Time=4.44 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 29.864 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=17104.616, Time=0.32 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=17481.198, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=17218.195, Time=0.06 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=17116.897, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=17115.739, Time=0.37 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=17112.195, Time=0.23 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=17105.862, Time=0.68 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=17105.898, Time=0.53 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=17115.502, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=17106.241, Time=0.37 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=17110.667, Time=0.31 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=17107.782, Time=0.98 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=17106.616, Time=0.68 sec\n","\n","Best model:  ARIMA(2,2,2)(0,0,0)[0]          \n","Total fit time: 4.772 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=27679.366, Time=0.68 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=28386.602, Time=0.04 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=28249.841, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=27831.281, Time=0.25 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=27687.253, Time=3.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=27757.789, Time=0.36 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=28425.531, Time=1.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=27599.368, Time=1.50 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=27685.400, Time=0.61 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=27584.728, Time=2.24 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=27577.842, Time=2.96 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=29093.561, Time=1.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=27115.635, Time=5.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=27039.679, Time=3.93 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=27452.596, Time=0.85 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=27704.304, Time=0.64 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=27041.685, Time=7.01 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 31.530 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=25953.804, Time=2.04 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=26647.430, Time=0.05 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=26370.485, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=26071.640, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=25978.798, Time=1.91 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=26066.174, Time=0.36 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=26130.829, Time=1.48 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=25924.708, Time=1.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=26017.442, Time=0.64 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=25840.242, Time=1.27 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=25823.544, Time=4.60 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=26531.437, Time=1.50 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=25703.265, Time=3.31 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=25616.554, Time=3.94 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=25945.189, Time=2.58 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=26023.644, Time=0.59 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=25618.560, Time=4.01 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 29.530 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=23810.652, Time=0.75 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=24712.760, Time=0.04 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=24202.068, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=23891.698, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=23813.210, Time=0.56 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=23831.896, Time=0.41 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=23760.499, Time=1.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=23772.016, Time=0.41 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=23761.232, Time=1.52 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=23645.179, Time=5.36 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=23674.457, Time=1.87 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=23646.282, Time=2.53 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,4)(0,0,0)[0]             : AIC=23650.221, Time=1.90 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0]             : AIC=23649.292, Time=1.28 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,4)(0,0,0)[0]             : AIC=23649.413, Time=4.77 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0] intercept   : AIC=23647.351, Time=4.02 sec\n","\n","Best model:  ARIMA(3,2,3)(0,0,0)[0]          \n","Total fit time: 26.633 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=inf, Time=2.23 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=20241.508, Time=0.06 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=19960.125, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=20094.902, Time=0.20 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=20521.962, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=19750.228, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,0)(0,0,0)[0] intercept   : AIC=19616.326, Time=0.26 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,0)(0,0,0)[0] intercept   : AIC=19604.565, Time=0.42 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,1,0)(0,0,0)[0] intercept   : AIC=19563.634, Time=0.56 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,1,1)(0,0,0)[0] intercept   : AIC=19460.295, Time=4.76 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,1)(0,0,0)[0] intercept   : AIC=19509.474, Time=2.47 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,1,2)(0,0,0)[0] intercept   : AIC=19353.453, Time=3.91 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,2)(0,0,0)[0] intercept   : AIC=19506.433, Time=3.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,1,3)(0,0,0)[0] intercept   : AIC=19451.842, Time=5.50 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,3)(0,0,0)[0] intercept   : AIC=19459.688, Time=3.48 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,1,2)(0,0,0)[0]             : AIC=19343.645, Time=2.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,2)(0,0,0)[0]             : AIC=19508.355, Time=0.93 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,1,1)(0,0,0)[0]             : AIC=19460.200, Time=1.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,1,3)(0,0,0)[0]             : AIC=19453.379, Time=5.72 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,1)(0,0,0)[0]             : AIC=19514.574, Time=0.91 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,3)(0,0,0)[0]             : AIC=19461.461, Time=1.86 sec\n","\n","Best model:  ARIMA(5,1,2)(0,0,0)[0]          \n","Total fit time: 39.658 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=28185.174, Time=1.57 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=28809.206, Time=0.04 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=28715.587, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=28510.071, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=28449.870, Time=0.46 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=28440.537, Time=0.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=28136.597, Time=2.67 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=28440.133, Time=0.49 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=28012.152, Time=4.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=28412.331, Time=0.57 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=27854.280, Time=2.88 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=28247.776, Time=0.77 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=27898.593, Time=4.66 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=28044.034, Time=4.71 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=27856.281, Time=3.31 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 26.714 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=18816.963, Time=1.63 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=19559.394, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=19281.571, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=19031.181, Time=0.20 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=18848.797, Time=1.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=19027.912, Time=0.44 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=18816.391, Time=1.77 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=19023.289, Time=0.31 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=18691.832, Time=3.41 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=19002.906, Time=0.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=18596.892, Time=1.66 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=18924.355, Time=0.36 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=18614.282, Time=2.22 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=18719.408, Time=1.98 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=18598.892, Time=3.90 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 19.357 seconds\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x800 with 10 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              country          rmse        r2\n","0              Brazil  15940.183487  0.999998\n","1               Chile   1580.191648  0.999999\n","2            Colombia   2142.269110  0.999999\n","3  Dominican Republic    433.149198  0.999997\n","4             Germany  30356.430119  0.999995\n","5               Italy  16474.693932  0.999997\n","6              Mexico   7591.193300  0.999991\n","7              Panama   1140.214707  0.999990\n","8                  US  47866.562242  0.999998\n","9             Uruguay    829.900166  0.999996"],"text/html":["\n","  <div id=\"df-6b4f8ae9-158f-4dcd-9ded-89df89fbc3da\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Brazil</td>\n","      <td>15940.183487</td>\n","      <td>0.999998</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Chile</td>\n","      <td>1580.191648</td>\n","      <td>0.999999</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Colombia</td>\n","      <td>2142.269110</td>\n","      <td>0.999999</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dominican Republic</td>\n","      <td>433.149198</td>\n","      <td>0.999997</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Germany</td>\n","      <td>30356.430119</td>\n","      <td>0.999995</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Italy</td>\n","      <td>16474.693932</td>\n","      <td>0.999997</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Mexico</td>\n","      <td>7591.193300</td>\n","      <td>0.999991</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Panama</td>\n","      <td>1140.214707</td>\n","      <td>0.999990</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>US</td>\n","      <td>47866.562242</td>\n","      <td>0.999998</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Uruguay</td>\n","      <td>829.900166</td>\n","      <td>0.999996</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b4f8ae9-158f-4dcd-9ded-89df89fbc3da')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6b4f8ae9-158f-4dcd-9ded-89df89fbc3da button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6b4f8ae9-158f-4dcd-9ded-89df89fbc3da');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0ab73f20-aa49-4cc6-a25f-0fe93a0a0225\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0ab73f20-aa49-4cc6-a25f-0fe93a0a0225')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0ab73f20-aa49-4cc6-a25f-0fe93a0a0225 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3d08bea8-5fc0-4b44-8995-3b2db54e05f0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3d08bea8-5fc0-4b44-8995-3b2db54e05f0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"US\",\n          \"Chile\",\n          \"Italy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15841.93897003313,\n        \"min\": 433.14919751935287,\n        \"max\": 47866.56224192276,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          47866.56224192276,\n          1580.19164827973,\n          16474.69393151959\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.195454167148558e-06,\n        \"min\": 0.9999898731961044,\n        \"max\": 0.9999992463831839,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.9999982763208929,\n          0.9999991828150121,\n          0.9999966938831876\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["## Weekly"],"metadata":{"id":"PN--bPiK_YXN"}},{"cell_type":"code","source":["results = {}\n","\n","fig, axes = plt.subplots(nrows=2, ncols=5, figsize=(20, 8))\n","axes = axes.flatten()\n","\n","for i, country in enumerate(df_covid_w['country'].unique()[:10]):\n","    try:\n","        df_country = df_covid_w[df_covid_w['country'] == country]\n","        series = df_country['cases']\n","\n","        model = fit_arima(series)\n","        fitted_values = model.predict_in_sample()\n","\n","        rmse = sqrt(mean_squared_error(series, fitted_values))\n","        r2 = r2_score(series, fitted_values)\n","\n","        results[country] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(fitted_values, label='Fitted', color='red', linestyle='--')\n","        axes[i].set_title(country)\n","        axes[i].legend()\n","    except Exception as e:\n","        print(f\"Error processing {country}: {e}\")\n","        axes[i].set_title(f\"Error: {country}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'country'\n","results_df = results_df.reset_index()\n","results_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hBOez3JPZzUe","executionInfo":{"status":"ok","timestamp":1741356705348,"user_tz":-60,"elapsed":29089,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"f31e4e42-748b-43e9-a292-ae11c15fd0da"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=4115.849, Time=0.13 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=4458.354, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=4149.624, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=4349.108, Time=0.06 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=4584.671, Time=0.03 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=4120.095, Time=0.10 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=4119.816, Time=0.15 sec\n"," ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=4117.544, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=4117.662, Time=0.19 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=4132.316, Time=0.08 sec\n"," ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=4118.243, Time=0.11 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=4116.991, Time=0.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0] intercept   : AIC=4119.277, Time=0.25 sec\n"," ARIMA(2,1,2)(0,0,0)[0]             : AIC=4124.094, Time=0.13 sec\n","\n","Best model:  ARIMA(2,1,2)(0,0,0)[0] intercept\n","Total fit time: 1.680 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=3413.097, Time=0.16 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=3523.999, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=3425.472, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=3464.480, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=3417.125, Time=0.10 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=3427.844, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=3406.458, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=3408.109, Time=0.28 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=3405.266, Time=0.42 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=3403.071, Time=0.35 sec\n"," ARIMA(4,2,0)(0,0,0)[0]             : AIC=3409.689, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=3405.068, Time=0.52 sec\n"," ARIMA(3,2,0)(0,0,0)[0]             : AIC=3408.966, Time=0.06 sec\n"," ARIMA(5,2,0)(0,0,0)[0]             : AIC=3410.740, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=3406.936, Time=0.66 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0] intercept   : AIC=inf, Time=0.58 sec\n","\n","Best model:  ARIMA(4,2,1)(0,0,0)[0]          \n","Total fit time: 3.777 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=3497.516, Time=0.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,0)(0,0,0)[0]             : AIC=3589.580, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=3515.292, Time=0.03 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=3510.543, Time=0.05 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=3504.252, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=3503.920, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=3498.587, Time=0.41 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=3498.996, Time=0.28 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=3502.044, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=inf, Time=0.29 sec\n"," ARIMA(3,2,1)(0,0,0)[0]             : AIC=3505.330, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=3500.867, Time=0.40 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=3499.535, Time=0.24 sec\n","\n","Best model:  ARIMA(2,2,2)(0,0,0)[0]          \n","Total fit time: 2.340 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=3069.269, Time=0.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=3281.038, Time=0.04 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=3098.818, Time=0.05 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=3164.750, Time=0.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,0)(0,0,0)[0]             : AIC=3347.411, Time=0.03 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=3067.276, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=3090.299, Time=0.36 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=3084.744, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=3069.297, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,3)(0,0,0)[0] intercept   : AIC=3071.905, Time=1.75 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=3077.270, Time=0.35 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=3069.940, Time=0.46 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0]             : AIC=3075.934, Time=0.31 sec\n","\n","Best model:  ARIMA(1,1,2)(0,0,0)[0] intercept\n","Total fit time: 3.972 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=4031.348, Time=0.22 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=4124.607, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=4048.015, Time=0.03 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=4046.691, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=4033.152, Time=0.11 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=4029.196, Time=0.07 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=4033.307, Time=0.05 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=4027.498, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,0)(0,0,0)[0]             : AIC=4029.197, Time=0.06 sec\n"," ARIMA(3,2,1)(0,0,0)[0]             : AIC=4031.196, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,0)(0,0,0)[0] intercept   : AIC=4029.498, Time=0.04 sec\n","\n","Best model:  ARIMA(2,2,0)(0,0,0)[0]          \n","Total fit time: 0.939 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=3907.981, Time=0.10 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=4090.782, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=3968.706, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=3978.043, Time=0.06 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=3930.261, Time=0.09 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=3910.752, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=3909.764, Time=0.25 sec\n"," ARIMA(2,2,3)(0,0,0)[0]             : AIC=3910.113, Time=0.13 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=3932.349, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=3932.181, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=3907.905, Time=0.28 sec\n"," ARIMA(3,2,0)(0,0,0)[0]             : AIC=3912.403, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=3909.694, Time=0.28 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=3911.875, Time=0.04 sec\n"," ARIMA(4,2,0)(0,0,0)[0]             : AIC=3910.360, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=3911.555, Time=0.30 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0] intercept   : AIC=3910.013, Time=0.30 sec\n","\n","Best model:  ARIMA(3,2,1)(0,0,0)[0]          \n","Total fit time: 2.387 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=3708.953, Time=0.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=3999.302, Time=0.04 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=3729.873, Time=0.03 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=3891.082, Time=0.05 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=4094.489, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=3715.636, Time=0.11 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=3714.782, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=3711.686, Time=0.49 sec\n"," ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=3707.225, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=3705.373, Time=0.14 sec\n"," ARIMA(0,1,3)(0,0,0)[0] intercept   : AIC=3800.715, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,4)(0,0,0)[0] intercept   : AIC=3706.757, Time=0.18 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=3855.777, Time=0.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,4)(0,0,0)[0] intercept   : AIC=3775.360, Time=0.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,4)(0,0,0)[0] intercept   : AIC=3708.033, Time=0.28 sec\n"," ARIMA(1,1,3)(0,0,0)[0]             : AIC=3712.008, Time=0.12 sec\n","\n","Best model:  ARIMA(1,1,3)(0,0,0)[0] intercept\n","Total fit time: 2.473 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=3065.030, Time=0.14 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=3437.952, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=3170.559, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=3258.229, Time=0.18 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=3500.423, Time=0.03 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=3070.108, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=3065.111, Time=0.10 sec\n"," ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=3066.532, Time=0.20 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=3066.727, Time=0.20 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=3093.449, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=3066.832, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=3065.111, Time=0.21 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0] intercept   : AIC=3068.399, Time=0.26 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0]             : AIC=3071.356, Time=0.23 sec\n","\n","Best model:  ARIMA(2,1,2)(0,0,0)[0] intercept\n","Total fit time: 1.948 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=4431.515, Time=0.14 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=4897.830, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=4576.129, Time=0.04 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=4780.549, Time=0.06 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=4975.782, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=4440.959, Time=0.12 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=4445.004, Time=0.11 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=4433.662, Time=0.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=4433.751, Time=0.24 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=4493.695, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=4433.803, Time=0.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=4441.590, Time=0.25 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0] intercept   : AIC=4434.715, Time=0.24 sec\n"," ARIMA(2,1,2)(0,0,0)[0]             : AIC=4437.584, Time=0.11 sec\n","\n","Best model:  ARIMA(2,1,2)(0,0,0)[0] intercept\n","Total fit time: 1.793 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=3022.443, Time=0.18 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=3548.442, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=3183.672, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=3356.604, Time=0.29 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=3582.496, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=3030.901, Time=0.25 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=3026.845, Time=0.24 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=3018.963, Time=0.65 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=3024.642, Time=1.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,2)(0,0,0)[0] intercept   : AIC=3020.826, Time=1.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0] intercept   : AIC=3020.387, Time=0.27 sec\n"," ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=3022.409, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,1)(0,0,0)[0] intercept   : AIC=3022.393, Time=0.22 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,3)(0,0,0)[0] intercept   : AIC=3021.324, Time=0.57 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0]             : AIC=3019.719, Time=0.26 sec\n","\n","Best model:  ARIMA(3,1,2)(0,0,0)[0] intercept\n","Total fit time: 5.456 seconds\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x800 with 10 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              country           rmse        r2\n","0              Brazil   72886.599426  0.999968\n","1               Chile    8395.130147  0.999977\n","2            Colombia   11331.678796  0.999979\n","3  Dominican Republic    2856.340800  0.999852\n","4             Germany   59096.011952  0.999982\n","5               Italy   40276.492481  0.999980\n","6              Mexico   20204.683582  0.999940\n","7              Panama    2835.155618  0.999938\n","8                  US  189197.220477  0.999973\n","9             Uruguay    2423.543439  0.999965"],"text/html":["\n","  <div id=\"df-5a36ca9a-3aff-45c2-940e-0a152c5362a0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Brazil</td>\n","      <td>72886.599426</td>\n","      <td>0.999968</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Chile</td>\n","      <td>8395.130147</td>\n","      <td>0.999977</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Colombia</td>\n","      <td>11331.678796</td>\n","      <td>0.999979</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dominican Republic</td>\n","      <td>2856.340800</td>\n","      <td>0.999852</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Germany</td>\n","      <td>59096.011952</td>\n","      <td>0.999982</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Italy</td>\n","      <td>40276.492481</td>\n","      <td>0.999980</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Mexico</td>\n","      <td>20204.683582</td>\n","      <td>0.999940</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Panama</td>\n","      <td>2835.155618</td>\n","      <td>0.999938</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>US</td>\n","      <td>189197.220477</td>\n","      <td>0.999973</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Uruguay</td>\n","      <td>2423.543439</td>\n","      <td>0.999965</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a36ca9a-3aff-45c2-940e-0a152c5362a0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5a36ca9a-3aff-45c2-940e-0a152c5362a0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5a36ca9a-3aff-45c2-940e-0a152c5362a0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a572672c-b20f-4916-99ce-aa2782fa3a00\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a572672c-b20f-4916-99ce-aa2782fa3a00')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a572672c-b20f-4916-99ce-aa2782fa3a00 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8874ad7e-0be2-457a-8065-e9f7333d800e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8874ad7e-0be2-457a-8065-e9f7333d800e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"US\",\n          \"Chile\",\n          \"Italy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57814.362755689224,\n        \"min\": 2423.5434394895533,\n        \"max\": 189197.22047747395,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          189197.22047747395,\n          8395.130146789526,\n          40276.49248143211\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.9765201759106936e-05,\n        \"min\": 0.9998519068790797,\n        \"max\": 0.999982242159734,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.9999732135353863,\n          0.9999771994411053,\n          0.9999804993734345\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["## Monthly"],"metadata":{"id":"jtVUHzB9_a8E"}},{"cell_type":"code","source":["results = {}\n","\n","fig, axes = plt.subplots(nrows=2, ncols=5, figsize=(20, 8))\n","axes = axes.flatten()\n","\n","for i, country in enumerate(df_covid_m['country'].unique()[:10]):\n","    try:\n","        df_country = df_covid_m[df_covid_m['country'] == country]\n","        series = df_country['cases']\n","\n","        model = fit_arima(series)\n","        fitted_values = model.predict_in_sample()\n","\n","        rmse = sqrt(mean_squared_error(series, fitted_values))\n","        r2 = r2_score(series, fitted_values)\n","\n","        results[country] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(fitted_values, label='Fitted', color='red', linestyle='--')\n","        axes[i].set_title(country)\n","        axes[i].legend()\n","    except Exception as e:\n","        print(f\"Error processing {country}: {e}\")\n","        axes[i].set_title(f\"Error: {country}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'country'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"rLq5myZ3ai54","executionInfo":{"status":"ok","timestamp":1741356711906,"user_tz":-60,"elapsed":6555,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"b7f400b6-753d-4e47-c0a1-ea99a245c640"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=1128.269, Time=0.07 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1144.991, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=1129.675, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=1123.918, Time=0.03 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1177.553, Time=0.01 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=1123.890, Time=0.04 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=1126.058, Time=0.06 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=1126.746, Time=0.04 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=1125.172, Time=0.04 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=1125.748, Time=0.03 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=1130.786, Time=0.03 sec\n","\n","Best model:  ARIMA(1,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.402 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=1008.133, Time=0.07 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1021.240, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=1008.772, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=1004.176, Time=0.03 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1040.621, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=1004.160, Time=0.22 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=1006.234, Time=0.07 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=1006.588, Time=0.05 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=1004.161, Time=0.03 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=1005.698, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0]             : AIC=1008.822, Time=0.04 sec\n","\n","Best model:  ARIMA(1,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.600 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=1034.684, Time=0.10 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1044.095, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=1028.793, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=1032.143, Time=0.02 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1060.449, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=1030.339, Time=0.03 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=1030.450, Time=0.04 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=inf, Time=0.08 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=1030.217, Time=0.02 sec\n","\n","Best model:  ARIMA(1,1,0)(0,0,0)[0] intercept\n","Total fit time: 0.339 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=879.512, Time=0.21 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=872.960, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=874.210, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=874.314, Time=0.02 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=888.955, Time=0.02 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=876.312, Time=0.03 sec\n","\n","Best model:  ARIMA(0,1,0)(0,0,0)[0] intercept\n","Total fit time: 0.329 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=1147.962, Time=0.12 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1187.555, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=1148.046, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=1162.563, Time=0.04 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1201.346, Time=0.01 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=1147.086, Time=0.05 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=1152.782, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=1144.557, Time=0.04 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=1146.626, Time=0.10 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=1146.181, Time=0.03 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=1144.585, Time=0.03 sec\n","\n","Best model:  ARIMA(1,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.525 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=1151.745, Time=0.09 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1155.325, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=1145.941, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=1149.456, Time=0.03 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1169.710, Time=0.01 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=1147.472, Time=0.03 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=1147.642, Time=0.03 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=1149.469, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,0)(0,0,0)[0]             : AIC=1148.053, Time=0.04 sec\n","\n","Best model:  ARIMA(1,1,0)(0,0,0)[0] intercept\n","Total fit time: 0.336 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=1035.469, Time=0.27 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1039.826, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=1034.372, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=1030.305, Time=0.04 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1063.436, Time=0.02 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=1032.049, Time=0.04 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=1033.217, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=1034.334, Time=0.08 sec\n"," ARIMA(0,1,1)(0,0,0)[0]             : AIC=1044.456, Time=0.02 sec\n","\n","Best model:  ARIMA(0,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.550 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=912.122, Time=0.07 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=908.790, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=907.722, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=906.850, Time=0.02 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=924.055, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=908.740, Time=0.04 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=909.429, Time=0.03 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=911.347, Time=0.04 sec\n"," ARIMA(0,1,1)(0,0,0)[0]             : AIC=915.807, Time=0.02 sec\n","\n","Best model:  ARIMA(0,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.285 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=1255.267, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1253.351, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=1249.887, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=1249.474, Time=0.02 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1270.874, Time=0.01 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=1251.267, Time=0.04 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=1251.708, Time=0.03 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=1253.729, Time=0.05 sec\n"," ARIMA(0,1,1)(0,0,0)[0]             : AIC=1260.164, Time=0.02 sec\n","\n","Best model:  ARIMA(0,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.297 seconds\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=927.556, Time=0.12 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=935.832, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=924.857, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=922.747, Time=0.03 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=943.328, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=923.590, Time=0.04 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=923.837, Time=0.03 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=925.704, Time=0.05 sec\n"," ARIMA(0,1,1)(0,0,0)[0]             : AIC=926.265, Time=0.02 sec\n","\n","Best model:  ARIMA(0,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.368 seconds\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x800 with 10 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              country          rmse        r2\n","0              Brazil  5.846026e+05  0.998018\n","1               Chile  1.189043e+05  0.995670\n","2            Colombia  1.692542e+05  0.995347\n","3  Dominican Republic  2.224009e+04  0.991248\n","4             Germany  7.551127e+05  0.997277\n","5               Italy  7.879457e+05  0.992948\n","6              Mexico  1.724310e+05  0.995758\n","7              Panama  3.378084e+04  0.991484\n","8                  US  3.069392e+06  0.993228\n","9             Uruguay  4.133165e+04  0.990190"],"text/html":["\n","  <div id=\"df-75c4d0b8-2d72-415c-85d1-0e32b5890fa2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Brazil</td>\n","      <td>5.846026e+05</td>\n","      <td>0.998018</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Chile</td>\n","      <td>1.189043e+05</td>\n","      <td>0.995670</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Colombia</td>\n","      <td>1.692542e+05</td>\n","      <td>0.995347</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dominican Republic</td>\n","      <td>2.224009e+04</td>\n","      <td>0.991248</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Germany</td>\n","      <td>7.551127e+05</td>\n","      <td>0.997277</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Italy</td>\n","      <td>7.879457e+05</td>\n","      <td>0.992948</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Mexico</td>\n","      <td>1.724310e+05</td>\n","      <td>0.995758</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Panama</td>\n","      <td>3.378084e+04</td>\n","      <td>0.991484</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>US</td>\n","      <td>3.069392e+06</td>\n","      <td>0.993228</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Uruguay</td>\n","      <td>4.133165e+04</td>\n","      <td>0.990190</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75c4d0b8-2d72-415c-85d1-0e32b5890fa2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-75c4d0b8-2d72-415c-85d1-0e32b5890fa2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-75c4d0b8-2d72-415c-85d1-0e32b5890fa2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-430cdb13-f8b7-4d85-a74e-f81fbd401f95\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-430cdb13-f8b7-4d85-a74e-f81fbd401f95')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-430cdb13-f8b7-4d85-a74e-f81fbd401f95 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_34e3574e-282d-45d7-8bfb-c2be906a779e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_34e3574e-282d-45d7-8bfb-c2be906a779e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"US\",\n          \"Chile\",\n          \"Italy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 926033.6929604484,\n        \"min\": 22240.08736207958,\n        \"max\": 3069391.9289867342,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          3069391.9289867342,\n          118904.34615786377,\n          787945.7349671941\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0026784124310737793,\n        \"min\": 0.9901904158605846,\n        \"max\": 0.9980182200815692,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.9932280544159648,\n          0.995670242694433,\n          0.9929476351372892\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["# Covid: Train-Test Split"],"metadata":{"id":"VBpXePYG_7SP"}},{"cell_type":"markdown","source":["## Daily"],"metadata":{"id":"xzU4sbbS_0g-"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","results = {}\n","\n","fig, axes = plt.subplots(nrows=2, ncols=5, figsize=(20, 8))\n","axes = axes.flatten()\n","\n","for i, country in enumerate(df_covid_d['country'].unique()[:10]):\n","    try:\n","        df_country = df_covid_d[df_covid_d['country'] == country]\n","        series = df_country['cases']\n","\n","        # Train-test split\n","        train_data, test_data = train_test_split(series, test_size=0.5, shuffle=False)\n","\n","        model = fit_arima(train_data, )  # Fit the model on the training data\n","\n","        # Predict only on the test data\n","        fitted_values = model.predict(n_periods=len(test_data))\n","\n","        # Calculate RMSE and R-squared on the test data\n","        rmse = sqrt(mean_squared_error(test_data, fitted_values))\n","        r2 = r2_score(test_data, fitted_values)\n","\n","        results[country] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(test_data.index, fitted_values, label='Fitted', color='red', linestyle='--') # plot fitted values against the test data index\n","        axes[i].set_title(country)\n","        axes[i].legend()\n","    except Exception as e:\n","        print(f\"Error processing {country}: {e}\")\n","        axes[i].set_title(f\"Error: {country}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'country'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"yK2MPGiga25m","executionInfo":{"status":"ok","timestamp":1741356867182,"user_tz":-60,"elapsed":155269,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"2320c859-39d0-4da9-b199-7fcc8593fb8c"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=12281.731, Time=2.22 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=12578.241, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=12578.706, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=12523.494, Time=0.23 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=12417.434, Time=0.35 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=12374.511, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=12268.862, Time=0.85 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=12362.974, Time=0.32 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=12123.822, Time=1.70 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=12300.836, Time=0.41 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=12041.410, Time=1.80 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=12142.498, Time=0.56 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=12050.666, Time=1.89 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=12106.687, Time=1.51 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=12043.447, Time=4.14 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 16.261 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=9440.395, Time=0.93 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=9613.463, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=9568.374, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=9489.572, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=9462.273, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=9453.641, Time=0.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=9225.572, Time=0.80 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=9413.655, Time=0.35 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=9359.633, Time=0.89 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=9195.299, Time=1.38 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=9401.023, Time=0.97 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=9201.468, Time=1.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,4)(0,0,0)[0]             : AIC=9216.689, Time=1.80 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0]             : AIC=9307.350, Time=2.69 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,4)(0,0,0)[0]             : AIC=9223.902, Time=2.21 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0] intercept   : AIC=9255.136, Time=1.73 sec\n","\n","Best model:  ARIMA(3,2,3)(0,0,0)[0]          \n","Total fit time: 15.702 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=inf, Time=1.40 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=9940.224, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=9938.582, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=9937.416, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0]             : AIC=9916.942, Time=0.13 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=9910.178, Time=0.13 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=9934.331, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=9897.968, Time=0.18 sec\n"," ARIMA(3,2,0)(0,0,0)[0]             : AIC=9916.006, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=9890.783, Time=0.18 sec\n"," ARIMA(4,2,0)(0,0,0)[0]             : AIC=9896.758, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=9884.284, Time=0.25 sec\n"," ARIMA(5,2,0)(0,0,0)[0]             : AIC=9882.275, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,0)(0,0,0)[0] intercept   : AIC=9884.215, Time=0.26 sec\n","\n","Best model:  ARIMA(5,2,0)(0,0,0)[0]          \n","Total fit time: 2.973 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=7920.474, Time=0.38 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=8137.220, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=8056.329, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=7928.225, Time=0.11 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=7918.623, Time=0.36 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,2)(0,0,0)[0]             : AIC=7921.736, Time=0.21 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=7923.576, Time=0.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=7902.181, Time=0.57 sec\n"," ARIMA(0,2,3)(0,0,0)[0]             : AIC=7917.349, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=7904.147, Time=0.78 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,4)(0,0,0)[0]             : AIC=7904.158, Time=0.74 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,4)(0,0,0)[0]             : AIC=7911.010, Time=0.32 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0]             : AIC=7903.393, Time=3.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0] intercept   : AIC=7904.164, Time=1.37 sec\n","\n","Best model:  ARIMA(1,2,3)(0,0,0)[0]          \n","Total fit time: 8.228 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=inf, Time=1.27 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=11166.286, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=11111.427, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=11034.097, Time=0.19 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=11010.448, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=11004.736, Time=0.26 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=11111.168, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=10923.087, Time=0.71 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,0)(0,0,0)[0]             : AIC=11071.570, Time=0.27 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=10871.522, Time=0.37 sec\n"," ARIMA(4,2,0)(0,0,0)[0]             : AIC=10983.376, Time=0.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=10807.851, Time=0.71 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,0)(0,0,0)[0]             : AIC=10887.990, Time=0.30 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=10613.819, Time=1.84 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=10666.232, Time=1.32 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=10640.892, Time=4.44 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=inf, Time=1.86 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=10615.806, Time=2.22 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 16.207 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=10047.727, Time=0.58 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=10311.571, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=10306.864, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=10303.773, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=10253.596, Time=0.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=10212.219, Time=0.21 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=10023.445, Time=0.78 sec\n"," ARIMA(3,2,1)(0,0,0)[0]             : AIC=10180.610, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=9996.511, Time=1.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=10132.124, Time=0.20 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=9998.346, Time=1.58 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=9978.476, Time=4.20 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=10041.290, Time=0.90 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=9970.061, Time=1.72 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,4)(0,0,0)[0]             : AIC=9980.235, Time=2.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,4)(0,0,0)[0]             : AIC=9987.536, Time=2.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0] intercept   : AIC=9971.984, Time=2.39 sec\n","\n","Best model:  ARIMA(5,2,3)(0,0,0)[0]          \n","Total fit time: 18.218 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=10668.686, Time=0.62 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=10922.252, Time=0.04 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=10848.322, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=10722.693, Time=0.53 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=10711.072, Time=0.99 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=10714.128, Time=0.75 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=10647.867, Time=1.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=10704.215, Time=0.26 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=10604.409, Time=1.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=10686.438, Time=0.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=10537.348, Time=1.61 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=10615.987, Time=0.45 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=10543.065, Time=1.72 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=10567.340, Time=1.38 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=10539.381, Time=1.88 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 12.920 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=7966.291, Time=0.88 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=8149.882, Time=0.04 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=8132.096, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=8103.941, Time=0.22 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=8041.005, Time=1.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=8035.018, Time=1.22 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=7963.002, Time=0.97 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=8023.199, Time=0.39 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=7926.499, Time=0.78 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=7989.589, Time=0.45 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=7872.392, Time=0.99 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=7938.050, Time=0.53 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=7865.267, Time=1.24 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=7892.673, Time=1.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,4)(0,0,0)[0]             : AIC=7859.113, Time=1.36 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,4)(0,0,0)[0]             : AIC=7870.206, Time=1.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,5)(0,0,0)[0]             : AIC=7854.881, Time=1.75 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,5)(0,0,0)[0]             : AIC=7868.219, Time=3.61 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,5)(0,0,0)[0] intercept   : AIC=7856.731, Time=2.83 sec\n","\n","Best model:  ARIMA(5,2,5)(0,0,0)[0]          \n","Total fit time: 20.762 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=12902.195, Time=0.62 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=13078.684, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=12974.076, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=12885.665, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0]             : AIC=12886.795, Time=0.12 sec\n"," ARIMA(0,2,2)(0,0,0)[0]             : AIC=12885.724, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=12881.704, Time=0.49 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=12886.744, Time=0.54 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,3)(0,0,0)[0]             : AIC=12895.627, Time=0.23 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=12887.046, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=12829.242, Time=1.28 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=12824.986, Time=1.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=12802.654, Time=1.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=12887.595, Time=0.23 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=12904.231, Time=1.90 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=12882.024, Time=0.96 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=12724.106, Time=2.40 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=12679.871, Time=1.96 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=12650.786, Time=2.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=12848.149, Time=0.36 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0] intercept   : AIC=12652.145, Time=2.26 sec\n","\n","Best model:  ARIMA(5,2,2)(0,0,0)[0]          \n","Total fit time: 18.137 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=8347.651, Time=2.46 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=8544.526, Time=0.05 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=8426.629, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=8347.680, Time=1.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=8350.048, Time=1.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=8350.048, Time=1.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=8291.176, Time=0.48 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=8340.831, Time=0.35 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=8279.846, Time=1.00 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,1)(0,0,0)[0]             : AIC=8325.407, Time=0.39 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=8271.967, Time=1.63 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,1)(0,0,0)[0]             : AIC=8307.218, Time=0.24 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,3)(0,0,0)[0]             : AIC=inf, Time=2.66 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=8270.634, Time=1.21 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=8270.520, Time=0.73 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=8296.206, Time=0.71 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,4)(0,0,0)[0]             : AIC=8278.408, Time=3.41 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0]             : AIC=8271.492, Time=1.52 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,4)(0,0,0)[0]             : AIC=8275.141, Time=1.50 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0] intercept   : AIC=8272.531, Time=1.23 sec\n","\n","Best model:  ARIMA(3,2,3)(0,0,0)[0]          \n","Total fit time: 23.054 seconds\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x800 with 10 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              country          rmse        r2\n","0              Brazil  2.376262e+06  0.827157\n","1               Chile  2.023576e+06 -1.405707\n","2            Colombia  3.705919e+05  0.530038\n","3  Dominican Republic  1.531611e+05 -0.972362\n","4             Germany  2.134573e+07 -1.773291\n","5               Italy  1.169494e+07 -1.283545\n","6              Mexico  3.592698e+06 -5.566601\n","7              Panama  1.524675e+05  0.504346\n","8                  US  8.614402e+06  0.836299\n","9             Uruguay  4.486279e+05 -2.123267"],"text/html":["\n","  <div id=\"df-31c045c6-658f-4720-a73b-cc75d2c604e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Brazil</td>\n","      <td>2.376262e+06</td>\n","      <td>0.827157</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Chile</td>\n","      <td>2.023576e+06</td>\n","      <td>-1.405707</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Colombia</td>\n","      <td>3.705919e+05</td>\n","      <td>0.530038</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dominican Republic</td>\n","      <td>1.531611e+05</td>\n","      <td>-0.972362</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Germany</td>\n","      <td>2.134573e+07</td>\n","      <td>-1.773291</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Italy</td>\n","      <td>1.169494e+07</td>\n","      <td>-1.283545</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Mexico</td>\n","      <td>3.592698e+06</td>\n","      <td>-5.566601</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Panama</td>\n","      <td>1.524675e+05</td>\n","      <td>0.504346</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>US</td>\n","      <td>8.614402e+06</td>\n","      <td>0.836299</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Uruguay</td>\n","      <td>4.486279e+05</td>\n","      <td>-2.123267</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-31c045c6-658f-4720-a73b-cc75d2c604e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-31c045c6-658f-4720-a73b-cc75d2c604e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-31c045c6-658f-4720-a73b-cc75d2c604e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-193241bf-6732-499d-8a0a-2801564196cb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-193241bf-6732-499d-8a0a-2801564196cb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-193241bf-6732-499d-8a0a-2801564196cb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b04fae81-5b60-41d4-9c9d-a0860d539c89\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b04fae81-5b60-41d4-9c9d-a0860d539c89 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"US\",\n          \"Chile\",\n          \"Italy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6927159.506498218,\n        \"min\": 152467.48108161608,\n        \"max\": 21345732.43301482,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          8614401.821211321,\n          2023575.6829337813,\n          11694940.117513346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9509445480936551,\n        \"min\": -5.5666013751279095,\n        \"max\": 0.8362990067081085,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.8362990067081085,\n          -1.405706810026008,\n          -1.2835452284416862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["## Weekly"],"metadata":{"id":"ElNYnjuT_3VI"}},{"cell_type":"code","source":["results = {}\n","\n","fig, axes = plt.subplots(nrows=2, ncols=5, figsize=(20, 8))\n","axes = axes.flatten()\n","\n","for i, country in enumerate(df_covid_w['country'].unique()[:10]):\n","    try:\n","        df_country = df_covid_w[df_covid_w['country'] == country]\n","        series = df_country['cases']\n","\n","        # Train-test split\n","        train_data, test_data = train_test_split(series, test_size=0.5, shuffle=False)\n","\n","        model = fit_arima(train_data, )  # Fit the model on the training data\n","\n","        # Predict only on the test data\n","        fitted_values = model.predict(n_periods=len(test_data))\n","\n","        # Calculate RMSE and R-squared on the test data\n","        rmse = sqrt(mean_squared_error(test_data, fitted_values))\n","        r2 = r2_score(test_data, fitted_values)\n","\n","        results[country] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(test_data.index, fitted_values, label='Fitted', color='red', linestyle='--') # plot fitted values against the test data index\n","        axes[i].set_title(country)\n","        axes[i].legend()\n","    except Exception as e:\n","        print(f\"Error processing {country}: {e}\")\n","        axes[i].set_title(f\"Error: {country}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'country'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"4AgKRiPVekZI","executionInfo":{"status":"ok","timestamp":1741356881693,"user_tz":-60,"elapsed":14503,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"277f0cfa-66dd-48f0-ab20-6149f2dcb715"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=1933.749, Time=0.21 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1926.814, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=1928.755, Time=0.02 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=1928.850, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0]             : AIC=1929.842, Time=0.27 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=1928.490, Time=0.02 sec\n","\n","Best model:  ARIMA(0,2,0)(0,0,0)[0]          \n","Total fit time: 0.594 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=1453.802, Time=0.07 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1543.603, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=1466.939, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=1488.657, Time=0.10 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=1460.351, Time=0.06 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=1454.560, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=1455.185, Time=0.26 sec\n"," ARIMA(2,2,3)(0,0,0)[0]             : AIC=1455.431, Time=0.09 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=1462.158, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=1458.148, Time=0.07 sec\n"," ARIMA(3,2,1)(0,0,0)[0]             : AIC=1455.082, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=1456.973, Time=0.15 sec\n"," ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=1455.788, Time=0.08 sec\n","\n","Best model:  ARIMA(2,2,2)(0,0,0)[0]          \n","Total fit time: 1.143 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=1738.390, Time=0.12 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1759.284, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=1734.015, Time=0.03 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=1738.549, Time=0.03 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=1735.829, Time=0.03 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=1735.788, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=1737.330, Time=0.11 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=1736.014, Time=0.03 sec\n","\n","Best model:  ARIMA(1,2,0)(0,0,0)[0]          \n","Total fit time: 0.423 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=1332.916, Time=0.17 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1339.185, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=1336.502, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=1338.347, Time=0.03 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=1331.778, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,2)(0,0,0)[0]             : AIC=1331.519, Time=0.09 sec\n"," ARIMA(0,2,3)(0,0,0)[0]             : AIC=1331.123, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=1333.095, Time=0.20 sec\n"," ARIMA(0,2,4)(0,0,0)[0]             : AIC=1333.085, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,4)(0,0,0)[0]             : AIC=1331.783, Time=0.41 sec\n"," ARIMA(0,2,3)(0,0,0)[0] intercept   : AIC=1333.124, Time=0.14 sec\n","\n","Best model:  ARIMA(0,2,3)(0,0,0)[0]          \n","Total fit time: 1.479 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=1710.398, Time=0.10 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1743.282, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=1713.624, Time=0.03 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=1707.705, Time=0.03 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=1708.614, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,2)(0,0,0)[0]             : AIC=1709.260, Time=0.09 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=1709.191, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=1709.670, Time=0.07 sec\n","\n","Best model:  ARIMA(0,2,1)(0,0,0)[0]          \n","Total fit time: 0.595 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=1720.859, Time=0.30 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1786.465, Time=0.06 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=1727.376, Time=0.06 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=1742.452, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=1724.861, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=1718.938, Time=0.32 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0]             : AIC=1723.891, Time=0.21 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=1720.880, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=1720.899, Time=0.90 sec\n"," ARIMA(3,2,0)(0,0,0)[0]             : AIC=1720.286, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=inf, Time=0.63 sec\n"," ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=1720.958, Time=0.07 sec\n","\n","Best model:  ARIMA(2,2,1)(0,0,0)[0]          \n","Total fit time: 2.949 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=1681.481, Time=0.14 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1692.290, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=1684.845, Time=0.03 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=1687.801, Time=0.03 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=1681.441, Time=0.06 sec\n"," ARIMA(0,2,2)(0,0,0)[0]             : AIC=1680.249, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,3)(0,0,0)[0]             : AIC=1682.055, Time=0.08 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=1686.189, Time=0.05 sec\n"," ARIMA(1,2,3)(0,0,0)[0]             : AIC=1683.937, Time=0.11 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,2)(0,0,0)[0] intercept   : AIC=1681.517, Time=0.05 sec\n","\n","Best model:  ARIMA(0,2,2)(0,0,0)[0]          \n","Total fit time: 0.627 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=1399.851, Time=0.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1614.984, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=1420.017, Time=0.04 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=inf, Time=0.07 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1676.956, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=1403.412, Time=0.08 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=1395.387, Time=0.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=1402.425, Time=0.18 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=1395.649, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=1397.953, Time=0.13 sec\n"," ARIMA(3,1,0)(0,0,0)[0] intercept   : AIC=1396.213, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=inf, Time=0.42 sec\n"," ARIMA(2,1,1)(0,0,0)[0]             : AIC=1398.915, Time=0.07 sec\n","\n","Best model:  ARIMA(2,1,1)(0,0,0)[0] intercept\n","Total fit time: 1.597 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=2049.011, Time=0.15 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=2078.868, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=2051.716, Time=0.02 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=2057.730, Time=0.03 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=2054.115, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=2055.439, Time=0.08 sec\n"," ARIMA(3,2,2)(0,0,0)[0]             : AIC=2044.763, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=2052.160, Time=0.11 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=2035.728, Time=0.22 sec\n"," ARIMA(4,2,1)(0,0,0)[0]             : AIC=2039.926, Time=0.11 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,2)(0,0,0)[0]             : AIC=2033.027, Time=0.27 sec\n"," ARIMA(5,2,1)(0,0,0)[0]             : AIC=2031.524, Time=0.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(5,2,0)(0,0,0)[0]             : AIC=2029.472, Time=0.10 sec\n"," ARIMA(4,2,0)(0,0,0)[0]             : AIC=2047.788, Time=0.07 sec\n"," ARIMA(5,2,0)(0,0,0)[0] intercept   : AIC=2031.060, Time=0.10 sec\n","\n","Best model:  ARIMA(5,2,0)(0,0,0)[0]          \n","Total fit time: 1.716 seconds\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=1412.669, Time=0.25 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1439.586, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=1421.528, Time=0.03 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=1430.183, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=1412.298, Time=0.15 sec\n"," ARIMA(0,2,2)(0,0,0)[0]             : AIC=1411.922, Time=0.04 sec\n"," ARIMA(0,2,3)(0,0,0)[0]             : AIC=1413.811, Time=0.06 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=1422.423, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=1414.283, Time=0.17 sec\n"," ARIMA(0,2,2)(0,0,0)[0] intercept   : AIC=1413.923, Time=0.05 sec\n","\n","Best model:  ARIMA(0,2,2)(0,0,0)[0]          \n","Total fit time: 0.852 seconds\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x800 with 10 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              country          rmse        r2\n","0              Brazil  2.158911e+06  0.856084\n","1               Chile  2.003019e+06 -1.358617\n","2            Colombia  6.824407e+05 -0.629182\n","3  Dominican Republic  1.642990e+05 -1.317129\n","4             Germany  2.139232e+07 -1.787923\n","5               Italy  1.227834e+07 -1.522993\n","6              Mexico  2.787472e+06 -3.007099\n","7              Panama  1.407310e+05  0.571995\n","8                  US  9.025021e+06  0.817615\n","9             Uruguay  4.531874e+05 -2.239137"],"text/html":["\n","  <div id=\"df-958ccd50-a9cb-4731-8324-d11902a2f2c7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Brazil</td>\n","      <td>2.158911e+06</td>\n","      <td>0.856084</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Chile</td>\n","      <td>2.003019e+06</td>\n","      <td>-1.358617</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Colombia</td>\n","      <td>6.824407e+05</td>\n","      <td>-0.629182</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dominican Republic</td>\n","      <td>1.642990e+05</td>\n","      <td>-1.317129</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Germany</td>\n","      <td>2.139232e+07</td>\n","      <td>-1.787923</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Italy</td>\n","      <td>1.227834e+07</td>\n","      <td>-1.522993</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Mexico</td>\n","      <td>2.787472e+06</td>\n","      <td>-3.007099</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Panama</td>\n","      <td>1.407310e+05</td>\n","      <td>0.571995</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>US</td>\n","      <td>9.025021e+06</td>\n","      <td>0.817615</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Uruguay</td>\n","      <td>4.531874e+05</td>\n","      <td>-2.239137</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-958ccd50-a9cb-4731-8324-d11902a2f2c7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-958ccd50-a9cb-4731-8324-d11902a2f2c7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-958ccd50-a9cb-4731-8324-d11902a2f2c7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b72600e7-d6e2-4ca8-a88e-5062cf8e6cf7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b72600e7-d6e2-4ca8-a88e-5062cf8e6cf7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b72600e7-d6e2-4ca8-a88e-5062cf8e6cf7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_43ed6e21-27dd-41a5-9a3b-d0c57a9cda7c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_43ed6e21-27dd-41a5-9a3b-d0c57a9cda7c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"US\",\n          \"Chile\",\n          \"Italy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7039772.527088227,\n        \"min\": 140730.9905589128,\n        \"max\": 21392318.873840667,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          9025021.113940204,\n          2003018.532953394,\n          12278341.801566595\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3345892886321258,\n        \"min\": -3.0070987462553704,\n        \"max\": 0.8560842163691468,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.8176153768317097,\n          -1.3586169819989458,\n          -1.5229928225241554\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["## Montly"],"metadata":{"id":"-04vnaNRABC9"}},{"cell_type":"code","source":["results = {}\n","\n","fig, axes = plt.subplots(nrows=2, ncols=5, figsize=(20, 8))\n","axes = axes.flatten()\n","\n","for i, country in enumerate(df_covid_m['country'].unique()[:10]):\n","    try:\n","        df_country = df_covid_m[df_covid_m['country'] == country]\n","        series = df_country['cases']\n","\n","        # Train-test split\n","        train_data, test_data = train_test_split(series, test_size=0.5, shuffle=False)\n","\n","        model = fit_arima(train_data, )  # Fit the model on the training data\n","\n","        # Predict only on the test data\n","        fitted_values = model.predict(n_periods=len(test_data))\n","\n","        # Calculate RMSE and R-squared on the test data\n","        rmse = sqrt(mean_squared_error(test_data, fitted_values))\n","        r2 = r2_score(test_data, fitted_values)\n","\n","        results[country] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(test_data.index, fitted_values, label='Fitted', color='red', linestyle='--') # plot fitted values against the test data index\n","        axes[i].set_title(country)\n","        axes[i].legend()\n","    except Exception as e:\n","        print(f\"Error processing {country}: {e}\")\n","        axes[i].set_title(f\"Error: {country}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'country'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"oBxMmrDqeuQH","executionInfo":{"status":"ok","timestamp":1741356891275,"user_tz":-60,"elapsed":9568,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"60149967-42d9-4560-f580-697dc4d7e5de"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=491.157, Time=0.18 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=485.766, Time=0.01 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=487.683, Time=0.02 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=487.740, Time=0.03 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=488.467, Time=0.04 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=486.828, Time=0.01 sec\n","\n","Best model:  ARIMA(0,2,0)(0,0,0)[0]          \n","Total fit time: 0.296 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=inf, Time=0.13 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=452.781, Time=0.01 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=441.554, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=442.181, Time=0.03 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=470.852, Time=0.01 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=441.754, Time=0.03 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=441.731, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=442.209, Time=0.13 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=442.410, Time=0.01 sec\n","\n","Best model:  ARIMA(1,1,0)(0,0,0)[0] intercept\n","Total fit time: 0.433 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=463.428, Time=0.06 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=457.205, Time=0.01 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=458.834, Time=0.01 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=459.139, Time=0.02 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=460.483, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=458.377, Time=0.02 sec\n","\n","Best model:  ARIMA(0,2,0)(0,0,0)[0]          \n","Total fit time: 0.171 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=inf, Time=0.23 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=391.246, Time=0.20 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=385.613, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=384.295, Time=0.06 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=413.282, Time=0.01 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=387.057, Time=0.03 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=385.625, Time=0.03 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=387.155, Time=0.04 sec\n"," ARIMA(0,1,1)(0,0,0)[0]             : AIC=403.744, Time=0.02 sec\n","\n","Best model:  ARIMA(0,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.660 seconds\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=480.036, Time=0.09 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=497.806, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=485.702, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=482.688, Time=0.03 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=507.491, Time=0.01 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=479.557, Time=0.06 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=479.831, Time=0.04 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=477.172, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=inf, Time=0.13 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=483.288, Time=0.03 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=478.301, Time=0.03 sec\n","\n","Best model:  ARIMA(1,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.512 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=499.342, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=504.052, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=495.518, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=498.404, Time=0.02 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=513.238, Time=0.01 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=496.976, Time=0.03 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=497.230, Time=0.03 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=499.187, Time=0.05 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=495.369, Time=0.02 sec\n"," ARIMA(2,1,0)(0,0,0)[0]             : AIC=497.332, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0]             : AIC=497.664, Time=0.03 sec\n"," ARIMA(0,1,1)(0,0,0)[0]             : AIC=506.436, Time=0.02 sec\n"," ARIMA(2,1,1)(0,0,0)[0]             : AIC=499.611, Time=0.06 sec\n","\n","Best model:  ARIMA(1,1,0)(0,0,0)[0]          \n","Total fit time: 0.405 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=469.099, Time=0.15 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=473.960, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=465.052, Time=0.03 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=465.511, Time=0.05 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=491.517, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=465.255, Time=0.07 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=464.822, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=466.883, Time=0.27 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=467.430, Time=0.50 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=465.538, Time=0.10 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=467.527, Time=0.10 sec\n","\n","Best model:  ARIMA(1,1,1)(0,0,0)[0] intercept\n","Total fit time: 1.422 seconds\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=406.784, Time=0.68 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=413.770, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=406.296, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=inf, Time=0.25 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=426.779, Time=0.03 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=404.150, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,0)(0,0,0)[0] intercept   : AIC=406.014, Time=0.09 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=403.657, Time=0.21 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=401.703, Time=0.13 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=405.209, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=inf, Time=0.09 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=405.240, Time=0.03 sec\n","\n","Best model:  ARIMA(1,1,1)(0,0,0)[0] intercept\n","Total fit time: 1.819 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=558.329, Time=0.05 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=574.347, Time=0.01 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=560.706, Time=0.01 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=561.882, Time=0.03 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=585.954, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=557.330, Time=0.05 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=555.142, Time=0.04 sec\n"," ARIMA(0,1,3)(0,0,0)[0] intercept   : AIC=557.658, Time=0.05 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=556.741, Time=0.03 sec\n"," ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=559.723, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,2)(0,0,0)[0]             : AIC=573.798, Time=0.03 sec\n","\n","Best model:  ARIMA(0,1,2)(0,0,0)[0] intercept\n","Total fit time: 0.411 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=inf, Time=0.21 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=428.829, Time=0.01 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=412.654, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=inf, Time=0.06 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=433.312, Time=0.01 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=402.864, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,0)(0,0,0)[0] intercept   : AIC=404.723, Time=0.06 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=404.370, Time=0.07 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=inf, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=405.322, Time=0.08 sec\n"," ARIMA(2,1,0)(0,0,0)[0]             : AIC=402.221, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=411.478, Time=0.02 sec\n"," ARIMA(3,1,0)(0,0,0)[0]             : AIC=403.836, Time=0.04 sec\n"," ARIMA(2,1,1)(0,0,0)[0]             : AIC=403.403, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0]             : AIC=inf, Time=0.07 sec\n"," ARIMA(3,1,1)(0,0,0)[0]             : AIC=404.557, Time=0.06 sec\n","\n","Best model:  ARIMA(2,1,0)(0,0,0)[0]          \n","Total fit time: 0.977 seconds\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x800 with 10 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              country          rmse         r2\n","0              Brazil  4.628032e+06   0.357736\n","1               Chile  1.259886e+06   0.096035\n","2            Colombia  5.308769e+06 -97.234756\n","3  Dominican Republic  5.062524e+04   0.782935\n","4             Germany  2.135925e+07  -1.714693\n","5               Italy  1.418061e+07  -2.277336\n","6              Mexico  8.015766e+05   0.677790\n","7              Panama  1.408438e+05   0.577293\n","8                  US  2.659336e+07  -0.544269\n","9             Uruguay  6.796949e+05  -6.279797"],"text/html":["\n","  <div id=\"df-649c9790-7996-4ba2-8388-e16694641667\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Brazil</td>\n","      <td>4.628032e+06</td>\n","      <td>0.357736</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Chile</td>\n","      <td>1.259886e+06</td>\n","      <td>0.096035</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Colombia</td>\n","      <td>5.308769e+06</td>\n","      <td>-97.234756</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dominican Republic</td>\n","      <td>5.062524e+04</td>\n","      <td>0.782935</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Germany</td>\n","      <td>2.135925e+07</td>\n","      <td>-1.714693</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Italy</td>\n","      <td>1.418061e+07</td>\n","      <td>-2.277336</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Mexico</td>\n","      <td>8.015766e+05</td>\n","      <td>0.677790</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Panama</td>\n","      <td>1.408438e+05</td>\n","      <td>0.577293</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>US</td>\n","      <td>2.659336e+07</td>\n","      <td>-0.544269</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Uruguay</td>\n","      <td>6.796949e+05</td>\n","      <td>-6.279797</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-649c9790-7996-4ba2-8388-e16694641667')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-649c9790-7996-4ba2-8388-e16694641667 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-649c9790-7996-4ba2-8388-e16694641667');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-19599b92-1578-431c-8e54-bb99720d30b9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-19599b92-1578-431c-8e54-bb99720d30b9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-19599b92-1578-431c-8e54-bb99720d30b9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d4acd9cf-9788-4c7d-9429-cd2abf1f4b69\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d4acd9cf-9788-4c7d-9429-cd2abf1f4b69 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"US\",\n          \"Chile\",\n          \"Italy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9742748.756223163,\n        \"min\": 50625.24165808136,\n        \"max\": 26593364.48205065,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          26593364.48205065,\n          1259886.2412528386,\n          14180607.8136061\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.531818620415184,\n        \"min\": -97.23475595416782,\n        \"max\": 0.7829345198606267,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          -0.5442694043613405,\n          0.09603487128358457,\n          -2.2773364442722848\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["# Epidemics"],"metadata":{"id":"JqrEov44ADDU"}},{"cell_type":"code","source":["df_dengue = pd.read_csv('https://raw.githubusercontent.com/danielgvb/pandemic_modelling/refs/heads/main/Data/silver/dengue_no_split.csv')\n","df_zika = pd.read_csv('https://raw.githubusercontent.com/danielgvb/pandemic_modelling/refs/heads/main/Data/silver/zika.csv')\n","df_chic = pd.read_csv('https://raw.githubusercontent.com/danielgvb/pandemic_modelling/refs/heads/main/Data/silver/chicunguya.csv')\n","df_var = pd.read_csv('https://raw.githubusercontent.com/danielgvb/pandemic_modelling/refs/heads/main/Data/silver/varicela.csv')"],"metadata":{"id":"WPVa0UrPAIC9","executionInfo":{"status":"ok","timestamp":1741356891889,"user_tz":-60,"elapsed":604,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["df_dengue['date'] = pd.to_datetime(df_dengue['DATE'])\n","df_zika['date'] = pd.to_datetime(df_zika['DATE'])\n","df_chic['date'] = pd.to_datetime(df_chic['DATE'])\n","df_var['date'] = pd.to_datetime(df_var['DATE'])"],"metadata":{"id":"2snu9KDFAZpf","executionInfo":{"status":"ok","timestamp":1741356891899,"user_tz":-60,"elapsed":6,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["# Set 'date' as the index\n","df_dengue.set_index('date', inplace=True)\n","df_zika.set_index('date', inplace=True)\n","df_chic.set_index('date', inplace=True)\n","df_var.set_index('date', inplace=True)"],"metadata":{"id":"V2cx4qFXAkDc","executionInfo":{"status":"ok","timestamp":1741356891906,"user_tz":-60,"elapsed":8,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["results = {}\n","\n","# Create a list of dataframes and their names\n","dfs = [(df_dengue, 'Dengue'), (df_zika, 'Zika'), (df_chic, 'Chikungunya'), (df_var, 'Varicela')]\n","\n","fig, axes = plt.subplots(nrows=len(dfs), ncols=1, figsize=(10, 6 * len(dfs)))\n","\n","for i, (df, name) in enumerate(dfs):\n","  try:\n","    series = df['Casos']\n","    model = fit_arima(series, seasonal=False) #Assuming no seasonality for these diseases\n","    fitted_values = model.predict_in_sample()\n","\n","    rmse = sqrt(mean_squared_error(series, fitted_values))\n","    r2 = r2_score(series, fitted_values)\n","\n","    results[name] = {'rmse': rmse, 'r2': r2}\n","\n","    axes[i].plot(series, label='Observed', color='blue')\n","    axes[i].plot(fitted_values, label='Fitted', color='red', linestyle='--')\n","    axes[i].set_title(f'Observed vs. Fitted Values ({name})')\n","    axes[i].legend()\n","\n","  except Exception as e:\n","    print(f\"Error processing {name}: {e}\")\n","    axes[i].set_title(f\"Error: {name}\")\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'Disease'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"5RLyGZ1bACes","executionInfo":{"status":"ok","timestamp":1741356942381,"user_tz":-60,"elapsed":50471,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"c52dd534-a0b9-4034-f649-678d0762f1bd"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=10539.844, Time=1.76 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=10558.402, Time=0.04 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=10557.199, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=10557.183, Time=0.09 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=10557.465, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=10554.752, Time=1.28 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=10561.093, Time=0.50 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=10551.245, Time=2.31 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=10551.609, Time=3.98 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=10559.180, Time=0.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=10551.098, Time=1.34 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=10552.503, Time=1.22 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0] intercept   : AIC=10540.791, Time=2.82 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0]             : AIC=10539.035, Time=0.74 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0]             : AIC=10553.541, Time=0.45 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0]             : AIC=10560.302, Time=0.23 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0]             : AIC=10550.058, Time=0.85 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0]             : AIC=10550.460, Time=0.85 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=10558.392, Time=0.20 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0]             : AIC=10549.904, Time=1.96 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0]             : AIC=10551.292, Time=1.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0]             : AIC=10539.328, Time=1.44 sec\n","\n","Best model:  ARIMA(2,1,2)(0,0,0)[0]          \n","Total fit time: 23.459 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=4407.650, Time=0.50 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=4428.358, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=4406.061, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=4408.558, Time=0.14 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=4426.358, Time=0.02 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=4406.484, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=4405.184, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=4407.156, Time=0.21 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=4407.109, Time=0.30 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=4409.944, Time=0.22 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=4403.184, Time=0.05 sec\n"," ARIMA(0,1,1)(0,0,0)[0]             : AIC=4406.558, Time=0.06 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=4404.061, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0]             : AIC=4405.156, Time=0.11 sec\n"," ARIMA(1,1,2)(0,0,0)[0]             : AIC=4405.109, Time=0.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,2)(0,0,0)[0]             : AIC=4407.944, Time=0.11 sec\n"," ARIMA(2,1,0)(0,0,0)[0]             : AIC=4404.484, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0]             : AIC=4405.650, Time=0.26 sec\n","\n","Best model:  ARIMA(1,1,1)(0,0,0)[0]          \n","Total fit time: 2.554 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=5178.706, Time=0.62 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=5183.120, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=5177.818, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=5178.623, Time=0.16 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=5181.120, Time=0.02 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=5177.972, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=5175.144, Time=0.21 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=5176.695, Time=0.53 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=5176.744, Time=0.42 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=5179.258, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0]             : AIC=5173.144, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0]             : AIC=5176.623, Time=0.26 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=5175.818, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0]             : AIC=5174.695, Time=0.26 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0]             : AIC=5174.744, Time=0.22 sec\n"," ARIMA(0,1,2)(0,0,0)[0]             : AIC=5177.258, Time=0.10 sec\n"," ARIMA(2,1,0)(0,0,0)[0]             : AIC=5175.972, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0]             : AIC=5176.706, Time=0.34 sec\n","\n","Best model:  ARIMA(1,1,1)(0,0,0)[0]          \n","Total fit time: 3.752 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=11601.527, Time=1.08 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=11790.308, Time=0.04 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=11667.085, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=11708.439, Time=0.35 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=11788.308, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=11632.066, Time=0.34 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=11633.811, Time=0.47 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=11603.496, Time=4.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=11603.505, Time=1.98 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=11642.885, Time=0.23 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=11633.396, Time=0.76 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=11619.779, Time=1.30 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0] intercept   : AIC=11604.381, Time=1.72 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0]             : AIC=11599.527, Time=0.49 sec\n"," ARIMA(1,1,2)(0,0,0)[0]             : AIC=11630.065, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0]             : AIC=11631.811, Time=0.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0]             : AIC=11601.496, Time=0.93 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0]             : AIC=11601.505, Time=1.00 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=11640.886, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0]             : AIC=11631.396, Time=0.83 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0]             : AIC=11617.780, Time=2.34 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0]             : AIC=11602.381, Time=0.80 sec\n","\n","Best model:  ARIMA(2,1,2)(0,0,0)[0]          \n","Total fit time: 19.358 seconds\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x2400 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["       Disease        rmse        r2\n","0       Dengue   92.649234  0.972040\n","1         Zika  133.931884  0.959218\n","2  Chikungunya   96.954034  0.943977\n","3     Varicela  168.885289  0.949505"],"text/html":["\n","  <div id=\"df-e842f5bd-2e63-4516-8ff6-3fee1a8b69cc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Disease</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dengue</td>\n","      <td>92.649234</td>\n","      <td>0.972040</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Zika</td>\n","      <td>133.931884</td>\n","      <td>0.959218</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chikungunya</td>\n","      <td>96.954034</td>\n","      <td>0.943977</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Varicela</td>\n","      <td>168.885289</td>\n","      <td>0.949505</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e842f5bd-2e63-4516-8ff6-3fee1a8b69cc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e842f5bd-2e63-4516-8ff6-3fee1a8b69cc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e842f5bd-2e63-4516-8ff6-3fee1a8b69cc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7f65e718-71f7-4b2f-90be-e216e8cea8e6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f65e718-71f7-4b2f-90be-e216e8cea8e6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7f65e718-71f7-4b2f-90be-e216e8cea8e6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_fdfa748e-d73c-481d-b13a-bf6c558dd221\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fdfa748e-d73c-481d-b13a-bf6c558dd221 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Disease\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Zika\",\n          \"Varicela\",\n          \"Dengue\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35.704729155881786,\n        \"min\": 92.64923368073319,\n        \"max\": 168.88528935683817,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          133.93188415181368,\n          168.88528935683817,\n          92.64923368073319\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.012305107294002101,\n        \"min\": 0.9439769531155697,\n        \"max\": 0.9720403362304982,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.9592183274412424,\n          0.9495053423964751,\n          0.9720403362304982\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["# Add 'cum_cases' column to each DataFrame\n","df_dengue['cum_cases'] = df_dengue['Casos'].cumsum()\n","df_zika['cum_cases'] = df_zika['Casos'].cumsum()\n","df_chic['cum_cases'] = df_chic['Casos'].cumsum()\n","df_var['cum_cases'] = df_var['Casos'].cumsum()\n","\n","results = {}\n","\n","# Create a list of dataframes, their names, and the column to analyze\n","dfs = [(df_dengue, 'Dengue', 'cum_cases'), (df_zika, 'Zika', 'cum_cases'),\n","       (df_chic, 'Chikungunya', 'cum_cases'), (df_var, 'Varicela', 'cum_cases')]\n","\n","fig, axes = plt.subplots(nrows=len(dfs), ncols=1, figsize=(10, 6 * len(dfs)))\n","\n","for i, (df, name, column) in enumerate(dfs):\n","    try:\n","        series = df[column]\n","        model = fit_arima(series, seasonal=False)\n","        fitted_values = model.predict_in_sample()\n","\n","        rmse = sqrt(mean_squared_error(series, fitted_values))\n","        r2 = r2_score(series, fitted_values)\n","\n","        results[name] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(fitted_values, label='Fitted', color='red', linestyle='--')\n","        axes[i].set_title(f'Observed vs. Fitted Values ({name}) - Cumulative Cases')\n","        axes[i].legend()\n","\n","    except Exception as e:\n","        print(f\"Error processing {name}: {e}\")\n","        axes[i].set_title(f\"Error: {name}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'Disease'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"RWh4iKU_Bszc","executionInfo":{"status":"ok","timestamp":1741356991537,"user_tz":-60,"elapsed":49152,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"56938ab3-4e3c-49b7-a2fe-510c0a02ccd2"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=10527.855, Time=1.68 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=10546.714, Time=0.04 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=10545.529, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=10545.514, Time=0.11 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=10545.837, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=10543.040, Time=1.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=10549.448, Time=0.50 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0] intercept   : AIC=10541.628, Time=0.59 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0] intercept   : AIC=10539.904, Time=2.28 sec\n"," ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=10547.513, Time=0.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0] intercept   : AIC=10539.391, Time=1.54 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0] intercept   : AIC=10540.806, Time=3.39 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0] intercept   : AIC=10528.195, Time=2.74 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=10527.048, Time=0.97 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=10541.882, Time=0.47 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=10548.704, Time=0.22 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=10538.402, Time=0.75 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=10538.809, Time=0.88 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=10546.785, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=10538.250, Time=0.52 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=10539.646, Time=0.44 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=10527.399, Time=1.58 sec\n","\n","Best model:  ARIMA(2,2,2)(0,0,0)[0]          \n","Total fit time: 20.345 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=4396.015, Time=0.54 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=4416.643, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=4394.414, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=4396.905, Time=0.14 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=4414.643, Time=0.02 sec\n"," ARIMA(2,2,0)(0,0,0)[0] intercept   : AIC=4394.840, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=4393.544, Time=0.23 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=4395.516, Time=0.51 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=4395.469, Time=1.75 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,2)(0,0,0)[0] intercept   : AIC=4398.292, Time=0.65 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=4391.544, Time=0.06 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=4394.905, Time=0.06 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=4392.414, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=4393.516, Time=0.11 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=4393.469, Time=0.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,2)(0,0,0)[0]             : AIC=4396.292, Time=0.13 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=4392.840, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=4394.015, Time=0.29 sec\n","\n","Best model:  ARIMA(1,2,1)(0,0,0)[0]          \n","Total fit time: 4.972 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=5167.717, Time=0.66 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=5172.101, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=5166.816, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=5167.619, Time=0.19 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=5170.101, Time=0.02 sec\n"," ARIMA(2,2,0)(0,0,0)[0] intercept   : AIC=5166.975, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=5164.153, Time=0.21 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=5165.707, Time=0.50 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=5165.755, Time=0.47 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,2)(0,0,0)[0] intercept   : AIC=5168.257, Time=0.22 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=5162.153, Time=0.11 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=5165.619, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,0)(0,0,0)[0]             : AIC=5164.816, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=5163.707, Time=0.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=5163.755, Time=0.23 sec\n"," ARIMA(0,2,2)(0,0,0)[0]             : AIC=5166.257, Time=0.10 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=5164.975, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=5165.717, Time=0.36 sec\n","\n","Best model:  ARIMA(1,2,1)(0,0,0)[0]          \n","Total fit time: 3.710 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=11589.280, Time=1.21 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=11777.898, Time=0.05 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=11654.798, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=11696.113, Time=0.35 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=11775.898, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=11619.800, Time=0.34 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=11621.543, Time=0.35 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0] intercept   : AIC=11591.250, Time=2.22 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0] intercept   : AIC=11591.259, Time=4.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=11630.598, Time=0.24 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0] intercept   : AIC=11621.131, Time=0.83 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0] intercept   : AIC=11607.564, Time=1.47 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0] intercept   : AIC=11592.139, Time=2.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=11587.280, Time=0.62 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=11617.800, Time=0.15 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=11619.543, Time=0.16 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=11589.250, Time=1.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=11589.259, Time=0.93 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=11628.598, Time=0.11 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=11619.131, Time=0.37 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=11605.564, Time=0.71 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=11590.139, Time=0.97 sec\n","\n","Best model:  ARIMA(2,2,2)(0,0,0)[0]          \n","Total fit time: 18.411 seconds\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x2400 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["       Disease        rmse        r2\n","0       Dengue   92.628178  1.000000\n","1         Zika  133.932977  0.999953\n","2  Chikungunya   96.954071  0.999976\n","3     Varicela  168.978899  1.000000"],"text/html":["\n","  <div id=\"df-6225114a-c43e-48a6-a384-f251e4b34b07\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Disease</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dengue</td>\n","      <td>92.628178</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Zika</td>\n","      <td>133.932977</td>\n","      <td>0.999953</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chikungunya</td>\n","      <td>96.954071</td>\n","      <td>0.999976</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Varicela</td>\n","      <td>168.978899</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6225114a-c43e-48a6-a384-f251e4b34b07')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6225114a-c43e-48a6-a384-f251e4b34b07 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6225114a-c43e-48a6-a384-f251e4b34b07');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fd05e4db-07d4-465a-b765-71cb7142fa01\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd05e4db-07d4-465a-b765-71cb7142fa01')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fd05e4db-07d4-465a-b765-71cb7142fa01 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_af19ef16-c06a-41ee-868c-edd3592a7477\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_af19ef16-c06a-41ee-868c-edd3592a7477 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Disease\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Zika\",\n          \"Varicela\",\n          \"Dengue\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35.750832633158254,\n        \"min\": 92.62817760885702,\n        \"max\": 168.97889876525954,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          133.9329774062704,\n          168.97889876525954,\n          92.62817760885702\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.2322195608951814e-05,\n        \"min\": 0.9999531717684234,\n        \"max\": 0.9999998323494688,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.9999531717684234,\n          0.9999998323494688,\n          0.9999997584804207\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["# Epidemics: Train-Test Split"],"metadata":{"id":"7PIayR7yB-v1"}},{"cell_type":"code","source":["# prompt: I want to do a train-test split for each epidemic dataframe splitting the data in half. use first halfe to fit an arima model and predict the data for the second part. Then do a plot with the actual data for the whole series and the predicted data for the second half. Also do the r2 and rmse for the predicted values of the second half against the actual values of the second half (test)\n","\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","results = {}\n","\n","# Create a list of dataframes, their names, and the column to analyze\n","dfs = [(df_dengue, 'Dengue', 'Casos'), (df_zika, 'Zika', 'Casos'),\n","       (df_chic, 'Chikungunya', 'Casos'), (df_var, 'Varicela', 'Casos')]\n","\n","fig, axes = plt.subplots(nrows=len(dfs), ncols=1, figsize=(10, 6 * len(dfs)))\n","\n","for i, (df, name, column) in enumerate(dfs):\n","    try:\n","        series = df[column]\n","\n","        # Train-test split\n","        train_data, test_data = train_test_split(series, test_size=0.5, shuffle=False)\n","\n","        model = fit_arima(train_data, seasonal=False)  # Fit the model on the training data\n","\n","        # Predict only on the test data\n","        fitted_values = model.predict(n_periods=len(test_data))\n","\n","        # Calculate RMSE and R-squared on the test data\n","        rmse = sqrt(mean_squared_error(test_data, fitted_values))\n","        r2 = r2_score(test_data, fitted_values)\n","\n","        results[name] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(test_data.index, fitted_values, label='Fitted', color='red', linestyle='--') # plot fitted values against the test data index\n","        axes[i].set_title(f'{name} - Train Test Split')\n","        axes[i].legend()\n","    except Exception as e:\n","        print(f\"Error processing {name}: {e}\")\n","        axes[i].set_title(f\"Error: {name}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'Disease'\n","results_df = results_df.reset_index()\n","results_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"SXOhA67rCCpY","executionInfo":{"status":"ok","timestamp":1741357035701,"user_tz":-60,"elapsed":44154,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"0277948a-491f-4aac-e839-ca69f82bc326"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=5113.137, Time=2.05 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=5129.290, Time=0.03 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=5128.828, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=5128.427, Time=0.17 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=5127.318, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=5130.713, Time=0.40 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=5130.100, Time=0.39 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=5113.011, Time=1.24 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=5130.550, Time=0.56 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,2)(0,0,0)[0] intercept   : AIC=5114.976, Time=1.84 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0] intercept   : AIC=5114.394, Time=1.43 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=5112.707, Time=1.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=5130.941, Time=0.86 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,4)(0,0,0)[0] intercept   : AIC=5114.647, Time=1.46 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,4)(0,0,0)[0] intercept   : AIC=5128.763, Time=1.45 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,4)(0,0,0)[0] intercept   : AIC=5116.651, Time=2.98 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0]             : AIC=5110.736, Time=0.99 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0]             : AIC=5128.973, Time=0.28 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0]             : AIC=5111.168, Time=0.76 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0]             : AIC=5112.471, Time=1.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,4)(0,0,0)[0]             : AIC=5112.688, Time=1.16 sec\n"," ARIMA(1,1,2)(0,0,0)[0]             : AIC=5128.752, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,4)(0,0,0)[0]             : AIC=5126.794, Time=0.32 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0]             : AIC=5110.879, Time=0.86 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,4)(0,0,0)[0]             : AIC=5114.659, Time=1.30 sec\n","\n","Best model:  ARIMA(2,1,3)(0,0,0)[0]          \n","Total fit time: 23.082 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=2318.097, Time=0.29 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=2324.343, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=2314.280, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=2315.518, Time=0.14 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=2322.343, Time=0.02 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=2315.513, Time=0.05 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=2314.854, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=2316.847, Time=0.13 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=2312.280, Time=0.04 sec\n"," ARIMA(2,1,0)(0,0,0)[0]             : AIC=2313.513, Time=0.03 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=2312.854, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0]             : AIC=2313.518, Time=0.05 sec\n"," ARIMA(2,1,1)(0,0,0)[0]             : AIC=2314.846, Time=0.07 sec\n","\n","Best model:  ARIMA(1,1,0)(0,0,0)[0]          \n","Total fit time: 1.166 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=2738.808, Time=0.40 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=2736.956, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=2735.333, Time=0.04 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=2735.731, Time=0.10 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=2734.956, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=2735.013, Time=0.16 sec\n","\n","Best model:  ARIMA(0,1,0)(0,0,0)[0]          \n","Total fit time: 0.738 seconds\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=5932.683, Time=2.58 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=6038.766, Time=0.04 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=5971.022, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=5992.348, Time=0.37 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=6036.906, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=5956.635, Time=0.20 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=5958.301, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0] intercept   : AIC=5933.681, Time=0.99 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0] intercept   : AIC=5933.858, Time=0.83 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=5959.201, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,3)(0,0,0)[0] intercept   : AIC=5955.224, Time=0.23 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=5958.996, Time=0.54 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0] intercept   : AIC=inf, Time=1.40 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0]             : AIC=5930.801, Time=0.38 sec\n"," ARIMA(1,1,2)(0,0,0)[0]             : AIC=5954.816, Time=0.08 sec\n"," ARIMA(2,1,1)(0,0,0)[0]             : AIC=5956.511, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,2)(0,0,0)[0]             : AIC=5931.805, Time=0.56 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,3)(0,0,0)[0]             : AIC=5931.982, Time=0.40 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=5957.435, Time=0.07 sec\n"," ARIMA(1,1,3)(0,0,0)[0]             : AIC=5953.452, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0]             : AIC=5957.266, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,3)(0,0,0)[0]             : AIC=5925.557, Time=0.86 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,3)(0,0,0)[0]             : AIC=5927.535, Time=1.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,4)(0,0,0)[0]             : AIC=5927.540, Time=1.24 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,4)(0,0,0)[0]             : AIC=5932.637, Time=2.61 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,2)(0,0,0)[0]             : AIC=5931.374, Time=1.40 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,1,4)(0,0,0)[0]             : AIC=5933.310, Time=1.27 sec\n","\n","Best model:  ARIMA(3,1,3)(0,0,0)[0]          \n","Total fit time: 18.188 seconds\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x2400 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["       Disease         rmse         r2\n","0       Dengue   725.991388  -0.233753\n","1         Zika    11.469999 -11.030468\n","2  Chikungunya     5.398045  -0.223126\n","3     Varicela  1187.406154  -1.363592"],"text/html":["\n","  <div id=\"df-3eb5cde1-0322-4bd8-a424-bf3d819556be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Disease</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dengue</td>\n","      <td>725.991388</td>\n","      <td>-0.233753</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Zika</td>\n","      <td>11.469999</td>\n","      <td>-11.030468</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chikungunya</td>\n","      <td>5.398045</td>\n","      <td>-0.223126</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Varicela</td>\n","      <td>1187.406154</td>\n","      <td>-1.363592</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3eb5cde1-0322-4bd8-a424-bf3d819556be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3eb5cde1-0322-4bd8-a424-bf3d819556be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3eb5cde1-0322-4bd8-a424-bf3d819556be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-131fb52c-5d10-4cb1-8d0d-509531b4ca16\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-131fb52c-5d10-4cb1-8d0d-509531b4ca16')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-131fb52c-5d10-4cb1-8d0d-509531b4ca16 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5f2d83d4-6f01-4a3e-b48f-73e449e620ad\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5f2d83d4-6f01-4a3e-b48f-73e449e620ad button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Disease\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Zika\",\n          \"Varicela\",\n          \"Dengue\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 578.9865462462143,\n        \"min\": 5.398044913567215,\n        \"max\": 1187.4061543854784,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          11.469998837518292,\n          1187.4061543854784,\n          725.991387534237\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.239223057921578,\n        \"min\": -11.030467673760386,\n        \"max\": -0.2231255060728743,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -11.030467673760386,\n          -1.3635916157356318,\n          -0.23375288997582144\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["# prompt: I want to do a train-test split for each epidemic dataframe splitting the data in half. use first halfe to fit an arima model and predict the data for the second part. Consider the column cum_cases for the modelling. Then do a plot with the actual data for the whole series and the predicted data for the second half. Also do the r2 and rmse for the predicted values of the second half against the actual values of the second half (test)\n","\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","results = {}\n","\n","# Create a list of dataframes, their names, and the column to analyze\n","dfs = [(df_dengue, 'Dengue', 'cum_cases'), (df_zika, 'Zika', 'cum_cases'),\n","       (df_chic, 'Chikungunya', 'cum_cases'), (df_var, 'Varicela', 'cum_cases')]\n","\n","fig, axes = plt.subplots(nrows=len(dfs), ncols=1, figsize=(10, 6 * len(dfs)))\n","\n","for i, (df, name, column) in enumerate(dfs):\n","    try:\n","        series = df[column]\n","\n","        # Train-test split\n","        train_data, test_data = train_test_split(series, test_size=0.5, shuffle=False)\n","\n","        model = fit_arima(train_data, seasonal=False)  # Fit the model on the training data\n","\n","        # Predict only on the test data\n","        fitted_values = model.predict(n_periods=len(test_data))\n","\n","        # Calculate RMSE and R-squared on the test data\n","        rmse = sqrt(mean_squared_error(test_data, fitted_values))\n","        r2 = r2_score(test_data, fitted_values)\n","\n","        results[name] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(test_data.index, fitted_values, label='Fitted', color='red', linestyle='--') # plot fitted values against the test data index\n","        axes[i].set_title(f'{name} - Train Test Split')\n","        axes[i].legend()\n","\n","        print(f'{name} - R^2: {r2:.4f}, RMSE: {rmse:.4f}')\n","\n","    except Exception as e:\n","        print(f\"Error processing {name}: {e}\")\n","        axes[i].set_title(f\"Error: {name}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'Disease'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"SvQ7V8ALEOEL","executionInfo":{"status":"ok","timestamp":1741357357873,"user_tz":-60,"elapsed":47144,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"0b0cdf9a-115f-4bff-934b-6b586a8df54a"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=5101.533, Time=1.12 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=5117.695, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=5117.264, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=5116.879, Time=0.15 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=5115.741, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=5119.229, Time=0.41 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=5118.629, Time=0.36 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0] intercept   : AIC=5101.169, Time=1.34 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0] intercept   : AIC=5119.035, Time=0.78 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0] intercept   : AIC=5103.365, Time=1.63 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0] intercept   : AIC=5102.916, Time=1.48 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0] intercept   : AIC=5101.128, Time=1.23 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0] intercept   : AIC=5119.414, Time=1.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0] intercept   : AIC=5103.127, Time=3.74 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,4)(0,0,0)[0] intercept   : AIC=5117.313, Time=0.71 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,4)(0,0,0)[0] intercept   : AIC=5104.801, Time=1.85 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=5099.164, Time=0.90 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=5117.464, Time=0.30 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=5099.575, Time=0.89 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=5100.878, Time=1.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0]             : AIC=5101.077, Time=1.35 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=5117.288, Time=0.20 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,4)(0,0,0)[0]             : AIC=5115.359, Time=0.34 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=5099.292, Time=0.87 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,4)(0,0,0)[0]             : AIC=5102.642, Time=3.71 sec\n","\n","Best model:  ARIMA(2,2,3)(0,0,0)[0]          \n","Total fit time: 25.725 seconds\n","Dengue - R^2: 0.7935, RMSE: 47099.7734\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=2305.760, Time=0.39 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=2311.928, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=2301.932, Time=0.08 sec\n"," ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=2303.164, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,0)(0,0,0)[0]             : AIC=2309.928, Time=0.02 sec\n"," ARIMA(2,2,0)(0,0,0)[0] intercept   : AIC=2303.167, Time=0.05 sec\n"," ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=2302.511, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=2304.504, Time=0.13 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=2299.932, Time=0.04 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=2301.167, Time=0.03 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=2300.511, Time=0.07 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=2301.164, Time=0.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=2302.504, Time=0.08 sec\n","\n","Best model:  ARIMA(1,2,0)(0,0,0)[0]          \n","Total fit time: 1.200 seconds\n","Zika - R^2: -40.4148, RMSE: 1029.7727\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=2727.124, Time=0.43 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=2725.242, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=2723.636, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=2724.031, Time=0.10 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=2723.242, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=2723.327, Time=0.15 sec\n","\n","Best model:  ARIMA(0,2,0)(0,0,0)[0]          \n","Total fit time: 0.775 seconds\n","Chikungunya - R^2: 0.3165, RMSE: 223.3101\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=5920.069, Time=1.11 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=6026.055, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=5958.454, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=5979.738, Time=0.22 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=6024.186, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=5944.086, Time=0.19 sec\n"," ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=5945.750, Time=0.20 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0] intercept   : AIC=5921.083, Time=1.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0] intercept   : AIC=5921.358, Time=0.80 sec\n"," ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=5946.644, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0] intercept   : AIC=5942.595, Time=0.55 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0] intercept   : AIC=5946.445, Time=0.58 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0] intercept   : AIC=inf, Time=1.44 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=5918.285, Time=0.45 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=5942.256, Time=0.09 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=5943.947, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=5919.300, Time=0.78 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=5919.475, Time=2.12 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=5944.863, Time=0.17 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=5940.898, Time=0.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0]             : AIC=5944.699, Time=0.40 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=5912.973, Time=0.89 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,3)(0,0,0)[0]             : AIC=5914.953, Time=1.27 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,4)(0,0,0)[0]             : AIC=5915.055, Time=1.40 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0]             : AIC=5920.140, Time=0.92 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0]             : AIC=5918.879, Time=0.97 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,4)(0,0,0)[0]             : AIC=5920.711, Time=1.53 sec\n","\n","Best model:  ARIMA(3,2,3)(0,0,0)[0]          \n","Total fit time: 18.103 seconds\n","Varicela - R^2: -0.7008, RMSE: 178932.5071\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x2400 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["       Disease           rmse         r2\n","0       Dengue   47099.773426   0.793521\n","1         Zika    1029.772657 -40.414776\n","2  Chikungunya     223.310073   0.316541\n","3     Varicela  178932.507055  -0.700758"],"text/html":["\n","  <div id=\"df-bfb25bbb-cc31-4240-8388-7e916b51069a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Disease</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dengue</td>\n","      <td>47099.773426</td>\n","      <td>0.793521</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Zika</td>\n","      <td>1029.772657</td>\n","      <td>-40.414776</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chikungunya</td>\n","      <td>223.310073</td>\n","      <td>0.316541</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Varicela</td>\n","      <td>178932.507055</td>\n","      <td>-0.700758</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bfb25bbb-cc31-4240-8388-7e916b51069a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bfb25bbb-cc31-4240-8388-7e916b51069a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bfb25bbb-cc31-4240-8388-7e916b51069a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e331c590-e5ec-4fac-9179-6c5ccc5eace9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e331c590-e5ec-4fac-9179-6c5ccc5eace9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e331c590-e5ec-4fac-9179-6c5ccc5eace9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ad0f6524-645e-44a7-9b4f-77df1574e696\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ad0f6524-645e-44a7-9b4f-77df1574e696 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Disease\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Zika\",\n          \"Varicela\",\n          \"Dengue\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 84304.37306653002,\n        \"min\": 223.31007341561843,\n        \"max\": 178932.50705517764,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1029.7726566820545,\n          178932.50705517764,\n          47099.773426139844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.285180320652096,\n        \"min\": -40.414776026205516,\n        \"max\": 0.7935214031113849,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -40.414776026205516,\n          -0.7007582261878573,\n          0.7935214031113849\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["results = {}\n","\n","# Create a list of dataframes, their names, and the column to analyze\n","dfs = [(df_dengue, 'Dengue', 'cum_cases'), (df_zika, 'Zika', 'cum_cases'),\n","       (df_chic, 'Chikungunya', 'cum_cases'), (df_var, 'Varicela', 'cum_cases')]\n","\n","fig, axes = plt.subplots(nrows=len(dfs), ncols=1, figsize=(10, 6 * len(dfs)))\n","\n","for i, (df, name, column) in enumerate(dfs):\n","    try:\n","        series = df[column]\n","\n","        # Train-test split (20% train, 80% test)\n","        train_size = int(len(series) * 0.2)\n","        train_data, test_data = series[:train_size], series[train_size:]\n","\n","        model = fit_arima(train_data, seasonal=False)  # Fit the model on the training data\n","\n","        # Predict only on the test data\n","        fitted_values = model.predict(n_periods=len(test_data))\n","\n","        # Calculate RMSE and R-squared on the test data\n","        rmse = sqrt(mean_squared_error(test_data, fitted_values))\n","        r2 = r2_score(test_data, fitted_values)\n","\n","        results[name] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(test_data.index, fitted_values, label='Fitted', color='red', linestyle='--') # plot fitted values against the test data index\n","        axes[i].set_title(f'{name} - Train Test Split (20/80)')\n","        axes[i].legend()\n","\n","        print(f'{name} - R^2: {r2:.4f}, RMSE: {rmse:.4f}')\n","\n","    except Exception as e:\n","        print(f\"Error processing {name}: {e}\")\n","        axes[i].set_title(f\"Error: {name}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'Disease'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"g0DRESsOEk-C","executionInfo":{"status":"ok","timestamp":1741357383970,"user_tz":-60,"elapsed":26044,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"a1b3a282-7e5a-408c-b849-26c08f6f9fcb"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=1985.507, Time=0.43 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=1990.796, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=1991.594, Time=0.03 sec\n"," ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=1991.768, Time=0.09 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1989.969, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=1992.610, Time=0.27 sec\n"," ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=1993.311, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0] intercept   : AIC=inf, Time=1.90 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0] intercept   : AIC=1987.419, Time=1.93 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=1991.763, Time=0.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0] intercept   : AIC=1993.326, Time=0.27 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0] intercept   : AIC=1995.054, Time=0.29 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0] intercept   : AIC=inf, Time=0.84 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=1984.570, Time=0.39 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=1991.487, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0]             : AIC=1992.219, Time=0.11 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=1986.515, Time=0.53 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=1986.523, Time=0.45 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=1991.030, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=1992.168, Time=0.15 sec\n"," ARIMA(3,2,1)(0,0,0)[0]             : AIC=1993.938, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=inf, Time=0.64 sec\n","\n","Best model:  ARIMA(2,2,2)(0,0,0)[0]          \n","Total fit time: 9.234 seconds\n","Dengue - R^2: -0.7464, RMSE: 211519.9612\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=981.262, Time=0.28 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1156.799, Time=0.01 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=982.293, Time=0.05 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=1086.286, Time=0.12 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1196.756, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=981.316, Time=0.12 sec\n"," ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=979.284, Time=0.19 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=979.551, Time=0.10 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=978.731, Time=0.09 sec\n"," ARIMA(3,1,0)(0,0,0)[0] intercept   : AIC=980.046, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0] intercept   : AIC=981.344, Time=0.30 sec\n"," ARIMA(2,1,0)(0,0,0)[0]             : AIC=977.694, Time=0.06 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=980.827, Time=0.03 sec\n"," ARIMA(3,1,0)(0,0,0)[0]             : AIC=979.214, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0]             : AIC=978.777, Time=0.08 sec\n"," ARIMA(1,1,1)(0,0,0)[0]             : AIC=978.345, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,1,1)(0,0,0)[0]             : AIC=980.769, Time=0.15 sec\n","\n","Best model:  ARIMA(2,1,0)(0,0,0)[0]          \n","Total fit time: 1.851 seconds\n","Zika - R^2: -2.6980, RMSE: 1412.7273\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=1153.947, Time=0.19 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=1148.360, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=1148.912, Time=0.03 sec\n"," ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=1149.075, Time=0.07 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=1146.429, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=1150.043, Time=0.12 sec\n","\n","Best model:  ARIMA(0,2,0)(0,0,0)[0]          \n","Total fit time: 0.452 seconds\n","Chikungunya - R^2: -2325.1234, RMSE: 97334.7740\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=2345.169, Time=0.46 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=2363.230, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=2355.944, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=2357.578, Time=0.14 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=2361.358, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=2351.910, Time=0.25 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=2352.115, Time=0.25 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0] intercept   : AIC=2342.790, Time=0.60 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,1)(0,0,0)[0] intercept   : AIC=2342.971, Time=0.52 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(4,2,2)(0,0,0)[0] intercept   : AIC=2345.508, Time=0.78 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0] intercept   : AIC=2344.099, Time=2.65 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0] intercept   : AIC=2342.158, Time=1.05 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0] intercept   : AIC=2344.984, Time=0.52 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0] intercept   : AIC=2344.548, Time=0.88 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,4)(0,0,0)[0] intercept   : AIC=2346.369, Time=0.69 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,4)(0,0,0)[0] intercept   : AIC=2346.284, Time=0.93 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,3)(0,0,0)[0]             : AIC=2341.629, Time=0.32 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,3)(0,0,0)[0]             : AIC=2344.329, Time=0.24 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0]             : AIC=2344.734, Time=0.25 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,3)(0,0,0)[0]             : AIC=2343.578, Time=0.43 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,4)(0,0,0)[0]             : AIC=2343.600, Time=0.44 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=2350.042, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,4)(0,0,0)[0]             : AIC=2344.888, Time=0.51 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,2)(0,0,0)[0]             : AIC=2342.245, Time=0.25 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,2,4)(0,0,0)[0]             : AIC=2345.005, Time=0.80 sec\n","\n","Best model:  ARIMA(2,2,3)(0,0,0)[0]          \n","Total fit time: 13.270 seconds\n","Varicela - R^2: 0.5698, RMSE: 210187.6467\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x2400 with 4 Axes>"],"image/png":"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zU3Vq1fX+vXrH/m1H1Xv3r1j9N0/HfjevXu6fv26atSoIUmR07UfplSpUtE2RMuaNauKFy+uU6dOPXKde/fu1fHjx/X888/rxo0bkT+7oKAgNWzYUBs3bpTD4ZAkZcyYUdu2bdOlS5ce+f3u5+Liol9//VVjx46Vn5+fFixYoD59+ih//vzq2LGjbt26FeM5ffr0idaO+HuzcuXKBKkpNjdv3pRlWfLz8/vPazdu3Kh3331XHTp00JNPPhnZf/fuXUmSh4dHjOd4enpGPh5h5cqVatCgQbS/M15eXipevLi6du2qJUuWaM6cOcqZM6fatm2rEydORHuvB73P/bXcz8/PT9evX//P7w8AwFTzONu4caNatWqlXLlyycXFRT/++GO8X8OyLH344YcqVqyYPDw8lDt3br3//vsJXywAJLHAwEBlyJBBkpnabFmWRowYoaxZs0a7jRo1SpJ09erVaM/Ply9ftHZEWPnnn38kKTKAFylSJNp1mTJlilOwic3x48clmXXq/65z9erVMWq8X3h4uC5fvhztFhIS8kh13K9gwYIx+m7evKn+/fsre/bsSpcunbJmzRp5nb+//3++5r9/tpL5+Ub8bB9FxM+ua9euMX52s2fPVnBwcGRtEydO1MGDB5U3b15Vq1ZNo0ePfqzQL5kgOmzYMB05ckSXLl3SggULVKNGDS1evDjGEgVJKlq0aLR24cKF5erqmiTLCaz/WA5w9OhRtWnTRmXKlNHs2bOjPRYRoIODg2M87969e9ECdmhoqNasWRNtfbdkli+cO3dO8+bNU7t27dS9e3dt2LBBISEhGjZsWLT3etD73F/Lv7+3x91BHwBSizR2F+AsgoKCVL58eb300kvRjt6Ij/79+2v16tX68MMPVbZsWd28eVM3b95M4EoBIGlduHBB/v7+kaE4YqRz8ODBatq0aazP+XeAdnNzi/W6/wotsXlQEAgPD4/Wjqjzq6++inZ8U4Q0aR78v8jz58/HCMnr169X/fr141ltdLGFmw4dOmjLli168803VaFCBXl7e8vhcKhZs2aR38PDJOTPNkLE+06aNEkVKlSI9Rpvb29Jpv66detq6dKlWr16tSZNmqQJEybohx9+UPPmzR+5hgg5c+bUc889p2effValS5fW4sWLNW/evIf++SVFWMyUKZNcXFwe+gHH+fPn1aRJE/n6+mrlypWRH15FyJkzpyTFer7333//rVy5ckW2N23apICAgGjru0+dOqVVq1bpiy++iFFbnTp1oq3Pzpkzp9avXx8jTEe89/3vFeHWrVvR1qQDAB6M4B1HzZs3f+g/EIKDgzVs2DAtWLBAt27dUpkyZTRhwoTIf4QdOXJEn332mQ4ePKjixYtLin1kAwCczVdffSVJkSG7UKFCkqS0adOqUaNGCfIeERtqnThxItp/O2/cuBEj2ESMgN+6dUsZM2aM7I8YNY8QsdN0tmzZ4l1njhw5tGbNmmh95cuXj9drxMU///yjtWvX6t1339XIkSMj+yNGnO0S8bPz8fGJ088uZ86ceu211/Taa6/p6tWrqlSpkt5///3I/68mRBBOmzatypUrp+PHj+v69evRPkw5fvx4tL83J06ckMPh+M9dyf8tPnWmSZNGhQsX1unTp2N9/MaNG2rSpImCg4O1du3ayJB9vzJlyihNmjTauXOnOnToENkfEhKivXv3RutbsWKFSpUqFe17ijg//t8fOklmhPz+zekqVKig2bNn68iRIypVqlRk/7Zt2yIfv9/FixcVEhISYzM2AEDsmGqeQPr27autW7dq4cKF2r9/v9q3b69mzZpF/uNo+fLlKlSokH7++WcVLFhQBQoU0Msvv8yINwCntm7dOo0ZM0YFCxZU586dJZkgW79+fX3++eexjtT9+5iwuGjYsKHSpEmjzz77LFr/tGnTYlwbEQo3btwY2RcUFKT58+dHu65p06by8fHRuHHjFBoaGq86PT091ahRo2i3R53y/jARo9X/Hp3+r920E1vlypVVuHBhffjhhwoMDIzxeMTPLjw8PMZ0+GzZsilXrlzRpjWnT58+TtPmJROiz507F6P/1q1b2rp1q/z8/JQ1a9Zoj02fPj1ae+rUqZIU7xH3+NQpSTVr1tTOnTtj9AcFBempp57SxYsXtXLlyhhT4SP4+vqqUaNG+vrrryP3UJDMh12BgYFq3759ZN/KlStjTDMvUqSIXF1dtWjRomh/hy5cuKA//vhDFStWjOx75plnlDZtWs2YMSOyz7IszZw5U7lz51atWrWivfauXbskKUY/ACB2jHgngHPnzmnu3Lk6d+5c5FSswYMHa9WqVZo7d67GjRunU6dO6ezZs1qyZIn+97//KTw8XAMHDlS7du20bt06m78DAPhvv/zyi44ePaqwsDBduXJF69at05o1a5Q/f3799NNPkZswSSbo1KlTR2XLllXPnj1VqFAhXblyRVu3btWFCxe0b9++eL139uzZ1b9/f02ePFlPP/20mjVrpn379umXX35RlixZoo1ENmnSRPny5VOPHj305ptvys3NTXPmzFHWrFmjBTYfHx999tlnevHFF1WpUiU999xzkdesWLFCtWvXjjXYJyUfHx898cQTmjhxokJDQ5U7d26tXr36gaOoScXV1VWzZ89W8+bNVbp0aXXv3l25c+fWxYsXtX79evn4+Gj58uW6ffu28uTJo3bt2ql8+fLy9vbWb7/9ph07dmjy5MmRr1e5cmUtWrRIgwYNUtWqVeXt7a1WrVrF+t779u3T888/r+bNm6tu3brKlCmTLl68qPnz5+vSpUuaMmVKjOn1p0+fjvx7s3XrVn399dd6/vnn4z1LIT51SibMfvXVVzp27JiKFSsW2d+5c2dt375dL730ko4cORLt7G5vb2+1bt06sv3++++rVq1aqlevnnr16qULFy5o8uTJatKkiZo1axb5/UXMrLtf1qxZ9dJLL2n27Nlq2LCh2rZtq9u3b2vGjBm6e/euhg4dGnltnjx5NGDAAE2aNEmhoaGqWrWqfvzxR/3xxx/65ptvYvxM16xZo3z58kUL7wCAh7BpN3WnJslaunRpZPvnn3+2JFnp06ePdkuTJo3VoUMHy7Isq2fPnpYk66+//op83q5duyxJ1tGjR5P6WwCAOIs4piri5u7ubuXIkcNq3Lix9cknn1gBAQGxPu/kyZNWly5drBw5clhp06a1cufObbVs2dL67rvvYrz2v48qi+0op7CwMGvEiBFWjhw5rHTp0llPPvmkdeTIEStz5sxW7969oz1/165dVvXq1S13d3crX7581kcffRTrcVsR79W0aVPL19fX8vT0tAoXLmx169bN2rlz5+P94B7gYceJXbt2Lcb1Fy5csNq0aWNlzJjR8vX1tdq3b29dunTJkmSNGjUq8roHHSfWokWLGK9Zr149q169enGu+d/HiUXYs2eP1bZtWytz5syWh4eHlT9/fqtDhw6RR2IFBwdbb775plW+fHkrQ4YMVvr06a3y5ctbM2bMiPY6gYGB1vPPP29lzJjRkvTQI7uuXLliffDBB1a9evWsnDlzWmnSpLH8/PysJ598MtrfLcuK+rkePnzYateu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vnx57dmzR0OGDFH//v21Zs0aSdL333+vjz/+WJ9//rmOHz+uH3/8UWXLlo18vb59+2rr1q1auHCh9u/fr/bt26tZs2Y6fvx45DV37tzRhAkTNHv2bB06dEidO3dWxowZ9f3330deEx4erkWLFqlz586SpJMnT6pZs2Z69tlntX//fi1atEibNm1S3759I5/TrVs3nT9/XuvXr9d3332nGTNm6OrVq/H7AwUAAACABOA0u5o7gzt3JG9ve947MFBKn/6/rzt+/Lgsy1LJkiVjfbxkyZL6559/dO3aNUlS7dq1NWTIEElSsWLFtHnzZn388cdq3Lixzp07pxw5cqhRo0ZKmzat8uXLp2rVqkmSzp07p7lz5+rcuXPKlSuXJGnw4MFatWqV5s6dq3HjxkkyZ2bPmDFD5cuXj6zhueee07fffqsePXpIktauXatbt27p2WeflSSNHz9enTt31oABAyRJRYsW1aeffqp69erps88+07lz5/TLL79o+/btqlq1qiTpyy+/fOD3DAAAAACJiRHvVOphR7Pdr2bNmjHaR44ckSS1b99ed+/eVaFChdSzZ08tXbpUYWFhkqQDBw4oPDxcxYoVk7e3d+Tt999/18mTJyNfz93dXeXKlYv2Hp07d9aGDRt06dIlSdI333yjFi1aKGPGjJKkffv2ad68edFet2nTpnI4HDp9+rSOHDmiNGnSqHLlypGvWaJEicjnAwAAAEBSYsQ7AXl5mZFnu947LooUKSIXFxcdOXJEbdq0ifH4kSNH5Ofnp6xZs/7na+XNm1d//fWXfvvtN61Zs0avvfaaJk2apN9//12BgYFyc3PTrl275ObmFu153vdNC0iXLp1cXFyiPV61alUVLlxYCxcu1KuvvqqlS5dGO6c9MDBQr7zySrT15BHy5cunY8eO/WftAAAAAJBUCN4JyMUlbtO97ZQ5c2Y1btxYM2bM0MCBA6Ot8758+bK++eYbdenSJTIM//nnn9Ge/+eff0absp0uXTq1atVKrVq1Up8+fVSiRAkdOHBAFStWVHh4uK5evaq6devGu87OnTvrm2++UZ48eeTq6qoWLVpEPlapUiUdPnxYRYoUifW5JUqUUFhYmHbt2hU51fyvv/6KsWEbAAAAACQFppqnQtOmTVNwcLCaNm2qjRs36vz581q1apUaN26s3Llz6/3334+8dvPmzZo4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fftM+4knpC++kIoXt7cuAKkPI94AADiz/v2lrFmlRYukJUukbNnsrgiwnb+/1LevVLOmCd2ZMpnN/TdsIHQDsAcj3gAAOJP9+83ZRx06mPYTT0hnzkheXraWBSQHDof01VfS0KHS33+bvi5dzFTzrFntrQ1A6saINwAAziA0VBozRqpSRereXTpxIuoxQjeg336TKlc2p+n9/bdUtKi0dq00fz6hG4D9GPEGACC5O3hQ6tpV2r3btJ96SsqQwd6agGRixw7pnXdM8JYkX19p2DCpXz/J09Pe2gAgAsEbAIDkKixMmjhRGj3ajHj7+UlTp0rPP88GakjVLEtav1765BPpp59MX9q00quvSiNGSFmy2FsfAPwbwRsAgOQoLMys39661bRbtTIHDufMaW9dgI1u3zZruKdNk44cMX0uLmYd9+jRUoECdlYHAA9G8AYAIDlKk0Zq3Niki08/lV54gVFupEphYdKff0qLF0vz5pnwLUne3mYFRt++UokStpYIAP/JxbIsy+4ikquAgAD5+vrK399fPj4+dpcDAEjpDh82X0uVMl9DQqQbNxjlRqpz9qz066/mtnatOR4sQrFiJmx37SrxzzMAdopPXmTEGwAAu4WFSZMnSyNHSqVLS9u2mQWr7u6EbqQKd+5IGzdKq1aZsH30aPTHM2WSmjSRXnpJathQcuVcHgBOhuANAICdjh415x9t22baOXKYubSZMtlaFpBYLEs6f17avj3q9uefUnBw1DWurlKNGlLTplKzZuaYMDc3+2oGgMdF8AYAwA7h4dJHH5ktmIODzZzZjz82Z3SzlhspyM2b5siv+4P21asxr8uTx4Tspk3NqLafX9LXCgCJheANAEBSu35devrpqB3LmzaVZs2S8ua1ty4gnixLunXLjGCfOxf96/nzZq322bMxn5cmjVS2rFStmrnVrGk2SOMzJwApFcEbAICk5udn5tJmyGBGvXv0IHEgWQoOjgrT/w7WEV8DA//7dYoUiQrZ1apJFSpI6dIlevkAkGwQvAEASAonTki5ckleXmax6v/+Z4b98uWzuzKkIpZlthC4ccNMAb95M/r9q1elixelCxdMqP7777i9bubM5q9y3rxRXyNupUqxZQEAELwBAEhMDoc0dao0dKjUu7cZ4ZakQoXsrQtO7949E5pv3DCrFyLuR9z+Haoj7oeHx+990qUz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avz48br++uvVrl07SVJaWpoCAgJKXQMZERGhtLQ0W03x0G1db10nSddff70++OADDR48WAEBAYqMjFRYWBj/8S3hcvvgYlxMP8G5fVDS0qVL9e2332rEiBFX0mSv48w+OH78uO6//34tXLhQFovFkc32Ks7sg3379unXX3/VsmXL9K9//UsLFy5UamqqBg0a5MhD8ArO7IemTZvqv//9r5555hkFBgaqZs2a+u2337R06VJHHoLHc1QfbNy4UUuWLNFDDz1kW1be7+Xs7GydPXvWsQfiwZzZByW9+uqrOn36tO655x6Htd8bOLMP9uzZo0mTJun999+Xv7+/047hShC84XAJCQnavn27PvzwQ4dv+6efftJjjz2mqVOnKjU1VYmJiTpw4IBGjx7t8H15Mmf2AS5OZfXBl19+qREjRuif//ynrr76aqfuy9M4sw8efPBB/fnPf1bPnj0dvm1v4sw+KCwsVG5urv71r3+pR48euvHGG/XOO+/oyy+/LHXjnqrOmf2QlpamBx98UMOHD9e3336rdevWKSAgQIMGDZJhGA7fn6dyRB9s375dd9xxh6ZNm6Z+/fo5sHVVQ2X1weLFi/Xcc89p6dKlqlev3mXvyxs5qw8KCgr05z//Wc8995xatWrlqOY6HMEbDjV27FitXLlSX375pRo2bGhbHhkZqby8PGVmZtrVp6enKzIy0lZT8m6q1vfWmhkzZuj666/Xk08+qWuuuUZxcXGaO3eu3n33XR05csSJR+Y5rqQPLsbF9FNV5+w+sFq3bp369++vWbNmadiwYVfabK/i7D5Ys2aNXn31Vfn7+8vf31+jRo1SVlaW/P399e677zrqMDyas/ugfv368vf3t/tPVps2bSSZT8iAydn9MGfOHIWFhWnmzJnq1KmTevbsqffff1/JycnatGmTow7DozmiD3766SfdfPPNeuihhzRlyhS7deX9XrZYLAoODnbswXgoZ/eB1YcffqgHHnhAS5cuLXX6f1XnzD44deqUtmzZorFjx9p+Lz///PP64Ycf5O/vrzVr1jj12C4WwRsOYRiGxo4dq08++URr1qxR06ZN7dbHxMSoWrVqSk5Oti3bvXu3Dh48qNjYWEnm9dvbtm1TRkaGrSYpKUkWi0Vt27aVJJ05c0a+vvY/tn5+frY2VGWO6IOLERsbq/Xr1+v8+fO2ZUlJSbrq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NmzYUGpdVlaWcfbs2Uve//79+w1JxoIFCxzWTsMwjEcffdRo1KiRUVhYaFuWm5tbZtufe+45Q5KRlJRkW3bmzBmjTp06Rnx8vF3t0KFDjdDQUOPEiROlttOjRw9bG3/77TdDkvHEE0/Y1axZs8aQZPz973+3LVuyZIkhyVi2bJltWUZGhlGzZk3j3nvvLbWfdu3aGffdd98FvgMAAEfgVHMAQKXZsWOHHn30UXXq1EmvvPKK3bqLOfX8119/VYsWLdSuXTulp6dLkhYsWKCbbrpJ9erVU2BgoNq2bat58+Y56xDKdeONN6pdu3ZKTU1Vz549FRISomeeeUaS9J///Efx8fGKiopSYGCgmjdvrr/+9a8qKCiw20bJa7yt1y2/+uqreuutt9S8eXMFBgaqa9eu+vbbbx3S7vfff18xMTEKDg5W7dq1NWTIEB06dMiuZs+ePRo4cKAiIyMVFBSkhg0basiQIcrKypJk9l1OTo7ee+892yns1lHnsuzdu1d+fn7q3r17qXUWi8VuhLr49/W6665TcHCwmjZtqvnz51/w2Epe432p7ZTMMwduuukmu+0EBATouuuuK1V75513SjJHk62+/PJLHT9+XI888ohdbUJCgnJycrRq1Sq75ZmZmdq4caPi4+MlSadOnZKkUmdS1K9fX5IUHBxsW/Z///d/ioiI0F133WVbFh4ernvuuUf/+c9/lJuba7eNvn37asWKFTI4+REAnI7gDQCoFGfOnNE999wjPz8/ffjhh5d8OvXevXvVs2dP1ahRQ2vXrrUFkXnz5qlx48Z65pln9Nprryk6OlqPPPKI5syZ44zDqNDx48d16623qmPHjnr99dfVu3dvSdLChQtVvXp1TZw4UW+88YZiYmI0depUTZo06aK2u3jxYr3yyit6+OGH9cILL+jAgQO66667dP78+Stq74svvqhhw4apZcuW+vvf/67x48crOTlZPXv2VGZmpiQpLy9PcXFx+uabbzRu3DjNmTNHDz30kPbt22erWbRokQIDA9WjRw8tWrRIixYt0sMPP1zufhs3bqyCgoJSp+qX5+TJk7rtttsUExOjmTNnqmHDhhozZozefffdSzreS23n77//roMHD6pz584Xtf20tDRJsjuV//vvv5ckdenSxa42JiZGvr6+tvVWq1evlo+Pj/r16ydJat68uRo2bKjXXntN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0dqyZUupdTt37lR8fLyaNGmilStXlnm2gyTddNNNql27dqlH3M2bN08hISG208rT09P13Xfflbq+2xqWP/zwQ7vln376qXJycuz+oDVo0CClp6fr448/ti07duyYli1bpv79+5e6/js1NVVhYWG6+uqrL/StAABcIUa8AQAOd+TIEY0aNUp+fn66+eab9f7775dZ17x5c8XGxl5we76+vnr//fc1YMAA3XPPPfrss8900003qV+/fgoICFD//v318MMP6/Tp0/rnP/+pevXqlXnKrStcd911qlWrloYPH65HH31UPj4+WrRokcufndy8eXO98MILmjx5sg4cOKABAwaoRo0a2r9/vz755BM99NBDeuKJJ7RmzRqNHTtWd999t1q1aqX8/HwtWrRIfn5+GjhwoG17MTEx+uKLL/T3v/9dUVFRatq0qbp161bmvhctWqQPPvhAd955p2JiYhQQEKCdO3fq3XffVVBQkO0afauoqCi9/PLLOnDggFq1aqUlS5Zo69ateuutt1StWrVLOu5Laack3XHHHfrkk09kGIZttPzUqVOKi4vTyZMn9eSTT5Z6Fnfxn+vg4GD99a9/VUJCgu6++27FxcXpq6++0vvvv68XX3xRtWvXlmSeZh4UFGR7BJ1V//79dfXVV+v555/Xr7/+qu7du+uXX37R7NmzVb9+fY0aNcpWO2jQIHXv3l0jRozQTz/9pLp162ru3LkqKCjQc889V+rYkpKS1L9/f67xBoDK4JJ7qQMAvNqXX35p9+ij8qbij3VSBY8Tszpz5ozRq1cvo3r16sY333xjGIZhfPrpp8Y111xjBAUFGU2aNDFefvll491337V7dJajlfc4sauvvrrM+g0bNhjdu3c3goODjaioKOOpp54yVq9ebUgyvvzyS1tdeY8Te+WVV0pts+T360JKPk7M6qOPPjJuuOEGIzQ01AgNDTVat25tJCQkGLt37zYMwzD27dtnjBw50mjevLkRFBRk1K5d2+jdu7fxxRdf2G1n165dRs+ePY3g4OBSfVvSjz/+aDz55JNG586djdq1axv+/v5G/fr1jbvvvtv47rvv7Gqt39ctW7YYsbGxRlBQkNG4cWNj9uzZdnUX+zixS2mnYRjGd999Z0gyvvrqq1L7upifa6u33nrLuOqqq4yAgACjefPmxqxZs4zCwkLb+kGDBhm33XZb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cZkI3gAAAAC8nY9hGIYzd3D06FHVq1dP69atU8+ePZWVlaXw8HAtXrxYgwYNkiTt2rVLbdq0UUpKirp3767PP/9ct99+uw4fPqyIiAhJ0vz58/X000/r6NGjCggI0NNPP61Vq1Zp+/bttn0NGTJEmZmZSkxMlCR169ZNXbt21ezZsyVJhYWFio6O1rhx4zRp0qQLtj07O1thYWHKysqSxWJx9LcGkubOlRISpLvukj76yNWtAQAAAICLcyl50enXeGdlZUmSav8xpJmamqrz58+rT58+tprWrVurUaNGSklJkSSlpKSoffv2ttAtSXFxccrOztaOHTtsNcW3Ya2xbiMvL0+pqal2Nb6+vurTp4+tBq7HiDcAAAAAb+fvzI0XFhZq/Pjxuv7669WuXTtJUlpamgICAlSzZk272oiICKWlpdlqiodu63rruopqsrOzdfbsWZ08eVIFBQVl1uzatavM9ubm5io3N9f2Pjs7+xKPGJfKGrzr1HFtOwAAAADAWZw64p2QkKDt27frww8/dOZuHGbGjBkKCwuzTdHR0a5uktc7ftx8ZcQbAAAAgLdyWvAeO3asVq5cqS+//FINGza0LY+MjFReXp4yMzPt6tPT0xUZGWmrKXmXc+v7C9VYLBYFBwerbt268vPzK7PGuo2SJk+erKysLNt06NChSz9wXBJONQcAAADg7RwevA3D0NixY/XJJ59ozZo1atq0qd36mJgYVatWTcnJybZlu3fv1sGDBxUbGytJio2N1bZt2+zuPp6UlCSLxaK2bdvaaopvw1pj3UZAQIBiYmLsagoLC5WcnGyrKSkwMFAWi8VugnMRvAEAAAB4O4df452QkKDFixfrP//5j2rUqGG7JjssLEzBwcEKCwvTqFGjNHHiRNWuXVsWi0Xjxo1TbGysunfvLknq16+f2rZtq/vuu08zZ85UWlqapkyZooSEBAUGBkqSRo8erdmzZ+upp57SyJEjtWbNGi1dulSrVq2ytWXixIkaPny4unTpomuvvVavv/66cnJyNGLECEcfNi4TwRsAAACAt3N48J43b54k6cYbb7RbvmDBAt1///2SpFmzZsnX11cDBw5Ubm6u4uLiNHfuXFutn5+fVq5cqTFjxig2NlahoaEaPny4nn/+eVtN06ZNtWrVKk2YMEFvvPGGGjZsqLfffltxcXG2msGDB+vo0aOa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c3MzIiMjbe1btmwxJBljx461td28edMoVqyYERgYmODzrl+/bri7u9tqnDNnjiHJWLZsmV2/YcOGGZKMnTt32tq6d+9ueHh4GKdOnbK1rVy50pBkfPPNN3bvP3/+vOHi4mJ89913ifxJAED6wa3mAOAgxowZo8jISH333XfKmzdvguPFixdX7969E7QvXrxY5cqVk5ubm8qWLavg4GC74/d7TvV+vv/+e2XKlEkDBw6U9OBnWdu3b6/ChQvb9uNuQR43bpymTZumYsWKyc3NTdWqVdO2bdsSvH/BggUqU6aM3N3dVa5cOS1atCjBOeNuxV63bp3de+M+a+bMmXb1eHl56d9//1Xjxo3l5eWlXLlyacCAAYqJiZEkGYahwoUL67XXXktQz61bt+Tj46OuXbtKkqKjozVs2DBVqVJFPj4+8vT0VM2aNbV27dqH/vxSQtxz/HPmzFHZsmXl5uZmu77jxo3Ts88+qxw5csjDw0NVqlTRwoULE5zj3me84/572Lhxo/r166dcuXLJ09NTTZo0SZbnc6OiojR8+HAVL15cbm5uKlCggAYNGqSoqCi7fitXrtRzzz0nX19feXl5qWTJknrvvfckmde/WrVqkqQOHTrYbmG/+7rf69ixYypbtqx8fX0THMudO7fd/t0/15IlS8rd3V1VqlTRhg0bHvn97v598Th1njhxQnv37lXdunXt2osUKaJChQolqLNx48aKiorS8ePHbe0LFy6Ui4uLunTpYmtzd3dXx44dFRISojNnztidZ/Xq1YqKitJLL70kybzVXZLy5Mlj1y/uzx0PDw9b208//aRGjRqpYMGCtra6deuqRIkSmj9/vt37c+fOrQoVKmjJkiUP/P4AkF5xqzkAOIilS5eqaNGievbZZxP9nj///FM///yz3n77bWXNmlUTJkxQ06ZNdfr0aeXIkSPR55k2bZq6deum9957Tx9//PHjlK+5c+fq2rVr6tq1q5ycnDRmzBi9/vrrOn78uDJnzizJvN21efPmKl++vEaPHq0rV66oY8eOypcv32N9ZpyYmBgFBQUpICBA48aN06pVq/T555+rWLFi6t69u5ycnPTmm29qzJgxunz5srJnz25779KlSxUREaE333xTkhlKpk+frpYtW6pz5866du2avvvuOwUFBWnr1q2Jvp04uaxZs0bz589Xz549lTNnTts/UIwfP16vvvqqWrdurejoaP3444964403tGzZMjVs2PCR5+3Vq5eyZcum4cOH6+TJk/rqq6/Us2fPBz5TnBixsbF69dVX9eeff6pLly4qXbq09u3bpy+//FJHjhzR4sWLJUkHDhxQo0aNVKFCBX344Ydyc3PT33//rY0bN0oyb8X/8MMPNWzYMHXp0kU1a9aUpIf+3ihUqJBCQkK0f/9+lStX7pG1rl+/XvPmzdM777wjNzc3TZ48WQ0aNNDWrVsT9f7HrXPTpk2SpKeffjpRnxEaGipJypkzp61t165dKlGihLy9ve36Vq9eXZK0e/duFShQwNb+66+/qkqVKragXatWLTk7O6t37976/PPPlT9/fu3du1effPKJGjdurFKlSkmS/v33X4WFhalq1aoJ6qpevbp+/fXXBO1VqlSxXWcAcChWD7kDAJ5ceHi4Icl47bXXEv0eSYarq6vx999/29r27NljSDK+/vprW9v9bpe9+1bz8ePHG05OTsZHH31kd/7atWvf99bndu3a2d1efOLECUOSkSNHDuPy5cu29iVLlhiSjKVLl9raypcvb+TPn9+4du2arW3dunWGJLtzrl271pBkrF271u6z4z7r7tt627VrZ0gyPvzwQ7u+lStXNqpUqWLbP3z4sCHJmDJlil2/V1991ShcuLARGxtrGIZh3Llzx4iKirLrc+XKFSNPnjzGW2+9leDnkVzud6u5JMPZ2dk4cOBAgv43btyw24+OjjbKlStnvPjii3bthQoVMtq1a2fbj/vvoW7durbvbBiG0bdvX8PFxcW4evVqomu+91bz//73v4azs7Pxxx9/2PWbOnWqIcnYuHGjYRiG8eWXXxqSjAsXLjzw3Em9hfv33383XFxcDBcXFyMwMNAYNGiQsWLFCiM6OjpBX0mGJGP79u22tlOnThnu7u5GkyZNbG33+71z7++LpNY5dOhQQ5Ld74EHuXTpkpE7d26jZs2adu1ly5ZNcJ0NwzAOHDhgSDKmTp1q116wYEFj+PDhdm3Tp083fH19bT8LSUa7du2M27dvJ/hus2bNSvBZAwcONCQZt27dsmsfNWqUIemxb+8HgLSKW80BwAHE3fqZ1AmJ6tatq2LFitn2K1SoIG9vb7vbUh9mzJgx6t27tz777DMNHTo0SZ99r+bNmytbtmy2/bjRv7hazp49q3379qlt27by8vKy9atdu7bKly//RJ8tSd26dbPbr1mzpt3PoUSJEgoICNCcOXNsbZcvX9Zvv/2m1q1b22YQd3FxsU0YFRsbq8uXL+vOnTuqWrWqdu7c+cR1JlXt2rVVpkyZBO133w585coVhYeHq2bNmomusUuXLnazptesWVMxMTE6derUY9e6YMEClS5dWqVKldLFixdt24svvihJttv1424HX7JkSbItp1WvXj2FhITo1Vdf1Z49ezRmzBgFBQUpX758+uWXXxL0DwwMVJUqVWz7BQsW1GuvvaYVK1bYHlFICZcuXVKmTJnsfg/cT2xsrFq3bq2rV68mmJX95s2b950s0d3d3XY8zv79+3X69OkEd0Hky5dP1atX11dffaVFixapX79+mjNnjoYMGWL3OZIS/VmSbH8GXLx48aHfDwDSG241BwAHEHfL6LVr15L0vrufu4yTLVs2Xbly5ZHvXb9+vZYvX67Bgwfbnut+EvfWEvcX8Lha4gJd8eLFE7y3ePHiTxRq3d3dE8ykfb+fQ9u2bdWzZ0+dOnVKhQoV0oIFC3T79m21adPGrt/333+vzz//XIcOHbItvySZz+E+THh4uF0QcXV1tbut/XE86DOXLVumjz/+WLt377Z7fjqxS5A96no9jqNHj+rgwYMPnNU8LCxMkvmPNNOnT1enTp00ZMgQ1alTR6+//rqaNWv2RDOwV6tWTT///LOio6O1Z88eLVq0SF9++aWaNWum3bt32/0DxlNPPZXg/SVKlNCNGzd04cIF+fn5PXYdyaFXr14KDg7WrFmzVLFiRbtjHh4eCZ6Zl8z5CuKOx1m+fLny5Mljd7v4xo0b1ahRI23evNnW3rhxY3l7e2vkyJF66623VKZMGdt5EvtZkjmfgpT4/w4BIL1gxBsAHIC3t7f8/f21f//+JL3PxcXlvu1xf/l9mLJly6pkyZL673//qxMnTiQ4/qC/OD9oNPBJakmpz75XixYtlDlzZtuo9+zZs1W1alWVLFnS1mf27Nlq3769ihUrpu+++07BwcFauXKlXnzxxUeOzvbu3Vt58+a1ba+//nqi6nqYe4ONJP3xxx969dVX5e7ursmTJ+vXX3/VypUr1apVq0T/vJPzesWJjY1V+fLltXLlyvtub7/9tu07bdiwQatWrVKbNm20d+9eNW/eXPXq1UuW0WZXV1dVq1ZNo0aN0pQpU3T79m0tWLDgic+bHHLkyKE7d+489B/ZRo4cqcmTJ+vTTz9N8I9CkjkJ2rlz5xK0x7X5+/vb2n799Vc1aNDA7vfUN998kyCMS9Krr74qwzBsz6HHTbb2oM/Knj17gtHwuH+4ufuZdABwBIx4A4CDaNSokaZNm6aQkBAFBgam+OflzJlTCxcu1HPPPac6derozz//tPsLe7Zs2e57y/rj3oocN2Pz33//neDYvW1xo69Xr15Nls+Okz17djVs2FBz5sxR69attXHjRn311Vd2fRYuXKiiRYvq559/tgsrw4cPf+T5Bw0aZJukTZLdrffJ6aeffpK7u7tWrFhhF3xmzJiRIp+XWMWKFdOePXtUp06dR454Ojs7q06dOqpTp46++OILjRo1Su+//77Wrl2runXrJtuIaVy4vDc8Hj16NEHfI0eOKEuWLElahzypdcZNXHbixAlVqFAhwfFJkyZpxIgR6tOnjwYPHnzfc1SqVElr165VRESE3QRrW7ZssR2XzN8/mzZtUs+ePe3ef/78+fv+A0fc3R137tyRZN6OnitXLm3fvj1B3wdNNHjixAnlzJkzWdZyB4C0hBFvAHAQgwYNkqenpzp16qTz588nOH7s2DGNHz8+WT8zf/78WrVqlW7evKl69erp0qVLtmPFihXToUOH7JaY2rNnj23m6aTy9/dXuXLlNGvWLEVGRtra169fr3379tn1LVSokFxcXBIs7zR58uTH+uy7tWnTRn/99ZcGDhwoFxcXtWjRwu543Ejw3SO/W7ZsUUhIyCPPXaZMGdWtW9e23f0McXJycXGRk5OTXXg6efKk5bNJ/+c//9G///6rb7/9NsGxmzdv6vr165LMZ+vvFRfi4m5r9vT0lJTwH18eZO3atfcdrY+befvuuxokKSQkxO7xhjNnzmjJkiWqX79+ou+geJw64/5R7X5hNm6W9datW+uLL7544DmaNWummJgYTZs2zdYWFRWlGTNmKCAgwDaj+e+//y5Jql+/vt37S5QoofPnzydYru+HH36QJFWuXNnW1rRpUy1btsxuibLVq1fryJEjeuONNxLUtmPHjlT5h0MASG2MeAOAgyhWrJjmzp2r5s2bq3Tp0mrbtq3KlSun6Ohobdq0SQsWLLBbjzm5FC9eXL///ruef/55BQUFac2aNfL29tZbb72lL774QkFBQerYsaPCwsI0depU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smTJ5O/vr3fffVfBwcGxnhsREaH06dPr448/jmqbP3++KlSooFSpUilt2rSqVq2ali1bFuv3fvzxx8qVK5eSJEmiYsWKac6cOTHO++CDDzRx4kSdP3/+ie4FACRkHpZlWXYXAQBwPfPmzdPrr7+u7777Tq1bt47x/K1bt5QhQwa98MILWrJkyTO/X0REhO7evavEiRPL0zPuPxdeu3atatSooT/++EPVq1eP89d/kFWrVunChQtRx9u2bdMXX3yhDz/8UIUKFYpqL1asmIoVK/bU7xMeHq7Q0FD5+PjIw8PjmWretGmTjhw5EnV87NgxDR48WJ06dVLVqlWj2vPkyaOKFSs+03tJUsOGDbVnz57H7q1v1KiRfv31V7Vo0UIVK1ZUaGio9u/fr19++UXDhw9/qg8EcubMqerVq2vmzJmSYv95fNI6Q0NDlSVLFvXq1Uv9+/ePai9TpoyuXr2qpk2bKl++fDp69Ki++uorJUuWTAEBAfL39486NyAgQBUrVlShQoXUqVMnnT59WuPHj1eNGjX066+/xnjPzZs3q2LFitqzZ4+ee+45ffnll3r33XfVoEEDNWzYUHfu3NHMmTP1999/66efftKrr74a9b39+/fXmDFj1LFjR5UtW1aLFy/WsmXLNGfOnGgfHERERChLlizq2LGjPvrooye5zQCQcFkAAMTi1q1bVooUKaw6derE+vzs2bMtSdbcuXOf6X1u375thYeHP9NrPI4//vjDkmT98ccfDn+vh1mwYMFj1REcHOycgh7Dtm3bLEnWjBkzHPL6DRo0sHLkyPFY527dutWSZI0cOTLGc2FhYdbly5efqoYcOXJYbdq0eeg5T1KnZVnWwoULLUnW4cOHo7WvW7cuxs/8unXrLEnWgAEDorXXq1fPypQpkxUYGBjVNmXKFEuStXLlyhjvOWjQoGg15suXzypbtqwVERER1RYYGGj5+vpaL730UlTb6dOnrUSJElndunWLaouIiLCqVq1qZc2a1QoLC4v2Pt27d7dy5MgR7XUBAA/GUHMAQKySJk2qV199VatXr9bFixdjPD979mylSJFCL730kq5evao+ffqoaNGi8vX1lZ+fn+rVq6e///472vdEzpudO3euBg4cqCxZsihZsmQKCgp64JzaLVu2qH79+kqdOrWSJ0+uYsWK6fPPP492zv79+9WkSROlSZNGSZIkUZkyZR6rF/7PP/9U06ZNlT17dvn4+Chbtmzq1auXbt++/eQ37BkMHTpUHh4e2rt3r1q2bKnUqVOrSpUqkqR//vlHbdu2Ve7cuZUkSRL5+/urffv2MYb3xzbHO2fOnGrYsKE2bNigcuXKKUmSJMqdO7e+//77OKl7y5Ytqlu3rlKmTKlkyZKpWrVq+uuvv6Kdc+PGDfXs2VM5c+aUj4+PMmTIoNq1a2vnzp2SzFD8ZcuW6cSJE1FD2HPmzPnA94zsia9cuXKM57y8vJQ2bdqo48j7un//fjVr1kx+fn5KmzatevTooTt37jz02v778/ikdUrSzz//rJw5cypPnjzR2p9//vkYozqef/55pUmTRvv27YtqCwoK0qpVq/TGG2/Iz88vqr1169by9fXV/PnzY7znsmXL1KBBg2ivkSFDhmijIPz8/OTr66ukSZNGtS1evFihoaHq2rVrVJuHh4e6dOmi06dPa9OmTdHep3bt2jpx4oQCAgIeeg8AAIa33QUAAFxXq1at9N1332n+/Pnq3r17VPvVq1e1cuVKtWjRQkmTJtW///6rn3/+WU2bNlWuXLl04cIFffPNN6pWrZr27t2rzJkzR3vd4cOHK3HixOrTp49CQkKUOHHiWN9/1apVatiwoTJlyqQePXrI399f+/bt0y+//KIePXpIkv79919VrlxZWbJkUb9+/ZQ8eXLNnz9fjRs31k8//aRXXnnlgde3YMEC3bp1S126dFHatGm1detWffnllzp9+rQWLFgQB3fwyUQOPR41apSs/58JtmrVKh09elTt2rWTv7+//v33X3377bf6999/tXnz5kcOKz98+LCaNGmit956S23atNH06dPVtm1blS5dWs8999xT17pmzRrVq1dPpUuX1pAhQ+Tp6akZM2bohRde0J9//qly5cpJkjp37qwff/xR3bt3V+HChXXlyhVt2LBB+/btU6lSpTRgwAAFBgbq9OnT+uyzzyRJvr6+D3zfHDlySJJmzZqlypUry9v70b/KNGvWTDlz5tTo0aO1efNmffHFF7p27doTfQDxpHVKZm52qVKlHuv1g4ODFRwcrHTp0kW17d69W2FhYSpTpky0cxMnTqwSJUpo165d0drPnz+vXbt2RRv+Xb16df3444/68ssv1ahRI925c0dffvmlAgMDo/4OSdKuXbuUPHnyaNMfJEX9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mUqVKpWWLFmiwoULy8fHR1OnTlWSJEl0/fr1aDX36NFDL7zwQtTxhg0bVLVqVSVNmlTZsmXTu+++q5s3b0Y9f/HiRTVq1EhJkyZVrly5NGvWrDi8gwAAAADw+AjecciypJs37XlY1uPVePXqVa1cuVJdu3aN2rs6kr+/v1q1aqV58+bJ+v8XHDdunIoXL65du3apX79+6tGjh1atWiVJ+umnn/TZZ5/pm2++0aFDh/Tzzz+raNGiUa/XvXt3bdq0SXPnztU///yjpk2bqm7dujp06FDUObdu3dLYsWM1depU/fvvv2rVqpVSpUqln376Keqc8PBwzZs3T61atZIkHTlyRHXr1tVrr72mf/75R/PmzdOGDRvUvXv3qO9p27atTp06pT/++EM//vijJk2apIsXLz7ZHygAAAAAxAFvuwuIT27dknx97Xnv4GApefJHn3fo0CFZlqVChQrF+nyhQoV07do1Xbp0SZJUuXJl9evXT5KUP39+/fXXX/rss89Uu3ZtnTx5Uv7+/qpVq5YSJUqk7Nmzq1y5cpKkkydPasaMGTp58qQyZ84sSerTp49WrFihGTNmaNSoUZLMntmTJk1S8eLFo2p4/fXXNXv2bL311luSpNWrV+v69et67bXXJEmjR49Wq1at1LNnT0lSvnz59MUXX6hatWr6+uuvdfLkSf3666/aunWrypYtK0maNm3aA68ZAAAAAByJHu8EynrMLvKKFSvGON63b58kqWnTprp9+7Zy586tjh07atGiRQoLC5Mk7d69W+Hh4cqfP798fX2jHuvWrdORI0eiXi9x4sQqVqxYtPdo1aqV1q5dq7Nnz0qSZs2apQYNGihVqlSSpL///lszZ86M9rp16tRRRESEjh07pn379snb21ulS5eOes2CBQtGfT8AAAAAOBM93nEoWTLT82zXez+OvHnzysPDQ/v27dMrr7wS4/l9+/YpderUSp8+/SNfK1u2bDpw4IB+//13rVq1Sl27dtW4ceO0bt06BQcHy8vLSzt27JCXl1e07/O9b1hA0qRJ5eHhEe35smXLKk+ePJo7d666dOmiRYsWaebMmVHPBwcH6+233442nzxS9uzZdfDgwUfWDgAAAADO4jbBe/369Ro3bpx27Nihc+fOadGiRWrcuPEDz1+4cKG+/vprBQQEKCQkRM8995yGDh2qOnXqOKxGD4/H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VLp0aQ0YMECXL1/O12bu3LmqVauWgoKCVLZsWXXv3l2nT5+2+xhdna1q8PLLL6tu3boKDAxUREREgZ+1bds2NWvWTIULF1Z4eLjGjx9vr2G5FUfVYNWqVerYsaPKli2rO+64QxEREZo7d649h+Y2HPl7cMWPP/6oYsWKqXjx4jYejXtyZA0sy9LEiRNVtWpVBQYGqnz58nrrrbfsNTS34sg6LFu2TI0aNVKxYsVUqlQpPfHEEzp8+LCdRuY+bFGDrVu3qkuXLgoPD1eRIkV033336f333//DZ61atUp16tRRYGCg7r77bs2ePdvew3MLjqrB//7v/6p169YqVaqUgoODFRkZqWXLljlkjK7Okb8HV6xZs0Z+fn5/+v3taARv2MTq1avVp08frVu3TsuXL1dWVpbatGmj9PT03DavvvqqvvnmGy1evFirV6/W8ePH9fjjj+c+n52drfbt2yszM1Nr167VP//5T82ePVsjRozIbbNmzRrFxMSoR48e2rlzpxYvXqz169erV69eDh2vK7JFDa7o3r27oqOjC/yctLQ0tWnTRhUrVlRycrImTJigUaNG6eOPP7bb2NyFo2qwdu1a1axZU1988YW2bdum2NhYxcTEKD4+3m5jcxeOqsEVWVlZ6tKli5o1a2bzsbgrR9bglVde0SeffKKJEydqz549+vrrr9WgQQO7jMvdOKoOhw4dUseOHfXQQw9py5YtWrZsmX755ZcC38fb2KIGycnJKl26tObMmaOdO3dq2LBhGjJkiKZMmZLb5tChQ2rfvr1atmypLVu2qF+/furZsyfBT46rwffff6/WrVtr6dKlSk5OVsuWLdWhQwdt3rzZoeN1RY6qwRXnzp1TTEyMHn74YYeM75ZYgB2cPHnSkmStXr3asizLOnfunOXv728tXrw4t83u3bstSVZSUpJlWZa1dOlSy9fX10pJScltM336dCs4ONjKyMiwLMuyJkyYYFWpUiXfZ02ePNkqX768vYfkdv5KDa42cuRIq1atWn84P23aNCs0NDS3JpZlWYMGDbKqVatm+0G4OXvVoCDt2rWzYmNjbdJvT2LvGgwcONDq2rWrNWvWLCskJMTW3fcI9qrBrl27LD8/P2vPnj1267snsVcdFi9ebPn5+VnZ2dm5577++mvLx8fHyszMtP1A3Njt1uCKF1980WrZsmXu8cCBA637778/X5vo6GgrKirKxiNwf/aqQUGqV69ujR492jYd9yD2rkF0dLQ1fPjwW/o3lKMw4w27OH/+vCTpzjvvlGT+T1VWVpZatWqV2+bee+9VhQoVlJSUJElKSkrSAw88oLCwsNw2UVFRSktL086dOyVJkZGROnr0qJYuXSrLspSamqp//etfateunaOG5jb+Sg1uRlJSkpo3b66AgIDcc1FRUdq7d6/Onj1ro957BnvV4HqfdeVzkMeeNUhMTNTixYs1depU23XYA9mrBt98842qVKmi+Ph4Va5cWZUqVVLPnj115swZ2w7AQ9irDnXr1pWvr69mzZql7OxsnT9/Xp9//rlatWolf39/2w7CzdmqBtf+fZ+UlJTvPSTzvXy73yueyF41uFZOTo4uXLjA93IB7FmDWbNm6eDBgxo5cqQden77CN6wuZycHPXr109NmjRRjRo1JEkpKSkKCAj4wz2QYWFhSklJyW1zdei+8vyV5ySpSZMmmjt3rqKjoxUQEKAyZcooJCSEf/he46/W4GbcTJ1g3xpca9GiRdqwYYNiY2Nvp8sex541OH36tJ599lnNnj1bwcHBtuy2R7FnDQ4ePKiffvpJixcv1meffabZs2crOTlZnTt3tuUQPII961C5cmV9++23Gjp0qAIDA1W8eHH9/PPPWrRokS2H4PZsVYO1a9dq4cKFeu6553LPXe97OS0tTb/99pttB+LG7FmDa02cOFG//vqrnnzySZv13xPYswb79+/X4MGDNWfOHPn5+dltDLeD4A2b69Onj3bs2KEFCxbY/L137dqlV155RSNGjFBycrISEhJ0+PBh9e7d2+af5c7sWQPcHEfVYOXKlYqNjdWMGTN0//332/Wz3I09a9CrVy899dRTat68uc3f25PYswY5OTnKyMjQZ599pmbNmunBBx/Up59+qpUrV/5h4R5vZ886pKSkqFevXurWrZs2bNig1atXKyAgQJ07d5ZlWTb/PHdlixrs2LFDHTt21MiRI9WmTRsb9s47OKoG8+bN0+jRo7Vo0SKVLl36L3+WJ7JXDbKzs/XUU09p9OjRqlq1qq26a3MEb9hU3759FR8fr5UrV+quu+7KPV+mTBllZmbq3Llz+dqnpqaqTJkyuW2uXU31yvGVNnFxcWrSpIkGDBigmjVrKioqStOmTdPMmTN14sQJO47MfdxODW7GzdTJ29m7BlesXr1aHTp00HvvvaeYmJjb7bZHsXcNEhMTNXHiRPn5+cnPz089evTQ+fPn5efnp5kzZ9pqGG7N3jUoW7as/Pz88v0j67777pNkdsiAYe86TJ06VSEhIRo/frxq166t5s2ba86cOVqxYoV++OEHWw3DrdmiBrt27dLDDz+s5557TsOHD8/33PW+l4ODg1WkSBHbDsZN2bsGVyxYsEA9e/bUokWL/nD5v7ezZw0uXLigjRs3qm/fvrnfy2PGjNHWrVvl5+enxMREu47tZhG8YROWZalv375asmSJEhMTVbly5XzP161bV/7+/lqxYkXuub179+rIkSOKjIyUZO7f3r59u06ePJnbZvny5QoODlb16tUlSRcvXpSvb/7/bAsVKpTbB29mixrcjMjISH3//ffKysrKPbd8+XJVq1ZNoaGhtz8QN+aoGkhm65j27dtr3LhxN7zczds4qgZJSUnasmVL7mPMmDEqVqyYtmzZok6dOtlsPO7IUTVo0qSJLl++rAMHDuSe27dvnySpYsWKtzkK9+eoOtzoezknJ+c2RuD+bFWDnTt3qmXLlurWrVuB2+VFRkbmew/JfC/f6veKJ3JUDSRp/vz5io2N1fz589W+fXv7DMgNOaIGwcHB2r59e77v5d69e6tatWrasmWLGjZsaN9B3iznrOkGT/PCCy9YISEh1qpVq6wTJ07kPi5evJjbpnfv3laFChWsxMREa+PGjVZkZKQVGRmZ+/zly5etGjVqWG3atLG2bNliJSQkWKVKlbKGDBmS22bWrFmWn5+fNW3aNOvAgQPWf//7X6tevXpWgwYNHDpeV2SLGliWZe3fv9/avHmz9fzzz1tVq1a1Nm/ebG3evDl3FfNz585ZYWFh1jPPPGPt2LHDWrBggRUUFGR99NFHDh2vK3JUDRITE62goCBryJAh+T7n9OnTDh2vK3JUDa7FquZ5HFWD7Oxsq06dOlbz5s2tTZs2WRs3brQaNmxotW7d2qHjdVWOqsOKFSssHx8fa/To0da+ffus5ORkKyoqyqpYsWK+z/JGtqjB9u3brVKlSlldu3bN9x4nT57MbXPw4EErKCjIGjBggLV7925r6tSpVqFChayEhASHjtcVOaoGc+fOtfz8/KypU6fma3Pu3DmHjtcVOaoG13LFVc0J3rAJSQU+Zs2aldvmt99+s1588UUrNDTUCgoKsjp16mSdOHEi3/scPnzYatu2rVWkSBGrZMmS1muvvWZlZWXlazN58mSrevXqVpEiRayyZctaTz/9tPXzzz87YpguzVY1aNGiRYHvc+jQodw2W7dutZo2bWoFBgZa5cuXt8aOHeugUbo2R9WgW7duBT7fokULxw3WRTny9+BqBO88jqzBsWPHrMcff9wqWrSoFRYWZj377LP8D6jfObIO8+fPt2rXrm3dcccdVqlSpaxHH33U2r17t4NG6rpsUYORI0cW+B4VK1bM91krV660IiIirICAAKtKlSr5PsObOaoG1/s96datm+MG66Ic+XtwNVcM3j6W5eXX5wIAAAAAYEfc4w0AAAAAgB0RvAEAAAAAsCOCNwAAAAAAdkTwBgAAAADAjgjeAAAAAADYEcEbAAAAAAA7IngDAAAAAGBHBG8AAAAAAOyI4A0AAAAAgB0RvAEAAAAAsCOCNwAAAAAAdkTwBgAAAADAjv4/Lz9iSgMAJ4MAAAAASUVORK5CYII=\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["       Disease           rmse           r2\n","0       Dengue  211519.961225    -0.746375\n","1         Zika    1412.727340    -2.698015\n","2  Chikungunya   97334.773960 -2325.123405\n","3     Varicela  210187.646730     0.569756"],"text/html":["\n","  <div id=\"df-97ed707d-fd21-466d-9165-941bfb773f53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Disease</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dengue</td>\n","      <td>211519.961225</td>\n","      <td>-0.746375</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Zika</td>\n","      <td>1412.727340</td>\n","      <td>-2.698015</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chikungunya</td>\n","      <td>97334.773960</td>\n","      <td>-2325.123405</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Varicela</td>\n","      <td>210187.646730</td>\n","      <td>0.569756</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97ed707d-fd21-466d-9165-941bfb773f53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97ed707d-fd21-466d-9165-941bfb773f53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97ed707d-fd21-466d-9165-941bfb773f53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b4fc3819-348c-4a6b-8b81-7ef808c4697e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b4fc3819-348c-4a6b-8b81-7ef808c4697e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b4fc3819-348c-4a6b-8b81-7ef808c4697e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_13285bfc-717a-467c-8487-71071cd684f9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_13285bfc-717a-467c-8487-71071cd684f9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Disease\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Zika\",\n          \"Varicela\",\n          \"Dengue\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101122.39229018662,\n        \"min\": 1412.7273398715058,\n        \"max\": 211519.96122459928,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1412.7273398715058,\n          210187.64672988892,\n          211519.96122459928\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1162.0833719591546,\n        \"min\": -2325.1234046153413,\n        \"max\": 0.569755533540815,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -2.6980154213176357,\n          0.569755533540815,\n          -0.746374604122017\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["results = {}\n","\n","# Create a list of dataframes, their names, and the column to analyze\n","dfs = [(df_dengue, 'Dengue', 'cum_cases'), (df_zika, 'Zika', 'cum_cases'),\n","       (df_chic, 'Chikungunya', 'cum_cases'), (df_var, 'Varicela', 'cum_cases')]\n","\n","fig, axes = plt.subplots(nrows=len(dfs), ncols=1, figsize=(10, 6 * len(dfs)))\n","\n","for i, (df, name, column) in enumerate(dfs):\n","    try:\n","        series = df[column]\n","\n","        # Train-test split (20% train, 80% test)\n","        train_size = int(len(series) * 0.10)\n","        train_data, test_data = series[:train_size], series[train_size:]\n","\n","        model = fit_arima(train_data, seasonal=False)  # Fit the model on the training data\n","\n","        # Predict only on the test data\n","        fitted_values = model.predict(n_periods=len(test_data))\n","\n","        # Calculate RMSE and R-squared on the test data\n","        rmse = sqrt(mean_squared_error(test_data, fitted_values))\n","        r2 = r2_score(test_data, fitted_values)\n","\n","        results[name] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(test_data.index, fitted_values, label='Fitted', color='red', linestyle='--') # plot fitted values against the test data index\n","        axes[i].set_title(f'{name} - Train Test Split (20/80)')\n","        axes[i].legend()\n","\n","        print(f'{name} - R^2: {r2:.4f}, RMSE: {rmse:.4f}')\n","\n","    except Exception as e:\n","        print(f\"Error processing {name}: {e}\")\n","        axes[i].set_title(f\"Error: {name}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'Disease'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"RIYeAqfQFNyC","executionInfo":{"status":"ok","timestamp":1741357391342,"user_tz":-60,"elapsed":7369,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"22e4afeb-dab2-4021-aba2-7ce6b4a2238f"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=887.829, Time=0.33 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=946.289, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=887.763, Time=0.08 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=912.870, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,0)(0,0,0)[0]             : AIC=1257.997, Time=0.03 sec\n"," ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=889.727, Time=0.10 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=889.734, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=inf, Time=0.34 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=inf, Time=0.03 sec\n","\n","Best model:  ARIMA(1,1,0)(0,0,0)[0] intercept\n","Total fit time: 1.122 seconds\n","Dengue - R^2: -0.0430, RMSE: 179929.2405\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=488.008, Time=0.18 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=483.128, Time=0.01 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=482.585, Time=0.02 sec\n"," ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=482.293, Time=0.08 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=482.364, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=484.160, Time=0.12 sec\n"," ARIMA(0,2,2)(0,0,0)[0] intercept   : AIC=484.223, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=486.032, Time=0.22 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=481.248, Time=0.07 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0]             : AIC=483.176, Time=0.15 sec\n"," ARIMA(0,2,2)(0,0,0)[0]             : AIC=483.215, Time=0.15 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=481.452, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,2)(0,0,0)[0]             : AIC=inf, Time=0.23 sec\n","\n","Best model:  ARIMA(0,2,1)(0,0,0)[0]          \n","Total fit time: 1.369 seconds\n","Zika - R^2: -21459.4472, RMSE: 554139.9169\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=inf, Time=1.59 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=584.812, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=585.084, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=585.083, Time=0.30 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=583.524, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=586.899, Time=0.36 sec\n","\n","Best model:  ARIMA(0,2,0)(0,0,0)[0]          \n","Total fit time: 2.394 seconds\n","Chikungunya - R^2: -2327.5473, RMSE: 320671.5988\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,2,2)(0,0,0)[0] intercept   : AIC=1085.730, Time=0.36 sec\n"," ARIMA(0,2,0)(0,0,0)[0] intercept   : AIC=1101.142, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0] intercept   : AIC=1083.833, Time=0.07 sec\n"," ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=1082.207, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,0)(0,0,0)[0]             : AIC=1100.199, Time=0.03 sec\n"," ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=1083.568, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,2)(0,0,0)[0] intercept   : AIC=1083.590, Time=0.16 sec\n"," ARIMA(1,2,2)(0,0,0)[0] intercept   : AIC=1085.550, Time=0.18 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,2,1)(0,0,0)[0]             : AIC=1084.235, Time=0.08 sec\n","\n","Best model:  ARIMA(0,2,1)(0,0,0)[0] intercept\n","Total fit time: 1.102 seconds\n","Varicela - R^2: -30.1887, RMSE: 2075050.7191\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x2400 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["       Disease          rmse            r2\n","0       Dengue  1.799292e+05     -0.042953\n","1         Zika  5.541399e+05 -21459.447219\n","2  Chikungunya  3.206716e+05  -2327.547307\n","3     Varicela  2.075051e+06    -30.188747"],"text/html":["\n","  <div id=\"df-95230312-a2d0-4a98-94c1-d3f4ea145bfb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Disease</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dengue</td>\n","      <td>1.799292e+05</td>\n","      <td>-0.042953</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Zika</td>\n","      <td>5.541399e+05</td>\n","      <td>-21459.447219</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chikungunya</td>\n","      <td>3.206716e+05</td>\n","      <td>-2327.547307</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Varicela</td>\n","      <td>2.075051e+06</td>\n","      <td>-30.188747</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-95230312-a2d0-4a98-94c1-d3f4ea145bfb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-95230312-a2d0-4a98-94c1-d3f4ea145bfb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-95230312-a2d0-4a98-94c1-d3f4ea145bfb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d030a1e6-8645-41a7-a514-eb47754a8ded\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d030a1e6-8645-41a7-a514-eb47754a8ded')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d030a1e6-8645-41a7-a514-eb47754a8ded button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d0f16d9a-598b-4230-9c87-1ec2659c4591\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d0f16d9a-598b-4230-9c87-1ec2659c4591 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Disease\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Zika\",\n          \"Varicela\",\n          \"Dengue\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 875445.1573261343,\n        \"min\": 179929.24050393977,\n        \"max\": 2075050.7191007228,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          554139.9168978756,\n          2075050.7191007228,\n          179929.24050393977\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10394.08800687936,\n        \"min\": -21459.447218605088,\n        \"max\": -0.04295338194956422,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -21459.447218605088,\n          -30.188746852861303,\n          -0.04295338194956422\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["results = {}\n","\n","# Create a list of dataframes, their names, and the column to analyze\n","dfs = [(df_dengue, 'Dengue', 'Casos'), (df_zika, 'Zika', 'Casos'),\n"," (df_chic, 'Chikungunya', 'Casos'), (df_var, 'Varicela', 'Casos')]\n","\n","fig, axes = plt.subplots(nrows=len(dfs), ncols=1, figsize=(10, 6 * len(dfs)))\n","\n","for i, (df, name, column) in enumerate(dfs):\n","    try:\n","        series = df[column]\n","\n","        # Train-test split (20% train, 80% test)\n","        train_size = int(len(series) * 0.10)\n","        train_data, test_data = series[:train_size], series[train_size:]\n","\n","        model = fit_arima(train_data, seasonal=False)  # Fit the model on the training data\n","\n","        # Predict only on the test data\n","        fitted_values = model.predict(n_periods=len(test_data))\n","\n","        # Calculate RMSE and R-squared on the test data\n","        rmse = sqrt(mean_squared_error(test_data, fitted_values))\n","        r2 = r2_score(test_data, fitted_values)\n","\n","        results[name] = {'rmse': rmse, 'r2': r2}\n","\n","        axes[i].plot(series, label='Observed', color='blue')\n","        axes[i].plot(test_data.index, fitted_values, label='Fitted', color='red', linestyle='--') # plot fitted values against the test data index\n","        axes[i].set_title(f'{name} - Train Test Split (20/80)')\n","        axes[i].legend()\n","\n","        print(f'{name} - R^2: {r2:.4f}, RMSE: {rmse:.4f}')\n","\n","    except Exception as e:\n","        print(f\"Error processing {name}: {e}\")\n","        axes[i].set_title(f\"Error: {name}\")\n","\n","plt.tight_layout()\n","plt.show()\n","\n","results_df = pd.DataFrame.from_dict(results, orient='index')\n","results_df.index.name = 'Disease'\n","results_df = results_df.reset_index()\n","results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"NQ5fm1wFFdxT","executionInfo":{"status":"ok","timestamp":1741357398393,"user_tz":-60,"elapsed":7038,"user":{"displayName":"Daniel Gutierrez","userId":"01266494348157903903"}},"outputId":"5aad76c4-0321-4965-8d07-039b414379b4"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,0,2)(0,0,0)[0]             : AIC=913.480, Time=0.24 sec\n"," ARIMA(0,0,0)(0,0,0)[0]             : AIC=1272.344, Time=0.02 sec\n"," ARIMA(1,0,0)(0,0,0)[0]             : AIC=inf, Time=0.03 sec\n"," ARIMA(0,0,1)(0,0,0)[0]             : AIC=1176.171, Time=0.06 sec\n"," ARIMA(1,0,2)(0,0,0)[0]             : AIC=915.680, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,0,1)(0,0,0)[0]             : AIC=912.082, Time=0.14 sec\n"," ARIMA(1,0,1)(0,0,0)[0]             : AIC=913.779, Time=0.07 sec\n"," ARIMA(2,0,0)(0,0,0)[0]             : AIC=inf, Time=0.06 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,0,1)(0,0,0)[0]             : AIC=913.539, Time=0.27 sec\n"," ARIMA(3,0,0)(0,0,0)[0]             : AIC=inf, Time=0.08 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,0,2)(0,0,0)[0]             : AIC=inf, Time=0.32 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,0,1)(0,0,0)[0] intercept   : AIC=899.499, Time=0.25 sec\n"," ARIMA(1,0,1)(0,0,0)[0] intercept   : AIC=900.769, Time=0.14 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,0,0)(0,0,0)[0] intercept   : AIC=900.755, Time=0.11 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(3,0,1)(0,0,0)[0] intercept   : AIC=900.984, Time=0.22 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,0,2)(0,0,0)[0] intercept   : AIC=899.169, Time=0.30 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,0,2)(0,0,0)[0] intercept   : AIC=897.174, Time=0.21 sec\n"," ARIMA(0,0,2)(0,0,0)[0] intercept   : AIC=899.921, Time=0.09 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,0,3)(0,0,0)[0] intercept   : AIC=899.319, Time=0.15 sec\n"," ARIMA(0,0,1)(0,0,0)[0] intercept   : AIC=922.508, Time=0.10 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,0,3)(0,0,0)[0] intercept   : AIC=897.776, Time=0.33 sec\n"," ARIMA(2,0,3)(0,0,0)[0] intercept   : AIC=901.027, Time=0.18 sec\n","\n","Best model:  ARIMA(1,0,2)(0,0,0)[0] intercept\n","Total fit time: 3.463 seconds\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Dengue - R^2: -0.7457, RMSE: 743.9980\n","Performing stepwise search to minimize aic\n"," ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=501.910, Time=0.15 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=497.128, Time=0.01 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=496.510, Time=0.02 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=496.208, Time=0.07 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=496.360, Time=0.01 sec\n"," ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=498.063, Time=0.13 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=498.128, Time=0.07 sec\n"," ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=500.078, Time=0.14 sec\n"," ARIMA(0,1,1)(0,0,0)[0]             : AIC=495.154, Time=0.03 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0]             : AIC=497.075, Time=0.07 sec\n"," ARIMA(0,1,2)(0,0,0)[0]             : AIC=497.117, Time=0.06 sec\n"," ARIMA(1,1,0)(0,0,0)[0]             : AIC=495.371, Time=0.02 sec\n"," ARIMA(1,1,2)(0,0,0)[0]             : AIC=inf, Time=0.07 sec\n","\n","Best model:  ARIMA(0,1,1)(0,0,0)[0]          \n","Total fit time: 0.857 seconds\n","Zika - R^2: -61.8603, RMSE: 3112.4254\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=inf, Time=0.25 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=597.987, Time=0.01 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=598.226, Time=0.04 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=598.229, Time=0.08 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=596.695, Time=0.01 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=600.059, Time=0.10 sec\n","\n","Best model:  ARIMA(0,1,0)(0,0,0)[0]          \n","Total fit time: 0.498 seconds\n","Chikungunya - R^2: -27.2425, RMSE: 1498.2051\n","Performing stepwise search to minimize aic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:837: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n","  return get_prediction_index(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=1097.235, Time=0.35 sec\n"," ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=1112.977, Time=0.02 sec\n"," ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=1095.440, Time=0.04 sec\n"," ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=1093.771, Time=0.09 sec\n"," ARIMA(0,1,0)(0,0,0)[0]             : AIC=1112.122, Time=0.02 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=1095.125, Time=0.10 sec\n"," ARIMA(0,1,2)(0,0,0)[0] intercept   : AIC=1095.146, Time=0.12 sec\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":[" ARIMA(1,1,2)(0,0,0)[0] intercept   : AIC=1097.106, Time=0.18 sec\n"," ARIMA(0,1,1)(0,0,0)[0]             : AIC=1095.981, Time=0.05 sec\n","\n","Best model:  ARIMA(0,1,1)(0,0,0)[0] intercept\n","Total fit time: 0.988 seconds\n","Varicela - R^2: -91.4083, RMSE: 7247.2087\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/sklearn/utils/deprecation.py:151: FutureWarning: 'force_all_finite' was renamed to 'ensure_all_finite' in 1.6 and will be removed in 1.8.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x2400 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["       Disease         rmse         r2\n","0       Dengue   743.998044  -0.745675\n","1         Zika  3112.425431 -61.860310\n","2  Chikungunya  1498.205148 -27.242497\n","3     Varicela  7247.208702 -91.408298"],"text/html":["\n","  <div id=\"df-f9174f8b-fbae-4f2d-8dbf-58372bf0fd0c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Disease</th>\n","      <th>rmse</th>\n","      <th>r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dengue</td>\n","      <td>743.998044</td>\n","      <td>-0.745675</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Zika</td>\n","      <td>3112.425431</td>\n","      <td>-61.860310</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chikungunya</td>\n","      <td>1498.205148</td>\n","      <td>-27.242497</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Varicela</td>\n","      <td>7247.208702</td>\n","      <td>-91.408298</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9174f8b-fbae-4f2d-8dbf-58372bf0fd0c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9174f8b-fbae-4f2d-8dbf-58372bf0fd0c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9174f8b-fbae-4f2d-8dbf-58372bf0fd0c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d0a2b14f-d1d4-41a2-b8bc-2f017eed97dd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0a2b14f-d1d4-41a2-b8bc-2f017eed97dd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d0a2b14f-d1d4-41a2-b8bc-2f017eed97dd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_fd1a3e3b-7c5b-4ec1-9fdf-5a4816369d7a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fd1a3e3b-7c5b-4ec1-9fdf-5a4816369d7a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Disease\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Zika\",\n          \"Varicela\",\n          \"Dengue\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2904.3531577025506,\n        \"min\": 743.9980444181698,\n        \"max\": 7247.208701864527,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3112.425430569952,\n          7247.208701864527,\n          743.9980444181698\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.629027462910145,\n        \"min\": -91.40829755823076,\n        \"max\": -0.7456753169090911,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -61.860310388667166,\n          -91.40829755823076,\n          -0.7456753169090911\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":37}]}]}